{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","components/ui/Loading.js","pages/LoadingScreen.js","components/ui/AnimatedBackground.js","helpers/toggleShowPassword.js","helpers/inputChecks.js","components/ui/LoadingPopup.js","components/ui/ToastError.js","pages/LoginScreen.js","actions/nav.js","components/ui/Navbar.js","helpers/countTotalTimeOperations.js","components/ui/ToastSuccess.js","actions/warehouse.js","actions/calendar.js","actions/factory.js","actions/technician.js","actions/warnings.js","actions/statistics.js","components/ui/TopBar.js","actions/ui.js","helpers/disable-enable-scroll.js","helpers/getOrderById.js","helpers/helpersHistorical.js","components/calendar/CalendarModal.js","components/dashboard/TableDashboard.js","helpers/getColumnsTables.js","components/ui/ModalToastify.js","components/dashboard/ModalWarning.js","pages/DashboardScreen.js","helpers/getOrdersStillOpen.js","components/admin/AdminModal.js","pages/AdminScreen.js","helpers/getMachinesByNumberId.js","helpers/getSectionsByFactoryId.js","helpers/getSectionNumbersBySectionId.js","components/order/OperationModalAdd.js","components/order/OperationModalUpdate.js","components/order/TabOperations.js","helpers/getTechnicianNameById.js","components/order/ClockInOutModalAdd.js","components/order/ClockInOutModalUpdate.js","components/order/TabClockInOut.js","components/order/MaterialModalAdd.js","components/order/MaterialModalUpdate.js","components/order/TabMaterials.js","components/ui/BackgroundModal.js","components/order/OrderForm.js","pages/OrderScreen.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","pages/CalendarScreen.js","helpers/getEventColor.js","components/ui/ButtonNew.js","helpers/checkImageSizeAndType.js","components/crew/CrewModal.js","pages/CrewScreen.js","components/warehouse/Table.js","components/warehouse/WarehouseModal.js","pages/WarehouseScreen.js","components/historical/TableHistorical.js","pages/HistoricalScreen.js","pages/StatisticsScreen.js","pages/Error404Screen.js","components/doc/PdfLoader.js","components/doc/PdfPage.js","components/doc/PdfModal.js","helpers/checkDocSizeAndType.js","components/doc/PdfModalAdd.js","pages/DocsScreen.js","helpers/getDocById.js","helpers/getDocsBySectionId.js","pages/NewOrderScreen.js","components/ui/ResponsiveNav.js","router/MainRouter.js","helpers/checkTokenDate.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/navReducer.js","reducers/crewReducer.js","reducers/uiReducer.js","reducers/warehouseReducer.js","reducers/factoryReducer.js","reducers/warningReducer.js","reducers/statisticsReducer.js","reducers/rootReducer.js","store/store.js","MtileApp.js","index.js"],"names":["baseUrl","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","fetchWithFile","a","fetchOperations","id","arrayOperation","operations_added","items","resp","json","new_operation","push","fetchDataWeeksSections","section","weeks","temp","name","week","length","total","Math","floor","random","types","authLogin","email","password","dispatch","startLoadingLogin","ok","uid","setTimeout","finishLoadingLogin","setItem","login","msg","console","log","user","type","payload","startChecking","Date","getTime","finishChecking","startAddUser","startUpdateUser","userData","startDeleteUser","undefined","active","Loading","className","LoadingScreen","AnimatedBackground","toggleShowPassword","input","document","querySelector","icon","classList","contains","remove","add","checkLoginUser","RegExp","test","checkLoginPassword","trim","LoadingPopup","ToastError","text","LoginScreen","useState","formValues","setFormValues","loadingLogin","useSelector","state","auth","useDispatch","handleInputChange","target","value","handleSubmitLogin","e","preventDefault","valid","toast","error","src","process","alt","onSubmit","onChange","autoComplete","onClick","toggleNav","toggleResponsive","Navbar","navExtended","nav","admin","handleToggleNav","onClickAway","exact","to","activeClassName","countTotalTimeOperations","eventData","count","operations","operation","parseFloat","time","ToastSuccess","startGetWarehouseItems","loadWarehouseItems","removeActiveItem","updateItem","item","addItem","removeItem","setActiveEvent","event","clearActiveEvent","loadOrderEvents","events","startAddOrderEvent","totalMins","materials","clocks","newEvent","array_operations","array_clocks","array_materials","addOrderEvent","message","startUpdateOrderEvent","closed","confirmed","material","code","quantity","newItem","updateOrderEvent","startDeleteOrderEvent","deleteOrderEvent","startLoadOrderTypes","loadOrderTypes","orderTypes","startLoadBreakdownTypes","breakdowns","loadBreakdownTypes","breakdownTypes","startLoadFactory","startSetFactories","startSetSections","startSetMachines","startSetNumberSections","startSetDocs","factories","setFactories","sections","setSections","machines","setMachines","numbers","setNumberSections","docs","setDocs","addDoc","doc","deleteDoc","clearActiveTechnician","loadCrew","crew","addNewTechnician","technician","updateTechnician","deleteTechnician","clearTechnicians","loadWarnings","warnings","deleteWarning","addWarning","warning","startloadingStatistics","startLoadWeeks","startLoadThreeWeeksSections","startLoadlastWeekByOrderType","startLoadIntervetionsWeeks","startLoadTotalTimeByWeek","startLoadlastWeekByBreakdown","startLoadlastWeekByTechnician","dataWeeks","loadWeeks","getState","statistics","arrayDatos","loadThreeWeeksSections","orderTypeWeeks","quantities","names","orderTypeWeek","loadLastWeekByOrderType","breakdownWeeks","loadLastWeekByBreakdown","techniciansWeeks","technicianWeek","loadLastWeekByTechnician","interventionsWeeks","weeksIntervetions","weeksInterventionsCounts","intervetionWeek","loadInterventionsWeeks","totalTimeWeeks","weeksTime","weeksTotalTime","timeWeek","loadTotalTimeByWeek","TopBar","history","useHistory","clear","uiOpenModal","uiCloseModal","disableScroll","scrollTop","window","pageYOffset","documentElement","scrollLeft","pageXOffset","onscroll","scrollTo","enableScroll","getOrderById","find","toString","getNameOrderType","getNameBreakdown","getNameFactory","factory","getNameSection","getNameNumber","number","getNameMachine","machine","initialState","breakdown","description","start","end","CalendarModal","setTableModal","calendar","technicians","modalOpen","ui","activeEvent","orderType","useEffect","handleCloseModal","isOpen","onRequestClose","contentLabel","closeTimeoutMS","ariaHideApp","disabled","map","selected","timeInputLabel","dateFormat","showTimeInput","modal","TableDashboard","columns","tableModal","tableInstance","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","handleRowClick","orderId","attributes","nodeValue","order","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","row","getRowProps","cells","cell","i","data-id","original","moment","format","breakdownType","getCellProps","getColumnsTableWarehouse","Header","accessor","getColumnsTableHistorical","getColumnsTableDashboard","ModalToastify","closeToast","handleDeleteItem","stopPropagation","ModalWarning","setShowWarningModal","isValid","position","POSITION","TOP_CENTER","success","startAddWarning","DashboardScreen","showWarningModal","orders","ordersStillOpen","filter","threeWeekSections","lastWeekByOrderType","handleDeleteWarning","destroyed","startDeleteWarning","optionsDonut","labels","chart","toolbar","show","offsetX","offsetY","optionsBar","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","width","colors","xaxis","categories","title","yaxis","fill","opacity","tooltip","y","formatter","val","options","series","warn","closeOnClick","autoClose","toastId","showDeleteWarning","AdminModal","idUser","setIdUser","users","setUsers","setShow","getUser","handleSubmit","validator","isEmail","newUsers","checked","onColor","placeholder","AdminScreen","formValuesUser","setFormValuesUser","formValuesOrder","setFormValuesOrder","isAdmin","setIsAdmin","loadUsers","handleInputChangeUser","handleDeleteUser","handleSubmitUser","handleSubmitOrder","Number","isInteger","isNumeric","handleStartDeleteUser","getMachinesByNumberId","numberId","getSectionsByFactoryId","factoryId","getSectionNumbersBySectionId","sectionId","OperationModalAdd","setShowAddModal","subFormValues","setSubFormValues","isNaN","parseInt","indexOf","split","splitted","min","step","OperationModalUpdate","index","setIndex","TabOperations","showAddModal","handleDeleteOperation","newOperations","handleDelete","handleUpdateOperation","getTechnicianNameById","ClockInOutModalAdd","userId","toDate","startWork","isSameOrAfter","locale","es","minDate","ClockInOutModalUpdate","clock","TabClockInOut","handleDeleteClockInOut","newClocks","handleUpdateModal","MaterialModalAdd","warehouse","searchResults","setSearchResults","search","setSearch","itemSelected","setItemSelected","toLowerCase","includes","handleAdd","result","MaterialModalUpdate","TabMaterials","newMaterials","handleUpdateItem","BackgroundModal","setShowModal","Object","keys","onClose","handleError","transition","Flip","worker","startFix","endFix","OrderForm","showResponsive","selectedSections","setSelectedSections","selectedSectionsNumbers","setSelectedSectionsNumbers","selectedMachines","setSelectedMachines","showModal","setResult","breadMessage","setBreadMessage","factorySections","sectionNumbers","sectionMachines","location","pathname","handleLockChange","isBefore","isAfter","isSameOrBefore","goBack","OrderScreen","isLoading","setIsLoading","showLoading","messages","allDay","previous","next","today","month","day","agenda","date","noEventsInRange","showMore","CalendarEvent","factoryComponent","sectionComponent","machineComponent","setData","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","defaultDate","defaultView","eventPropGetter","isSelected","backgroundColor","textColor","typeId","getEventColor","style","borderRadius","display","color","components","onSelectEvent","onView","view","startAccessor","endAccessor","ButtonNew","iconData","checkImageSizeAndType","file","isImage","checkSize","size","URL","createObjectURL","Promise","resolve","res","imgType","surname","birthDate","identityDocument","phoneNumber","city","address","image","notes","schedule","CrewModal","setFile","activeTechnician","handlePictureChange","files","tempFile","check","handleDeleteTechnician","failed","isMobilePhone","isIdentityCard","technicianValues","fileName","formData","FormData","append","startUpdateTechnician","startAddTechnician","timeFormat","closeOnSelect","accept","CrewScreen","openModalTechnician","clickedTechnician","page","Table","usePagination","pageOptions","pageIndex","previousPage","nextPage","canPreviousPage","canNextPage","refElement","parentNode","childNodes","innerText","setActiveItem","minStock","place","WarehouseModal","activeItem","cleanFormValues","rest","savedItem","startAddItem","WarehouseScreen","showed","setShowed","onBlur","focus","TableHistorical","factoryName","sectionName","sectionNumber","machineName","HistoricalScreen","StatisticsScreen","totalTimeByWeek","lastWeekByBreakdown","lastWeekByTechnician","optionsDonutOrderType","fontSize","fontWeight","fontFamily","optionsDonutBreakdown","optionsDonutTechnician","legend","responsive","breakpoint","dataBarInterventionsWeeks","click","w","distributed","dataBarTotalTimeWeeks","zoom","Error404Screen","pdfjsWorker","pdfjs","GlobalWorkerOptions","workerSrc","PdfLoader","setNumPages","pageNumber","setPageNumber","loading","onLoadSuccess","numPages","renderMode","PdfPage","changePage","offset","prevPageNumber","PdfModal","setShowModalDoc","resetData","activeDoc","handleDeleteDoc","info","isPdf","PdfModalAdd","formIsValid","uploadedDoc","defaultValue","checkFile","DocsScreen","showSections","setShowSections","showPdf","setShowPdf","isRotateFactory","setIsRotateFactory","isRotateSection","setIsRotateSection","optionsSelected","setOptionsSelected","showModalDoc","handleClickAway","toggleFactory","toggleSection","handleDocClick","docData","getDocById","clicker","clickerSelect","sectionDocs","getDocsBySectionId","pdf","NewOrderScreen","ResponsiveNav","MainRouter","abs","round","checkTokenDate","eventsWithData","path","component","PrivateRoute","isAuthenticated","Component","props","PublicRoute","AppRouter","checking","basename","rootReducer","combineReducers","action","t","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","MtileApp","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8b2d61d6.chunk.js","sourcesContent":["\n\nconst baseUrl = 'http://localhost:8088/api';\n\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}\n\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    switch (method) {\n        case 'GET':\n            return fetch(url, {\n                method,\n                headers: {\n                    'x-token': token\n                },\n            });\n\n        case 'POST':\n            return fetch(url, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-token': token\n                },\n                body: JSON.stringify(data)\n            });\n\n        case 'DELETE':\n            return fetch(url, {\n                method,\n                headers: {\n                    'x-token': token\n                }\n            });\n\n        case 'PUT':\n            return fetch(url, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-token': token\n                },\n                body: JSON.stringify(data)\n            });\n\n        default:\n            return false;\n    }\n}\n\nconst fetchWithFile = async (endpoint, data) => {\n\n    const token = localStorage.getItem('token') || '';\n    const url = `${baseUrl}/${endpoint}`;\n\n    return fetch(url, {\n        method: 'POST',\n        headers: {\n            'x-token': token\n        },\n        body: data\n    });\n\n}\n\nconst fetchOperations = async (id, endpoint, arrayOperation, method = 'POST') => {\n\n    const operations_added = [];\n\n    for (const items of arrayOperation) {\n        const resp = await fetchWithToken(`events/${endpoint}/${id}`, items, method);\n        const { new_operation } = await resp.json();\n\n        if (new_operation) {\n            operations_added.push(new_operation);\n        }\n    }\n\n    return operations_added;\n}\n\nconst fetchDataWeeksSections = async (section, weeks) => {\n    const temp = {\n        name: section,\n        data: []\n    }\n\n    for (const week of weeks) {\n\n        const resp = await fetchWithToken(`statistics/section/${week}`, { section: section }, 'POST');\n        const { data } = await resp.json();\n\n        if (data.length > 0) {\n            temp.data.push(data[0].total);\n        } else {\n            // temp.data.push(0);\n            temp.data.push(Math.floor((Math.random() + 1) * 10));\n        }\n    }\n\n    return temp;\n}\n\n\nexport {\n    fetchWithoutToken,\n    fetchWithToken,\n    fetchWithFile,\n    fetchOperations,\n    fetchDataWeeksSections\n}","export const types = {\n\n    /* login */\n    authLogin: '[auth] User Login',\n    authLogout: '[auth] User Logout',\n    authCheckingFinish: '[auth] Checking Finish',\n    authLoadingStart: '[auth] Loading Start',\n    authLoadingFinish: '[auth] Loading Finish',\n\n    /* show/hide extended nav */\n    toggleNav: '[nav] Toggle Nav',\n    toggleResponsiveNav: '[nav] Toggle Responsive',\n\n    /* modal */\n    uiOpenModal: \"[UI] Open Modal\",\n    uiCloseModal: \"[UI] Close Modal\",\n\n    /* calendar */\n    eventSetActive: \"[event] Set Active\",\n    eventClearActive: \"[event] Clear Active\",\n    eventCleaner: \"[event] Clean events\",\n    loadOrderEvents: \"[event] Load Order Events\",\n    loadOrderTypes: \"[event] Load Order Types\",\n    loadBreakdownTypes: \"[event] Load Breakdown Types\",\n    addOrderEvent: \"[event] Add Order Event\",\n    updateOrderEvent: \"[event] Update Order Event\",\n    deleteOrderEvent: \"[event] delete Order Event\",\n\n    /* crew */\n    crewLoadTechnicians: \"[crew] Load techinicians\",\n    crewSetActive: \"[crew] Set active\",\n    crewClearActive: \"[crew] Clear active\",\n    crewAddNewTechnician: \"[crew] Add new technician\",\n    crewUpdateTechnician: \"[crew] Update technician\",\n    crewDeleteTechnician: \"[crew] Delete technician\",\n    crewClearTechnician: \"[crew] Clear Technicians\",\n\n    /* warehouse */\n    warehouseLoaded: \"[warehouse] Loaded Data\",\n    warehouseRemoveItem: \"[warehouse] Remove Item\",\n    warehouseAddItem: \"[warehouse] Add Item\",\n    warehouseUpdateItem: \"[warehouse] Update Item\",\n    warehouseSetActiveItem: \"[warehouse] Set Active Item\",\n    warehouseRemoveActiveItem: \"[warehouse] Remove Active Item\",\n    warehouseClear: \"[warehouse] Clear All\",\n\n    /* factory */\n    factorySetFactories: \"[factories] Set Factories\",\n    factorySetSections: \"[factories] Set Sections\",\n    factorySetMachines: \"[factories] Set Machines\",\n    factorySetNumberSections: \"[factories] Set Number Sections\",\n    factorySetDocs: \"[factories] Set Docs\",\n    factorySetActiveDoc: \"[factories] Set Active Doc\",\n    factoryClearActiveDoc: \"[factories] Clear Active Doc\",\n    factoryAddDoc: \"[factories] Add Doc\",\n    factoryDeleteDoc: \"[factories] Delete Doc\",\n    factoryClearFactory: \"[factories] Clear Factory\",\n\n    /* warnings */\n    warningLoadWarnings: \"[warnings] Load warnings\",\n    warningAddWarning: \"[warnings] Add warning\",\n    warningRemoveWarning: \"[warnings] Remove warning\",\n    warningClear: \"[warnings] Clear All\",\n\n    /* statistics */\n    statisticsLoadWeeks: \"[statistics] Load Weeks\",\n    statisticsLoadThreeWeeksSections: \"[statistics] Load 3 Weeks Sections\",\n    statisticsLoadlastWeekByOrderType: \"[statistics] Load Last Week by OrderType\",\n    statisticsLoadlastWeekByBreakdown: \"[statistics] Load Last Week by Breakdown\",\n    statisticsLoadlastWeekByTechnician: \"[statistics] Load Last Week by Technician\",\n    statisticsLoadInterventionsWeeks: \"[statistics] Load Interventions by Week\",\n    statisticsLoadTotalTimeByWeek: \"[statistics] Load Total Time by Week\",\n    statisticsClear: \"[statistics] Clear All\",\n}","// We can use dispatch in this actions file, because the middleware *thunk*.\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\"\n\n\n// Login fetch without token\nexport const authLogin = (email, password) => {\n\n    return async (dispatch) => {\n        dispatch(startLoadingLogin());\n\n        try {\n            const resp = await fetchWithoutToken('users/', { email, password }, 'POST');\n            const body = await resp.json();\n\n            if (body.ok) {\n                const { name, uid, token } = body;\n\n                setTimeout(() => {\n\n                    dispatch(finishLoadingLogin());\n\n                    localStorage.setItem('token', token);\n                    dispatch(login({\n                        uid,\n                        name\n                    }));\n\n                    return {\n                        ok: true\n                    }\n                }, 500);\n\n            } else {\n                return {\n                    ok: false,\n                    msg: 'Usuario y/o password incorrectos'\n                }\n            }\n\n        } catch (error) {\n            console.log(error)\n            return {\n                ok: false,\n                msg: 'Error con la conexión, contacte con el administrador'\n            }\n        }\n\n    }\n}\n\n// login to authReducer\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n// logout to authReducer\nexport const logout = () => ({\n    type: types.authLogout\n});\n\n\nconst startLoadingLogin = () => ({\n    type: types.authLoadingStart\n});\n\nexport const finishLoadingLogin = () => ({\n    type: types.authLoadingFinish\n});\n\n// On every Refresh, will check if usertoken is in localStorage and will renew it\nexport const startChecking = () => {\n\n    return async (dispatch) => {\n\n        try {\n            //fetch with token to backend, if ok, dispatch(login), else finishChecking\n            const resp = await fetchWithToken(\"users/renew\");\n            const body = await resp.json();\n\n            if (body.ok) {\n\n                localStorage.setItem(\"token\", body.token);\n                localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n                dispatch(finishChecking());\n\n                return dispatch(\n                    login({\n                        uid: body.uid,\n                        name: body.name\n                    })\n                );\n            } else {\n                dispatch(finishChecking());\n            }\n        } catch (error) {\n            console.log(error)\n            dispatch(finishChecking());\n        }\n    }\n}\n\n// If the token is outdated or doesn't exist, this function will set auth.checking to false\nconst finishChecking = () => ({\n    type: types.authCheckingFinish,\n});\n\nexport const startAddUser = (user) => {\n\n    return async () => {\n\n        try {\n            const resp = await fetchWithToken('users/new', user, 'POST');\n            const data = await resp.json();\n            const msg = data?.msg;\n\n\n            if (data?.ok) {\n\n                return ({\n                    user: data.user,\n                    ok: true,\n                    msg: 'Usuario creado correctamente'\n                });\n\n            } else {\n                return ({\n                    ok: false,\n                    msg\n                });\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nexport const startUpdateUser = (userData) => {\n\n    return async () => {\n\n        try {\n\n            const resp = await fetchWithToken(`users/${userData.id}`, userData, 'PUT');\n            const { user } = await resp.json();\n\n            if (user) {\n                return ({\n                    ok: true,\n                    msg: 'Usuario editado correctamente',\n                    user\n                });\n            } else {\n                return ({\n                    ok: false,\n                    msg: 'Error al actualizar el usuario, inténtelo de nuevo más tarde',\n                });\n            }\n        } catch (error) {\n            console.log(error);\n            return ({\n                ok: false,\n                msg: 'Error al conectar con la BBDD, contacte con el administrador',\n            });\n        }\n\n\n    }\n\n}\n\nexport const startDeleteUser = (id) => {\n\n    return async () => {\n\n        try {\n\n            const resp = await fetchWithToken(`users/${id}`, undefined, 'DELETE');\n            const { user } = await resp.json();\n\n            console.log(user)\n            if (!user.active) {\n                return ({\n                    ok: true,\n                    msg: 'Usuario borrado correctamente',\n                    user,\n                });\n            } else {\n                return ({\n                    ok: false,\n                    msg: 'Error al borrar el usuario, inténtelo de nuevo más tarde',\n                    user,\n                });\n            }\n\n        } catch (error) {\n            console.log(error);\n            return ({\n                ok: false,\n                msg: 'Error al borrar el usuario, inténtelo de nuevo más tarde',\n            });\n        }\n\n    }\n\n}","import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"loading-component animate__animated animate__fadeIn\">\n            <h1>Cargando\n                <span className=\"dot dot-1\"> . </span>\n                <span className=\"dot dot-2\">. </span>\n                <span className=\"dot dot-3\">. </span>\n            </h1>\n\n            <div className=\"loading-bar-wrapper\">\n                <div className=\"loading-bar-1\"></div>\n                <div className=\"loading-bar-2\"></div>\n                <div className=\"loading-bar-3\"></div>\n                <div className=\"loading-bar-4\"></div>\n                <div className=\"loading-bar-5\"></div>\n                <div className=\"loading-bar-6\"></div>\n                <div className=\"loading-bar-7\"></div>\n                <div className=\"loading-bar-8\"></div>\n                <div className=\"loading-bar-9\"></div>\n                <div className=\"loading-bar-10\"></div>\n                <div className=\"loading-bar-11\"></div>\n                <div className=\"loading-bar-12\"></div>\n                <div className=\"loading-bar-13\"></div>\n                <div className=\"loading-bar-14\"></div>\n                <div className=\"loading-bar-15\"></div>\n                <div className=\"loading-bar-16\"></div>\n                <div className=\"loading-bar-17\"></div>\n                <div className=\"loading-bar-18\"></div>\n            </div>\n        </div >\n    )\n}\n","import React from 'react'\nimport { Loading } from '../components/ui/Loading'\n\nexport const LoadingScreen = () => {\n    return (\n        <div className=\"loading-screen-wrapper animate__animated animate__fadeIn animate__faster\">\n            <Loading />\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const AnimatedBackground = () => {\n    return (\n        <>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n        </>\n    )\n}\n","export const toggleShowPassword = () => {\n    const input = document.querySelector('input[name=\"password\"]');\n    const icon = document.querySelector('.icon-pwd');\n\n    input.type === 'password' ? input.type = \"text\" : input.type = \"password\";\n\n    if (icon.classList.contains('fa-eye-slash')) {\n        icon.classList.remove('fa-eye-slash');\n        icon.classList.add('fa-eye');\n    } else {\n        icon.classList.remove('fa-eye');\n        icon.classList.add('fa-eye-slash');\n    }\n}","\n// Check username length and add or remove additional ui classes to user input.\nexport const checkLoginUser = (user) => {\n\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n    if (!pattern.test(user)) {\n        document.querySelector('input[name=\"user\"]').classList.add('border-red');\n        document.querySelector('.message-error-login-user').classList.add('show-error');\n        return false;\n    } else {\n        document.querySelector('input[name=\"user\"]').classList.remove('border-red');\n        document.querySelector('.message-error-login-user').classList.remove('show-error');\n        return true;\n    }\n}\n\n// Check password length and add or remove additional ui classes to password input.\nexport const checkLoginPassword = (password) => {\n    if (password.trim().length < 4) {\n        document.querySelector('input[name=\"password\"]').classList.add('border-red');\n        document.querySelector('.message-error-login-password').classList.add('show-error');\n        return false;\n    } else {\n        document.querySelector('input[name=\"password\"]').classList.remove('border-red');\n        document.querySelector('.message-error-login-password').classList.remove('show-error');\n        return true;\n    }\n}","import React from 'react'\nimport { Loading } from './Loading'\n\nexport const LoadingPopup = ({ type = 'default' }) => {\n    return (\n        <>\n            {type === 'default'\n                ? <div className=\"loading-wrapper animate__animated animate__fadeIn animate__faster\">\n                    <Loading />\n                </div>\n\n                :\n                <div className=\"loading-wrapper\">\n                    <Loading />\n                </div>\n\n            }\n\n        </>\n    )\n}\n","import React from 'react'\n\nexport const ToastError = ({ text }) => {\n    return (\n        <div className=\"toast-success-custom\">\n            <i className=\"fas fa-exclamation-triangle\"></i>\n            <p>{text}</p>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { useForm } from '../hooks/useForm'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authLogin, finishLoadingLogin } from '../actions/auth';\nimport { AnimatedBackground } from '../components/ui/AnimatedBackground';\nimport { toggleShowPassword } from '../helpers/toggleShowPassword';\nimport { checkLoginPassword, checkLoginUser } from '../helpers/inputChecks';\nimport { LoadingPopup } from '../components/ui/LoadingPopup';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ToastError } from \"../components/ui/ToastError\";\n\nexport const LoginScreen = () => {\n\n    const [formValues, setFormValues] = useState({ user: 'pacors88@gmail.com', password: 'admin123456' });\n    const { user, password } = formValues;\n    const { loadingLogin } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n\n    const handleInputChange = ({ target }) => {\n\n        const name = target?.name;\n\n        document.querySelector(`input[name=\"${name}\"]`).classList.remove('border-red');\n        document.querySelector(`.message-error-login-${name}`).classList.remove('show-error');\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    };\n\n\n    const handleSubmitLogin = async (e) => {\n        e.preventDefault();\n        let valid = true;\n\n        if (!checkLoginUser(user)) {\n            valid = false;\n        }\n        if (!checkLoginPassword(password)) {\n            valid = false;\n        }\n\n        if (!valid) {\n            return;\n        }\n\n        const resp = await dispatch(authLogin(user, password));\n\n        if (resp?.ok === false) {\n            dispatch(finishLoadingLogin());\n\n            setTimeout(() => {\n                document.querySelector(`input[name=\"user\"]`).classList.add('border-red');\n                document.querySelector(`input[name=\"password\"]`).classList.add('border-red');\n                return toast.error(<ToastError text={resp.msg} />);\n            }, 200);\n\n        }\n    }\n\n    return (\n\n        <div className='login-wrapper'>\n\n            {loadingLogin && <LoadingPopup />}\n\n            <AnimatedBackground />\n\n            <ToastContainer />\n            <div className=\"form-login-wrapper\">\n                <img src={`${process.env.PUBLIC_URL}/assets/images/mtile_login.png`} alt=\"logo_mtile\" />\n\n                <form onSubmit={handleSubmitLogin}>\n\n                    <div className=\"data-form-login\">\n                        <div className=\"login-grid\">\n                            <label>Email</label>\n                            <input\n                                type=\"text\"\n                                name=\"user\"\n                                value={user}\n                                onChange={handleInputChange}\n                                autoComplete=\"off\" />\n                        </div>\n                        <span className=\"message-error-login-user\">El email no es un email válido.</span>\n\n                        <div className=\"login-grid\">\n                            <label>Password</label>\n                            <div className=\"login-password-wrapper\">\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={handleInputChange}\n                                    autoComplete=\"off\" />\n                                <i className=\"fas fa-eye-slash icon-pwd\" onClick={toggleShowPassword}></i>\n                            </div>\n                        </div>\n                        <span className=\"message-error-login-password\">La contraseña es demasiado corta.</span>\n\n                        <div className=\"login-button-wrapper\">\n                            <button className=\"btn btn-login\" type=\"submit\">Login</button>\n                        </div>\n                    </div>\n\n                </form>\n\n            </div>\n        </div>\n\n    )\n}\n","import { types } from \"../types/types\";\n\n/* Actions to be called from a dispatch */\n\n// Extend and Reduce Nav => toggle\nexport const toggleNav = () => ({\n    type: types.toggleNav,\n});\n\n// Show and Hide Responsive Nav => toggle\nexport const toggleResponsive = () => ({\n    type: types.toggleResponsiveNav,\n});\n","import React from 'react';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { toggleNav } from '../../actions/nav';\n\nexport const Navbar = () => {\n\n    const { navExtended } = useSelector(state => state.nav);\n    const { admin } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    const handleToggleNav = () => {\n        dispatch(toggleNav());\n    }\n    const handleClickAway = () => {\n        if (!navExtended) {\n            return;\n        }\n\n        dispatch(toggleNav());\n    }\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <nav className={!navExtended ? '' : 'nav-large'}>\n\n                <div className=\"nav-icons-wrapper\">\n\n                    <div className=\"mb-3\">\n\n                        <NavLink exact to=\"/\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"fas fa-home\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Dashboard</span>\n                        </NavLink>\n\n                        {\n                            admin &&\n                            <NavLink to=\"/admin\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                                <i className=\"fas fa-user-shield\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Administrador</span>\n                            </NavLink>\n                        }\n\n                        <NavLink to=\"/neworder\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"far fa-plus-square\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Nueva orden</span>\n                        </NavLink>\n\n                        <NavLink to=\"/crew\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"fas fa-users\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Técnicos</span>\n                        </NavLink>\n\n                        <NavLink to=\"/calendar\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"far fa-calendar-alt\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Calendario</span>\n                        </NavLink>\n\n                        <NavLink to=\"/docs\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"far fa-file\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Documentación</span>\n                        </NavLink>\n\n                        <NavLink to=\"/warehouse\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"fas fa-boxes\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Almacén</span>\n                        </NavLink>\n\n                        <NavLink to=\"/statistics\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"far fa-chart-bar\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Estadísticas</span>\n                        </NavLink>\n\n                        <NavLink to=\"/history\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"fas fa-history\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Histórico</span>\n                        </NavLink>\n\n                    </div>\n\n\n                    {\n                        (!navExtended)\n                            ?\n                            (\n                                <div className=\"nav-icon-wrapper extend-nav\" onClick={handleToggleNav}>\n                                    <i className=\"fas fa-chevron-right animate__animated animate__fadeIn\"></i>\n                                </div>\n                            )\n                            :\n                            (\n                                <div className=\"nav-icon-wrapper reduce-nav nav-icon-wrapper-reset-grid animate__animated animate__fadeIn animate__slow\" onClick={handleToggleNav}>\n                                    <i className=\"fas fa-chevron-left\"></i>\n                                </div>\n                            )\n                    }\n                </div>\n\n            </nav>\n        </ClickAwayListener>\n    )\n}\n","\n// Count total amout of time in the operations of an order\nexport const countTotalTimeOperations = (eventData) => {\n\n    let count = 0;\n\n    if (eventData.operations && eventData.operations.length > 0) {\n        for (const operation of eventData.operations) {\n            count += parseFloat(operation.time * 60);\n        }\n    }\n\n    return count;\n}","import React from 'react';\n\nexport const ToastSuccess = ({ text = '' }) => {\n    return (\n        <div className=\"toast-success-custom\">\n            <i className=\"far fa-check-circle icon-toast-success\"></i>\n            <p>{text}</p>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\nimport { toast } from 'react-toastify';\nimport { ToastSuccess } from \"../components/ui/ToastSuccess\";\nimport { fetchWithToken } from \"../helpers/fetch\";\n\nexport const startGetWarehouseItems = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch items from db\n            const resp = await fetchWithToken(\"warehouse/\");\n            const { items } = await resp.json();\n\n            if (items) {\n                dispatch(loadWarehouseItems(items));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadWarehouseItems = (items) => ({\n    type: types.warehouseLoaded,\n    payload: items\n});\n\nexport const setActiveItem = (item) => ({\n    type: types.warehouseSetActiveItem,\n    payload: item\n});\n\nexport const removeActiveItem = () => ({\n    type: types.warehouseRemoveActiveItem,\n});\n\n\nexport const startUpdateItem = (item) => {\n\n    return async (dispatch) => {\n\n        try {\n            // Update item on BBDD\n            const { id, ...rest } = item;\n            const resp = await fetchWithToken(`warehouse/${id}`, { ...rest }, 'PUT');\n            const { newItem } = await resp.json();\n\n            if (newItem) {\n                dispatch(updateItem(newItem));\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Item actualizado con éxito!\" />);\n                }, 200);\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const updateItem = (item) => ({\n    type: types.warehouseUpdateItem,\n    payload: item\n});\n\nexport const startAddItem = (item) => {\n\n    return async (dispatch) => {\n\n        try {\n\n            // TODO Add item to DB\n            const resp = await fetchWithToken(`warehouse/`, { ...item }, 'POST');\n            const { savedItem } = await resp.json();\n\n            if (savedItem) {\n                dispatch(addItem(item));\n\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Item actualizado con éxito!\" />);\n                }, 200);\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst addItem = (item) => ({\n    type: types.warehouseAddItem,\n    payload: item\n});\n\nexport const startRemoveItem = () => {\n\n    return async (dispatch, getState) => {\n\n        try {\n            const { activeItem } = getState()?.warehouse;\n            const id = activeItem?.id;\n\n            if (id) {\n\n                // TODO Remove item from DB\n                const resp = await fetchWithToken(`warehouse/${id}`, {}, 'DELETE');\n                const data = await resp.json();\n                console.log(data)\n\n                dispatch(removeItem());\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Item eliminado con éxito!\" />);\n                }, 600);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst removeItem = () => ({\n    type: types.warehouseRemoveItem\n});\n\nexport const clearWarehouse = () => ({\n    type: types.warehouseClear\n});","import { types } from \"../types/types\";\nimport { fetchWithToken, fetchOperations } from \"../helpers/fetch\";\nimport { countTotalTimeOperations } from \"../helpers/countTotalTimeOperations\";\nimport { updateItem } from './warehouse';\n\n// Set the last clicked event to activeEvent\nexport const setActiveEvent = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\n// Change activeEvent to NULL\nexport const clearActiveEvent = () => ({\n    type: types.eventClearActive\n});\n\n// Return calendarReducer to its initialState\nexport const clearEvents = () => ({\n    type: types.eventCleaner\n});\n\nexport const startLoadOrderEvents = () => {\n\n    return async (dispatch) => {\n\n        // Call to load order types and breakdown types\n        dispatch(startLoadOrderTypes());\n        dispatch(startLoadBreakdownTypes());\n\n        // fetch the events\n        try {\n            const resp = await fetchWithToken(\"events/events\");\n            const { eventsWithData: events } = await resp.json();\n\n            if (events) {\n\n                for (const event of events) {\n                    event.end = new Date(event.end);\n                    event.endFix = new Date(event.endFix);\n                    event.start = new Date(event.start);\n                    event.startFix = new Date(event.startFix);\n\n                    for (const clock of event.clocks) {\n                        clock.start = new Date(clock.start)\n                        clock.end = new Date(clock.end)\n                    }\n                }\n                dispatch(loadOrderEvents(events));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n\n    }\n}\n\nconst loadOrderEvents = (events) => ({\n    type: types.loadOrderEvents,\n    payload: events\n});\n\nexport const startAddOrderEvent = (eventData) => {\n\n    return async (dispatch) => {\n\n        try {\n            const count = countTotalTimeOperations(eventData);\n            eventData.totalMins = count;\n\n            const { operations, materials, clocks, ...newEvent } = eventData;\n\n\n            // fetch the event \n            const resp = await fetchWithToken(\"events/events\", newEvent, 'POST');\n            const { event } = await resp.json();\n\n            if (event) {\n                // Get the generated ID\n                const { id } = event;\n\n                // fetch the operations, clocks and materials with the eventID generated\n                const array_operations = await fetchOperations(id, 'operation', operations);\n                const array_clocks = await fetchOperations(id, 'clock', clocks);\n                const array_materials = await fetchOperations(id, 'item', materials);\n\n                // Add the operations, clocks, materials from backend to event\n                event.operations = array_operations;\n                event.clocks = array_clocks;\n                event.materials = array_materials;\n\n                // Add the new event to the state\n                dispatch(addOrderEvent(event));\n\n                return {\n                    ok: true,\n                    message: 'Orden creada correctamente!'\n                }\n            } else {\n                //error\n                return {\n                    ok: false,\n                    message: 'No se ha podido guardar la orden!'\n                }\n            }\n\n        } catch (error) {\n            console.log(error);\n            return {\n                ok: false,\n                message: 'Error al guardar en la BBDD, contacte con el administrador!'\n            }\n        }\n    }\n}\n\nconst addOrderEvent = (event) => ({\n    type: types.addOrderEvent,\n    payload: event\n});\n\nexport const startUpdateOrderEvent = (eventData) => {\n\n    return async (dispatch) => {\n\n        const { id, operations, materials, clocks, ...newEvent } = eventData;\n\n        const count = countTotalTimeOperations(eventData);\n        newEvent.totalMins = count;\n\n        // If the order is closed, set confirmed to true\n        if (eventData.closed === true || eventData.closed === 1) {\n            newEvent.confirmed = true;\n        }\n\n        try {\n            //fetch the event \n            const resp = await fetchWithToken(`events/events/${id}`, newEvent, 'PUT');\n            const { event } = await resp.json();\n\n            if (event) {\n\n                // Remove previous operations, clocks, and items\n                await fetchWithToken(`events/operation/${id}`, undefined, 'DELETE');\n                await fetchWithToken(`events/clock/${id}`, undefined, 'DELETE');\n                await fetchWithToken(`events/item/${id}`, undefined, 'DELETE');\n\n                // fetch the operations with the eventID updated\n                let array_operations = [];\n                if (operations.length > 0) {\n                    array_operations = await fetchOperations(id, 'operation', operations);\n                }\n                event.operations = array_operations;\n\n                // fetch the clocks with the eventID updated\n                let array_clocks = [];\n                if (clocks.length > 0) {\n                    array_clocks = await fetchOperations(id, 'clock', clocks);\n                }\n                event.clocks = array_clocks;\n\n                // fetch the items with the eventID updated\n                let array_materials = [];\n                if (materials.length > 0) {\n                    array_materials = await fetchOperations(id, 'item', materials);\n                }\n                event.materials = array_materials;\n\n                // If the order is closed, confirm that discounting the items in the warehouse\n                if (event.confirmed) {\n                    for (const material of event.materials) {\n                        const resp = await fetchWithToken(`warehouse/subtract/${material.code}`, { quantity: material.quantity }, 'PUT');\n                        const { newItem } = await resp.json();\n\n                        // add the item with the amount discounted to the warehouse\n                        if (newItem) {\n                            dispatch(updateItem(newItem));\n                        }\n                    }\n                }\n                // Add the new event to the state\n                dispatch(updateOrderEvent(event));\n\n                return {\n                    ok: true,\n                    message: 'Orden creada correctamente!'\n                }\n            } else {\n                //error\n                return {\n                    ok: false,\n                    message: 'No se ha podido guardar la orden!'\n                }\n            }\n\n        } catch (error) {\n            console.log(error);\n            return {\n                ok: false,\n                message: 'Error al guardar en la BBDD, contacte con el administrador!'\n            }\n        }\n    }\n}\n\nconst updateOrderEvent = (event) => ({\n    type: types.updateOrderEvent,\n    payload: event\n});\n\nexport const startDeleteOrderEvent = (id) => {\n\n    return async (dispatch) => {\n\n        // fetch the events\n        try {\n            if (id) {\n\n                const resp = await fetchWithToken(`events/events/${id}`, undefined, 'DELETE');\n                const { active } = await resp.json();\n\n                if (active === 0) {\n                    dispatch(deleteOrderEvent(id));\n\n                    return ({\n                        ok: true,\n                        msg: 'Orden borrada correctamente'\n                    });\n\n                } else {\n                    return ({\n                        ok: false,\n                        msg: 'Error, la orden no existe'\n                    });\n                }\n            }\n        } catch (error) {\n            console.log(error);\n            return ({\n                ok: false,\n                msg: 'Error al conectar con la BBDD, hable con su administrador'\n            });\n        }\n\n    }\n}\n\nconst deleteOrderEvent = (id) => ({\n    type: types.deleteOrderEvent,\n    payload: id\n});\n\nconst startLoadOrderTypes = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the types\n            const resp = await fetchWithToken(\"events/types\");\n            const { types } = await resp.json();\n\n            if (types) {\n                dispatch(loadOrderTypes(types));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n\n    }\n}\nconst loadOrderTypes = (orderTypes) => ({\n    type: types.loadOrderTypes,\n    payload: orderTypes\n});\n\nconst startLoadBreakdownTypes = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the breakdowns\n            const resp = await fetchWithToken(\"events/breakdowns\");\n            const { breakdowns } = await resp.json();\n\n            if (breakdowns) {\n                dispatch(loadBreakdownTypes(breakdowns));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nconst loadBreakdownTypes = (breakdownTypes) => ({\n    type: types.loadBreakdownTypes,\n    payload: breakdownTypes\n});\n\n\n\n\n","import { types } from \"../types/types\";\nimport { toast } from 'react-toastify';\nimport { ToastSuccess } from \"../components/ui/ToastSuccess\";\nimport { fetchWithToken } from \"../helpers/fetch\";\n\n\nexport const startLoadFactory = () => {\n\n    return async (dispatch) => {\n\n        dispatch(startSetFactories());\n        dispatch(startSetSections());\n        dispatch(startSetMachines());\n        dispatch(startSetNumberSections());\n        dispatch(startSetDocs());\n\n    }\n}\n\n/* FACTORIES */\nconst startSetFactories = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the factories\n            const resp = await fetchWithToken(\"factory/factories\");\n            const { factories } = await resp.json();\n\n            if (factories) {\n                dispatch(setFactories(factories));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nconst setFactories = (factories) => ({\n    type: types.factorySetFactories,\n    payload: factories\n});\n\n/* FACTORY SECTIONS */\nconst startSetSections = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the sections\n            const resp = await fetchWithToken(\"factory/sections\");\n            const { sections } = await resp.json();\n\n            if (sections) {\n                dispatch(setSections(sections));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nconst setSections = (sections) => ({\n    type: types.factorySetSections,\n    payload: sections\n});\n\n\n/* SECTION'S MACHINES */\nconst startSetMachines = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the machines\n            const resp = await fetchWithToken(\"factory/machines\");\n            const { machines } = await resp.json();\n\n            if (machines) {\n                dispatch(setMachines(machines));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\nconst setMachines = (machines) => ({\n    type: types.factorySetMachines,\n    payload: machines\n});\n\n\n/* SECTION'S NUMBERS */\n\nconst startSetNumberSections = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the section numbers\n            const resp = await fetchWithToken(\"factory/numbers\");\n            const { numbers } = await resp.json();\n\n            if (numbers) {\n                dispatch(setNumberSections(numbers));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nconst setNumberSections = (numbers) => ({\n    type: types.factorySetNumberSections,\n    payload: numbers\n});\n\n\n\n/* DOCS */\n\nconst startSetDocs = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the docs\n            const resp = await fetchWithToken(\"factory/docs\");\n            const { docs } = await resp.json();\n\n            if (docs) {\n                dispatch(setDocs(docs));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst setDocs = (docs) => ({\n    type: types.factorySetDocs,\n    payload: docs\n});\n\nexport const setActiveDoc = (doc) => ({\n    type: types.factorySetActiveDoc,\n    payload: doc\n});\n\nexport const clearActiveDoc = () => ({\n    type: types.factoryClearActiveDoc\n});\n\nexport const startAddFile = (doc) => {\n\n    return async (dispatch) => {\n\n        // Upload File to public folder, and save the name, info and sectionID in DB\n\n        try {\n            const token = localStorage.getItem('token') || '';\n\n            const formData = new FormData();\n            formData.append('file', doc.file)\n            formData.append('info', doc.info)\n            formData.append('section', doc.section)\n\n            const resp = await fetch('http://localhost:8088/api/uploads/doc', {\n                method: 'POST',\n                headers: {\n                    'x-token': token\n                },\n                body: formData\n            })\n\n            const { uploadedDoc } = await resp.json();\n\n            if (uploadedDoc) {\n                dispatch(addDoc(uploadedDoc));\n\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Documento agregado con éxito!\" />);\n                }, 200);\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst addDoc = (doc) => ({\n    type: types.factoryAddDoc,\n    payload: doc\n});\n\nexport const startDeleteDoc = () => {\n\n    return async (dispatch, getState) => {\n\n        const { factory } = getState();\n        const { id } = factory.activeDoc;\n\n        if (id) {\n\n            // delete\n            try {\n                const resp = await fetchWithToken(`uploads/doc/${id}`, undefined, 'DELETE');\n                const data = await resp.json();\n\n                if (data) {\n                    dispatch(deleteDoc());\n\n                    setTimeout(() => {\n                        toast.success(<ToastSuccess text=\"Documento eliminado con éxito!\" />);\n\n                    }, 600);\n                }\n            } catch (error) {\n                console.log(error);\n            }\n\n        }\n    }\n}\n\nconst deleteDoc = () => ({\n    type: types.factoryDeleteDoc\n});\n\nexport const clearFactory = () => ({\n    type: types.factoryClearFactory\n});\n\n","import { types } from \"../types/types\";\nimport { toast } from 'react-toastify';\nimport { ToastSuccess } from \"../components/ui/ToastSuccess\";\nimport { fetchWithFile, fetchWithToken } from \"../helpers/fetch\";\n\nexport const setActiveTechnician = (tech) => ({\n    type: types.crewSetActive,\n    payload: tech\n});\n\nexport const clearActiveTechnician = () => ({\n    type: types.crewClearActive\n});\n\nexport const startLoadingCrew = () => {\n\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchWithToken(\"crew/\");\n            const { technicians } = await resp.json();\n\n            if (technicians) {\n                dispatch(loadCrew(technicians));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst loadCrew = (crew) => ({\n    type: types.crewLoadTechnicians,\n    payload: crew\n});\n\n\n\nexport const startAddTechnician = (technicianValues, file) => {\n\n    return async (dispatch) => {\n\n        let fileName = null;\n\n        // If there is a File, save it to hosting\n        if (file) {\n\n            try {\n                const formData = new FormData();\n                formData.append('file', file);\n                const resp = await fetchWithFile('uploads/technician/', formData);\n\n                fileName = await resp.json();\n\n            } catch (error) {\n                console.log('Error uploading image', error);\n            }\n        }\n\n        // If the file was saved, add to technicianValues\n        if (fileName) {\n            technicianValues.image = fileName.name;\n        }\n\n        // Saved the new technician to DB\n        try {\n\n            const resp = await fetchWithToken('crew/', technicianValues, 'POST');\n            const { technician } = await resp.json();\n\n            if (technician) {\n                dispatch(addNewTechnician(technician));\n\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Técnico agregado con éxito!\" />);\n                }, 200);\n\n            } else {\n                console.log('Error the technician was not saved');\n            }\n\n        } catch (error) {\n            console.log('Error while saving the technician', error);\n        }\n    }\n}\n\nconst addNewTechnician = (technician) => ({\n    type: types.crewAddNewTechnician,\n    payload: technician\n});\n\nexport const startUpdateTechnician = (technicianValues, file) => {\n\n    return async (dispatch) => {\n\n        const { id } = technicianValues;\n        let fileName = null;\n\n        // If there is a File, save it to hosting\n        if (file) {\n\n            try {\n                const formData = new FormData();\n                formData.append('file', file);\n                const resp = await fetchWithFile('uploads/technician/', formData);\n\n                fileName = await resp.json();\n\n            } catch (error) {\n                console.log('Error uploading image', error);\n            }\n        }\n\n        // If the file was saved, add to technicianValues\n        if (fileName) {\n            technicianValues.image = fileName.name;\n        }\n\n        try {\n            const resp = await fetchWithToken(`crew/${id}`, technicianValues, 'PUT');\n            const { technician } = await resp.json();\n\n            if (technician) {\n\n                dispatch(updateTechnician(technician));\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Técnico actualizado con éxito!\" />);\n                }, 200);\n\n            } else {\n                console.log('Tthe technician was not saved');\n            }\n        } catch (error) {\n            console.log('Error while updating the technician');\n        }\n    }\n}\n\nconst updateTechnician = (technician) => ({\n    type: types.crewUpdateTechnician,\n    payload: technician\n});\n\n\nexport const startDeleteTechnician = () => {\n\n    return async (dispatch, getState) => {\n\n        try {\n            const { crew } = getState();\n            const { id } = crew.activeTechnician;\n\n            if (id) {\n\n                const resp = await fetchWithToken(`crew/${id}`, undefined, 'DELETE');\n                const { technician } = await resp.json();\n\n                if (technician) {\n                    dispatch(deleteTechnician());\n\n                    setTimeout(() => {\n                        toast.success(<ToastSuccess text=\"Técnico eliminado con éxito!\" />);\n                    }, 200);\n                }\n            } else {\n                console.log('Error, There is no id');\n            }\n        } catch (error) {\n            console.log('Error while deleting', error);\n        }\n    }\n}\n\nconst deleteTechnician = () => ({\n    type: types.crewDeleteTechnician\n});\n\n\nexport const clearTechnicians = () => ({\n    type: types.crewClearTechnician\n});\n","import { toast } from \"react-toastify\";\nimport { ToastSuccess } from \"../components/ui/ToastSuccess\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const startLoadWarnings = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fecth warnings\n            const resp = await fetchWithToken(\"warnings/\");\n            const { warnings } = await resp.json();\n\n            if (warnings) {\n                dispatch(loadWarnings(warnings));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst loadWarnings = (warnings) => ({\n    type: types.warningLoadWarnings,\n    payload: warnings\n});\n\nexport const startDeleteWarning = (id) => {\n\n    return async (dispatch) => {\n\n        try {\n            // Delete warning from DB\n            const resp = await fetchWithToken(`warnings/${id}`, {}, 'DELETE');\n            const { destroyed } = await resp.json();\n\n            if (destroyed) {\n                dispatch(deleteWarning(id));\n                toast.success(<ToastSuccess text=\"Aviso eliminado con éxito\" />);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst deleteWarning = (id) => ({\n    type: types.warningRemoveWarning,\n    payload: id\n});\n\nexport const startAddWarning = ({ description }) => {\n\n    return async (dispatch) => {\n\n        try {\n            // Save warning to DB\n            const resp = await fetchWithToken(\"warnings/\", { description }, 'POST');\n            const { warning } = await resp.json();\n\n            if (warning) {\n                setTimeout(() => {\n                    dispatch(addWarning({ id: warning.id, description: warning.description }));\n                    toast.success(<ToastSuccess text=\"Aviso agregado con éxito\" />);\n                }, 600);\n\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst addWarning = (warning) => ({\n    type: types.warningAddWarning,\n    payload: warning\n});\n\nexport const clearWarnings = () => ({\n    type: types.warningClear\n});\n","import { fetchDataWeeksSections, fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\n\nexport const startloadingStatistics = () => {\n\n    return async (dispatch) => {\n        await dispatch(startLoadWeeks());\n        await dispatch(startLoadThreeWeeksSections());\n        await dispatch(startLoadlastWeekByOrderType());\n        await dispatch(startLoadIntervetionsWeeks());\n        await dispatch(startLoadTotalTimeByWeek());\n        await dispatch(startLoadlastWeekByBreakdown());\n        await dispatch(startLoadlastWeekByTechnician());\n    }\n}\n\nconst startLoadWeeks = () => {\n\n    return async (dispatch) => {\n        const resp = await fetchWithToken('statistics/14dayssagobyweeks', undefined, 'GET');\n        const { weeks } = await resp.json();\n\n        const dataWeeks = []\n        if (weeks) {\n            for (const week of weeks) {\n                dataWeeks.push(week.week);\n            }\n        }\n        dispatch(loadWeeks(dataWeeks))\n    }\n}\n\nconst loadWeeks = (weeks) => ({\n    type: types.statisticsLoadWeeks,\n    payload: weeks\n});\n\n\nconst startLoadThreeWeeksSections = () => {\n\n    return async (dispatch, getState) => {\n\n        const { weeks } = getState().statistics;\n\n        const arrayDatos = [];\n\n        const sectionsArray = [\n            'Prensas',\n            'Esmaltadoras',\n            'Hornos',\n            'Clasificación',\n            'Parque Box',\n            'Tierras',\n            'Almacén',\n            'Taller',\n            'Otros'\n        ]\n\n        for (const section of sectionsArray) {\n            const data = await fetchDataWeeksSections(section, weeks);\n            arrayDatos.push(data);\n        }\n\n        dispatch(loadThreeWeeksSections(arrayDatos));\n    }\n}\n\nconst loadThreeWeeksSections = (data) => ({\n    type: types.statisticsLoadThreeWeeksSections,\n    payload: data\n});\n\n\n\nconst startLoadlastWeekByOrderType = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('statistics/lastweekbyordertype', undefined, 'GET');\n        const { orderTypeWeeks } = await resp.json();\n\n        const quantities = [];\n        const names = [];\n\n        if (orderTypeWeeks) {\n            for (const orderTypeWeek of orderTypeWeeks) {\n                quantities.push(orderTypeWeek.total);\n                names.push(orderTypeWeek.name);\n            }\n            dispatch(loadLastWeekByOrderType({ quantities, names }));\n        }\n\n    }\n}\n\nconst loadLastWeekByOrderType = (data) => ({\n    type: types.statisticsLoadlastWeekByOrderType,\n    payload: data\n});\n\nconst startLoadlastWeekByBreakdown = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('statistics/lastweekbybreakdown', undefined, 'GET');\n        const { breakdownWeeks } = await resp.json();\n\n        const quantities = [];\n        const names = [];\n\n        if (breakdownWeeks) {\n            for (const orderTypeWeek of breakdownWeeks) {\n                quantities.push(orderTypeWeek.total);\n                names.push(orderTypeWeek.name);\n            }\n            dispatch(loadLastWeekByBreakdown({ quantities, names }));\n        }\n\n    }\n}\n\nconst loadLastWeekByBreakdown = (data) => ({\n    type: types.statisticsLoadlastWeekByBreakdown,\n    payload: data\n});\n\n\nconst startLoadlastWeekByTechnician = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('statistics/lastweekbytechnician', undefined, 'GET');\n        const { techniciansWeeks } = await resp.json();\n\n        const quantities = [];\n        const names = [];\n\n        if (techniciansWeeks) {\n            for (const technicianWeek of techniciansWeeks) {\n                quantities.push(technicianWeek.total);\n                names.push(technicianWeek.name);\n            }\n            dispatch(loadLastWeekByTechnician({ quantities, names }));\n        }\n    }\n}\n\nconst loadLastWeekByTechnician = (data) => ({\n    type: types.statisticsLoadlastWeekByTechnician,\n    payload: data\n});\n\nconst startLoadIntervetionsWeeks = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('statistics/interventionsweeks', undefined, 'GET');\n        const { interventionsWeeks } = await resp.json();\n\n        const weeksIntervetions = [];\n        const weeksInterventionsCounts = [];\n\n        if (interventionsWeeks) {\n            for (const intervetionWeek of interventionsWeeks) {\n                weeksIntervetions.push(intervetionWeek.week);\n                weeksInterventionsCounts.push(intervetionWeek.count);\n            }\n            dispatch(loadInterventionsWeeks({ weeksIntervetions, weeksInterventionsCounts }));\n        }\n\n    }\n}\n\nconst loadInterventionsWeeks = (data) => ({\n    type: types.statisticsLoadInterventionsWeeks,\n    payload: data\n});\n\n\nconst startLoadTotalTimeByWeek = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('statistics/totaltimebyweek', undefined, 'GET');\n        const { totalTimeWeeks } = await resp.json();\n\n        const weeksTime = [];\n        const weeksTotalTime = [];\n\n        if (totalTimeWeeks) {\n            for (const timeWeek of totalTimeWeeks) {\n                weeksTime.push(timeWeek.week);\n                weeksTotalTime.push(timeWeek.totalMins / 60);\n            }\n            dispatch(loadTotalTimeByWeek({ weeksTime, weeksTotalTime }));\n        }\n\n    }\n}\n\nconst loadTotalTimeByWeek = (data) => ({\n    type: types.statisticsLoadTotalTimeByWeek,\n    payload: data\n});\n\n\nexport const statisticsClear = () => ({\n    type: types.statisticsClear\n});\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../actions/auth';\nimport { clearEvents } from '../../actions/calendar';\nimport { clearFactory } from '../../actions/factory';\nimport { clearTechnicians } from '../../actions/technician';\nimport { clearWarehouse } from '../../actions/warehouse';\nimport { clearWarnings } from '../../actions/warnings';\nimport { useHistory } from 'react-router';\nimport { statisticsClear } from '../../actions/statistics';\n\nexport const TopBar = () => {\n\n    const { name } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleLogout = () => {\n        dispatch(clearEvents());\n        dispatch(clearFactory());\n        dispatch(clearTechnicians());\n        dispatch(clearWarnings());\n        dispatch(clearWarehouse());\n        dispatch(clearTechnicians());\n        dispatch(statisticsClear());\n        dispatch(logout());\n        localStorage.clear();\n    }\n\n    const handleLogoClick = () => {\n        history.push('/');\n    }\n\n    return (\n        <div className=\"topbar-wrapper\">\n            {/* <h2 className=\"logo-topbar\">M-tile</h2> */}\n\n            <img src={`${process.env.PUBLIC_URL}/assets/images/m_tile_topbar.png`} alt=\"logo_mtile\" onClick={handleLogoClick} />\n            {/* <img src={`${process.env.PUBLIC_URL}/assets/images/m_tile_white.png`} alt=\"logo_mtile\" /> */}\n\n            <div>\n                {/* <i className=\"fas fa-bell\"></i> */}\n\n                <span>{name}</span>\n                <i onClick={handleLogout} className=\"fas fa-sign-out-alt\"></i>\n\n            </div>\n\n\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal,\n});\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal,\n});\n","export const disableScroll = () => {\n    // Get the current page scroll position \n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\n    // if any scroll is attempted, \n    // set this to the previous value \n    window.onscroll = () => window.scrollTo(scrollLeft, scrollTop);\n}\n\nexport const enableScroll = () => {\n    window.onscroll = function () { };\n}","export const getOrderById = (id, events) => {\n\n    if (!id || id.length < 1 || !events || events.length < 1 || events === 'undefined') {\n        return;\n    }\n\n    return events.find(event => event.id.toString() === id.toString());\n\n}","export const getNameOrderType = (id, types) => {\n\n    return types.find(type => id === type.id);\n\n}\n\nexport const getNameBreakdown = (id, breakdowns) => {\n\n    return breakdowns.find(type => id === type.id);\n\n}\n\nexport const getNameFactory = (id, factories) => {\n\n    return factories.find(factory => id === factory.id);\n\n}\n\nexport const getNameSection = (id, sections) => {\n\n    return sections.find(section => id === section.id);\n\n}\n\nexport const getNameNumber = (id, numbers) => {\n\n    return numbers.find(number => id === number.id);\n\n}\n\nexport const getNameMachine = (id, machines) => {\n\n    return machines.find(machine => id === machine.id);\n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { uiCloseModal } from '../../actions/ui';\n\nimport { clearActiveEvent } from '../../actions/calendar';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst initialState = {\n    id: '',\n    factory: '',\n    section: '',\n    machine: '',\n    technician: '',\n    breakdown: '',\n    description: '',\n    start: '',\n    end: ''\n}\n\nexport const CalendarModal = ({ setTableModal }) => {\n\n    const { factories } = useSelector(state => state.factory);\n    const { sections } = useSelector(state => state.factory);\n    const { machines } = useSelector(state => state.factory);\n    const { numbers } = useSelector(state => state.factory);\n    const { types } = useSelector(state => state.calendar);\n    const { breakdowns } = useSelector(state => state.calendar);\n    const { technicians } = useSelector(state => state.crew);\n    const { modalOpen } = useSelector(state => state.ui);\n\n\n    const [formValues, setFormValues] = useState(initialState);\n\n    const { activeEvent } = useSelector(state => state.calendar);\n    const { id,\n        breakdown,\n        description,\n        section,\n        factory,\n        machine,\n        start,\n        end,\n        technician,\n        number,\n        orderType,\n        totalMins\n    } = formValues;\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent);\n        }\n    }, [activeEvent]);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n\n    const showOrderDetail = () => {\n\n        const modal = document.querySelector('.modal-calendar')\n        modal.classList.remove('animate__fadeIn');\n        modal.classList.add('animate__fadeOut');\n\n        enableScroll();\n        dispatch(uiCloseModal());\n        const path = `/order`;\n        history.push(path);\n\n    }\n\n    const handleCloseModal = () => {\n\n        enableScroll();\n        dispatch(uiCloseModal());\n        dispatch(clearActiveEvent());\n\n        if (setTableModal) {\n            setTableModal(false);\n        }\n    }\n\n    return (\n        <>\n            <Modal\n                isOpen={modalOpen}\n                className='modal-calendar animate__animated animate__fadeIn animate__faster'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n                <div className=\"frame\">\n                    <h1 className=\"h1-modal\">Orden de trabajo</h1>\n\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <div className=\"modal-event-form\">\n\n                        <div className=\"event-input-wrapper-1\">\n                            <div className=\"event-input-1\">\n                                <label>N.º Orden: </label>\n                                <input type='text' name=\"id\" disabled value={id} />\n                            </div>\n\n                            <div className=\"event-input-2\">\n\n                                <label>Tipo orden: </label>\n                                <select name=\"orderType\" value={orderType} disabled>\n                                    <option value=\"default\" disabled>Elige Tipo</option>\n                                    {types.length > 0\n                                        && types.map(type =>\n                                            <option key={type.id} value={type.id}>{type.name}</option>)}\n                                </select>\n\n                            </div>\n                        </div>\n\n                        <div className=\"event-input-wrapper-1\">\n                            <div className=\"event-input-1\">\n                                <label>Factoría: </label>\n                                <select\n                                    name=\"factory\"\n                                    value={factory}\n                                    disabled>\n                                    <option value=\"default\" disabled>Factoría</option>\n                                    {factories.map(factory =>\n                                        <option key={factory.id} value={factory.id}>{factory.name}</option>)}\n                                </select>\n                            </div>\n\n                            <div className=\"event-input-2\">\n                                <label>Sección:</label>\n                                <select\n                                    name=\"section\"\n                                    value={section}\n                                    disabled\n                                >\n                                    <option value=\"default\" disabled>Elige</option>\n                                    {sections.length > 0\n                                        && sections.map(section =>\n                                            <option key={section.id} value={section.id}>{section.name}</option>)}\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"event-input-wrapper-1\">\n\n                            <div className=\"event-input-1\">\n\n                                <label>Máquina:</label>\n                                <select\n                                    name=\"machine\"\n                                    value={machine}\n                                    disabled\n                                >\n\n                                    <option value=\"default\" disabled>Elige Máquina</option>\n                                    {machines.length > 0\n                                        && machines.map(machine =>\n                                            <option key={machine.id} value={machine.id}>{machine.name}</option>)}\n                                </select>\n\n                            </div>\n\n                            <div className=\"event-input-2\">\n                                <label>Número: </label>\n                                <select\n                                    name=\"number\"\n                                    value={number}\n                                    disabled\n                                >\n                                    <option value=\"default\" disabled>Elige Sección</option>\n                                    {numbers.length > 0\n                                        && numbers.map(number =>\n                                            <option key={number.id} value={number.id}>{number.number}</option>)}\n                                </select>\n\n                            </div>\n                        </div>\n\n                        <div className=\"event-input-wrapper-1\">\n                            <div className=\"event-input-1\">\n                                <label>Técnico: </label>\n                                <select\n                                    name=\"technician\"\n                                    value={technician}\n                                    disabled\n                                >\n                                    <option value=\"default\" disabled>Elige Técnico</option>\n                                    {technicians.length > 0\n                                        && technicians.map(technician =>\n                                            <option key={technician.id} value={technician.id}>{technician.name}</option>)}\n                                </select>\n\n                            </div>\n\n                            <div className=\"event-input-2\">\n                                <label>Tipo avería: </label>\n                                <select\n                                    name=\"breakdown\"\n                                    value={breakdown}\n                                    disabled\n                                >\n                                    <option value=\"default\" disabled>Elige Avería</option>\n                                    {breakdowns.length > 0\n                                        && breakdowns.map(breakdown =>\n                                            <option key={breakdown.id} value={breakdown.id}>{breakdown.name}</option>)}\n                                </select>\n\n                            </div>\n                        </div>\n\n                        <div className=\"event-input-wrapper-1\">\n                            <div className=\"event-input-1\">\n                                <label>F. Inicio:</label>\n                                <DatePicker\n                                    selected={start}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    showTimeInput\n                                    name=\"start\"\n                                    disabled />\n                            </div>\n                            <div className=\"event-input-2\">\n                                <label>F. Fin:</label>\n                                <DatePicker\n                                    selected={end}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    showTimeInput\n                                    name=\"end\" />\n                            </div>\n                        </div>\n\n                        <div className=\"event-input-wrapper-3\">\n                            <label>Descripción:</label>\n                            <textarea name=\"description\" disabled value={description} ></textarea>\n                        </div>\n\n                        <div className=\"event-input-wrapper-single\">\n                            <div className=\"event-input\">\n                                <label>Total tiempo de trabajo:</label>\n                                <input type=\"text\" name=\"totalMins\" disabled value={totalMins} />\n                            </div>\n                        </div>\n                        <div className=\"event-button-wrapper\">\n                            <button className=\"btn btn-detail\" onClick={showOrderDetail}>Ver orden</button>\n                        </div>\n\n                    </div>\n                </div>\n            </Modal>\n        </>\n    )\n}\n","import moment from 'moment';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTable, useSortBy } from 'react-table';\nimport { setActiveEvent } from '../../actions/calendar';\nimport { uiOpenModal } from '../../actions/ui';\nimport { disableScroll } from '../../helpers/disable-enable-scroll';\nimport { getOrderById } from '../../helpers/getOrderById';\nimport { getNameBreakdown, getNameOrderType, } from '../../helpers/helpersHistorical';\nimport { CalendarModal } from '../calendar/CalendarModal';\n\n\nexport const TableDashboard = ({ columns, data }) => {\n\n    const { events } = useSelector(state => state.calendar);\n    const { types } = useSelector(state => state.calendar);\n    const { breakdowns } = useSelector(state => state.calendar);\n    const { factories } = useSelector(state => state.factory);\n    const { sections } = useSelector(state => state.factory);\n    const { numbers } = useSelector(state => state.factory);\n    const { machines } = useSelector(state => state.factory);\n\n    const [tableModal, setTableModal] = useState(false);\n    const dispatch = useDispatch();\n\n    const tableInstance = useTable({ columns, data }, useSortBy);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        rows,\n    } = tableInstance;\n\n\n    // Get the data-id attribute from the <td> and search the order in the store\n    const handleRowClick = ({ target }) => {\n        const orderId = target.attributes[0].nodeValue;\n\n        if (!orderId || orderId === 'undefined' || orderId === 'cell' || !events || events.length < 1 || events === undefined) {\n            return;\n        }\n        const order = getOrderById(orderId, events);\n\n        setTableModal(true);\n        dispatch(setActiveEvent(order));\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    return (\n        <div className=\"table-wrapper\">\n\n            {tableModal && <CalendarModal setTableModal={setTableModal} />}\n\n            <table {...getTableProps()} >\n                <thead>\n                    {// Loop over the header rows\n                        headerGroups.map(headerGroup => (\n                            // Apply the header row props\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {// Loop over the headers in each row\n                                    headerGroup.headers.map(column => (\n                                        // Apply the header cell props\n                                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                            {// Render the header\n                                                column.render('Header')}\n                                        </th>\n                                    ))}\n                            </tr>\n                        ))}\n                </thead>\n                {/* Apply the table body props */}\n\n                {\n                    types && breakdowns && factories && sections && numbers && machines\n\n                    &&\n                    <tbody {...getTableBodyProps()}>\n                        {// Loop over the table rows\n                            rows.map(row => {\n                                // Prepare the row for display\n                                prepareRow(row)\n                                return (\n                                    // Apply the row props\n                                    <tr {...row.getRowProps()} onClick={handleRowClick}>\n                                        {// Loop over the rows cells\n                                            row.cells.map((cell, i) => {\n\n                                                // each case will call their own method to parse the data \n                                                // from an ID to the name property\n\n                                                switch (cell.column.id) {\n\n                                                    case 'start':\n                                                        return <td key={i} data-id={cell.row.original.id}>{moment(cell.value).format(\"DD-MM-YYYY HH:mm\").toString()}</td>;\n\n                                                    case 'orderType':\n                                                        const orderType = getNameOrderType(cell.value, types)?.name;\n                                                        return <td key={i} data-id={cell.row.original.id}>{orderType}</td>;\n\n                                                    case 'breakdown':\n                                                        const breakdownType = getNameBreakdown(cell.value, breakdowns)?.name;\n                                                        return <td key={i} data-id={cell.row.original.id}>{breakdownType}</td>;\n\n                                                    case 'description':\n                                                        return <td key={i} data-id={cell.row.original.id}>\n                                                            {cell.value}\n                                                        </td>;\n\n                                                    default:\n                                                        // Apply the cell props\n                                                        return (\n                                                            <td {...cell.getCellProps()}>\n                                                                {// Render the cell contents\n                                                                    cell.render('Cell')}\n                                                            </td>\n                                                        )\n                                                }\n\n                                            })}\n                                    </tr>\n                                )\n                            })}\n                    </tbody>\n                }\n            </table>\n        </div>\n    )\n}\n","export const getColumnsTableWarehouse =\n    [\n        {\n            Header: 'Código',\n            accessor: 'code', // accessor is the \"key\" in the data\n        },\n        {\n            Header: 'Descripción',\n            accessor: 'description',\n        },\n        {\n            Header: 'Cantidad',\n            accessor: 'quantity',\n        },\n        {\n            Header: 'Stock Mínimo',\n            accessor: 'minStock',\n        },\n        {\n            Header: 'Ubicación',\n            accessor: 'place',\n        },\n    ];\n\nexport const getColumnsTableHistorical =\n    [\n        {\n            Header: 'Fecha Inicio',\n            accessor: 'start', // accessor is the \"key\" in the data\n        },\n        {\n            Header: 'Tipo Orden',\n            accessor: 'orderType',\n        },\n        {\n            Header: 'Avería',\n            accessor: 'breakdown',\n        },\n        {\n            Header: 'Factoría',\n            accessor: 'factory',\n        },\n        {\n            Header: 'Sección',\n            accessor: 'section',\n        },\n        {\n            Header: 'Número',\n            accessor: 'number',\n        },\n        {\n            Header: 'Máquina',\n            accessor: 'machine',\n        },\n        {\n            Header: 'Tiempo Trabajo',\n            accessor: 'totalMins',\n        },\n        {\n            Header: 'Estado',\n            accessor: 'closed',\n        },\n    ];\n\nexport const getColumnsTableDashboard =\n    [\n        {\n            Header: 'Fecha Inicio',\n            accessor: 'start', // accessor is the \"key\" in the data\n        },\n        {\n            Header: 'Tipo Orden',\n            accessor: 'orderType',\n        },\n        {\n            Header: 'Avería',\n            accessor: 'breakdown',\n        },\n        {\n            Header: 'Descripción',\n            accessor: 'description',\n        },\n    ];\n","\n// This component needs a function, and ID or Name to show in, and a message\n\nexport const ModalToastify = ({ closeToast, handleDeleteItem, code, message }) => {\n\n    return (\n        <div className=\"toast-wrapper-container\">\n            <p>{message} <b>{code}</b>?</p>\n            <div className=\"toast-wrapper-buttons\">\n                <span onClick={closeToast} className=\"btn btn-cancel-toast\">Cancelar</span>\n                <span onClick={(e) => { e.stopPropagation(); closeToast(); handleDeleteItem(); }} className=\"btn btn-agree-toast\">Aceptar</span>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { startAddWarning } from '../../actions/warnings';\n\nconst initialState = { description: '' };\n\nexport const ModalWarning = ({ setShowWarningModal }) => {\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n\n    const [formValues, setFormValues] = useState(initialState);\n    const { description } = formValues;\n\n    const handleCloseModal = () => {\n        dispatch(uiCloseModal());\n        setShowWarningModal(false);\n        setFormValues(initialState);\n        enableScroll();\n    }\n\n    // Check inputs and dispatch Update or New, depends on activeItem\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let isValid = true;\n\n        if (description.trim().length < 5) {\n            isValid = false;\n            document.querySelector('input[name=\"description\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"description\"]').classList.remove('border-red');\n        }\n\n\n        if (!isValid) {\n            return toast.error('Debes introducir al menos 5 caracteres', {\n                position: toast.POSITION.TOP_CENTER\n            });\n        }\n\n        dispatch(startAddWarning(formValues));\n        handleCloseModal();\n    }\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    return (\n        <div>\n\n            <Modal\n                isOpen={modalOpen}\n                className='modal-warning animate__animated animate__fadeIn animate__fast'\n                onRequestClose={handleCloseModal}\n                contentLabel='Warning Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n\n                <div className=\"frame\">\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <h1 className=\"h1-modal\">Generar Aviso</h1>\n\n                    <form onSubmit={handleSubmit}>\n\n                        <div className=\"grid-warning\">\n                            <label>Aviso:</label>\n                            <input\n                                type=\"text\"\n                                name=\"description\"\n                                value={description}\n                                onChange={handleInputChange}\n                                autoComplete=\"off\"\n                            />\n                        </div>\n\n                        <div className=\"warning-button-wrapper\">\n                            <button className=\"btn btn-detail\">Guardar</button>\n                        </div>\n\n                    </form>\n                </div>\n\n                {modalOpen && <ToastContainer />}\n            </Modal>\n            {!modalOpen && <ToastContainer />}\n        </div>\n    )\n}\n\n\n\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { TableDashboard } from '../components/dashboard/TableDashboard'\nimport { getColumnsTableDashboard } from '../helpers/getColumnsTables';\nimport { getOrdersStillOpen } from '../helpers/getOrdersStillOpen';\nimport Chart from \"react-apexcharts\";\nimport { useDispatch } from 'react-redux';\nimport { startDeleteWarning, startLoadWarnings } from '../actions/warnings';\nimport { ModalToastify } from '../components/ui/ModalToastify';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ModalWarning } from '../components/dashboard/ModalWarning';\nimport { uiOpenModal } from '../actions/ui';\nimport { disableScroll } from '../helpers/disable-enable-scroll';\nimport { Link } from 'react-router-dom';\n\n\nexport const DashboardScreen = () => {\n\n    const dispatch = useDispatch();\n    const { warnings } = useSelector(state => state.warning);\n    const [showWarningModal, setShowWarningModal] = useState(false);\n\n\n    useEffect(() => {\n        dispatch(startLoadWarnings());\n    }, [dispatch]);\n\n    const columns = getColumnsTableDashboard;\n    const { events } = useSelector(state => state.calendar);\n    const ordersStillOpen = getOrdersStillOpen(events);\n\n    const { weeks, threeWeekSections, lastWeekByOrderType } = useSelector(state => state.statistics);\n\n\n    const handleAddWarning = () => {\n        setShowWarningModal(true);\n        disableScroll();\n        dispatch(uiOpenModal());\n    };\n\n    const showDeleteWarning = (id, i) => {\n\n        toast.warn(<ModalToastify\n            handleDeleteItem={() => handleDeleteWarning(id)}\n            code={warnings[i].description}\n            message=\"Estás seguro de borrar el aviso \" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n\n    }\n    const handleDeleteWarning = (id) => {\n        dispatch(startDeleteWarning(id));\n    };\n\n    const optionsDonut = {\n        labels: lastWeekByOrderType.names,\n        chart: {\n            toolbar: {\n                show: true,\n                offsetX: 0,\n                offsetY: 0,\n            }\n        },\n    };\n\n    const optionsBar = {\n        chart: {\n            type: 'bar',\n            height: 350\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '55%',\n                endingShape: 'rounded'\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent']\n        },\n        xaxis: {\n            categories: weeks,\n            title: {\n                text: 'Semana'\n            }\n        },\n        yaxis: {\n            title: {\n                text: 'Intervenciones'\n            }\n        },\n        fill: {\n            opacity: 1\n        },\n        tooltip: {\n            y: {\n                formatter: function (val) {\n                    return val + \" intervenciones\"\n                }\n            }\n        },\n    };\n\n    return (\n        <div className='animate__animated animate__fadeIn dashboard-screen'>\n            <h1>DashBoard</h1>\n\n            <div className='main-content_dashboard'>\n\n                <div className=\"charts\">\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Intervenciones por sección/semana</h3>\n                        {\n                            threeWeekSections.length > 0 && weeks.length > 0 &&\n                            < Chart\n                                options={optionsBar}\n                                series={threeWeekSections}\n                                type=\"bar\"\n                                width=\"100%\"\n                            />\n                        }\n                    </div>\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Intervenciones semana previa</h3>\n\n                        {\n                            lastWeekByOrderType && lastWeekByOrderType?.quantities?.length > 0 && lastWeekByOrderType?.names?.length > 0 &&\n\n                            <Chart\n                                className=\"chart-pie\"\n                                options={optionsDonut}\n                                series={lastWeekByOrderType.quantities}\n                                type=\"donut\"\n                                width=\"100%\"\n                            />\n                        }\n                    </div>\n\n                </div>\n\n                <div className=\"events-alerts-wrapper\">\n                    <div className=\"lasts-events-wrapper\">\n                        <div className=\"header-warnings\">\n                            <h3 className=\"h3-dashboard\">\n                                Eventos activos\n                            </h3>\n                            <Link to=\"/neworder\"><i className=\"fas fa-plus-circle\"></i></Link>\n                        </div>\n\n                        <div className=\"lasts-events\">\n                            {ordersStillOpen.length > 0 && <TableDashboard columns={columns} data={ordersStillOpen} />}\n                        </div>\n                    </div>\n\n                    <div className=\"lasts-alerts-wrapper\">\n                        <div className=\"header-warnings\">\n                            <h3 className=\"h3-dashboard\">\n                                Avisos\n                            </h3>\n                            <i className=\"fas fa-plus-circle\" onClick={handleAddWarning}></i>\n                        </div>\n\n                        <div className=\"alerts-wrapper\">\n\n                            {warnings &&\n\n                                warnings.map((warning, i) => {\n\n                                    return <div key={warning.id} className=\"warnings\">\n                                        <div className=\"warning\">\n                                            <p>{warning.description}</p>\n                                            <i className=\"far fa-trash-alt\" onClick={() => showDeleteWarning(warning.id, i)}></i>\n                                        </div>\n                                    </div>\n\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n\n                {showWarningModal && <ModalWarning setShowWarningModal={setShowWarningModal} />}\n\n                <ToastContainer />\n            </div>\n        </div>\n    )\n}\n","export const getOrdersStillOpen = (orders) => {\n\n    if (!orders || orders.length < 1 || orders === 'undefined') {\n        return [];\n    }\n\n    return orders.filter(order => !order.closed);\n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\n\n\nimport validator from 'validator';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Switch from \"react-switch\";\nimport { fetchWithToken } from '../../helpers/fetch';\nimport { startUpdateUser } from '../../actions/auth';\nimport { ToastSuccess } from '../ui/ToastSuccess';\nimport { ToastError } from '../ui/ToastError';\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n    admin: false\n}\n\nexport const AdminModal = ({ idUser, setIdUser, users, setUsers }) => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n\n    const [formValues, setFormValues] = useState(initialState);\n    const [show, setShow] = useState(false);\n    const { name, email, password, admin } = formValues;\n\n    useEffect(() => {\n\n        async function getUser() {\n            if (!idUser) {\n                return;\n            }\n            const resp = await fetchWithToken(`users/${idUser}`, undefined, 'GET');\n            const { user } = await resp.json();\n\n            if (user) {\n                setFormValues({ ...formValues, ...user });\n                setShow(true);\n            }\n        }\n        getUser();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n\n\n    const handleInputSwitch = () => {\n        setFormValues({\n            ...formValues,\n            admin: !admin\n        });\n    }\n\n    // Update form values on type\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    // Check form values and Update or Create technician\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let isValid = true;\n        let message = '';\n\n        if (!validator.isEmail(email)) {\n            document.querySelector('.email-modal').classList.add('border-red');\n            isValid = false;\n            message += 'El email debe de ser un email válido. \\n';\n        } else {\n            document.querySelector('.email-modal').classList.remove('border-red');\n        }\n\n        if (name.trim().length < 4) {\n            document.querySelector('.name-modal').classList.add('border-red');\n            isValid = false;\n            message += 'El nombre debe de tener al menos 4 caracteres. \\n';\n        } else {\n            document.querySelector('.name-modal').classList.remove('border-red');\n        }\n\n        if (password.trim().length < 6) {\n            document.querySelector('.password-modal').classList.add('border-red');\n            isValid = false;\n            message += 'La password debe de tener al menos 4 caracteres. \\n';\n        } else {\n            document.querySelector('.password-modal').classList.remove('border-red');\n        }\n\n        if (!isValid) {\n            return toast.error(message, { position: toast.POSITION.TOP_CENTER });\n        }\n\n        const resp = await dispatch(startUpdateUser({ ...formValues, id: idUser }));\n\n        if (resp.ok) {\n            toast.success(<ToastSuccess text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n            const newUsers = users.map(user => user.id === resp.user.id ? resp.user : user)\n            setUsers([...newUsers]);\n        } else {\n            toast.error(<ToastError text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n        }\n\n        handleCloseModal();\n\n    }\n\n    const handleCloseModal = () => {\n        enableScroll();\n        setFormValues(initialState);\n        setIdUser(null);\n\n        setTimeout(() => {\n            dispatch(uiCloseModal());\n        }, 200);\n    }\n\n    return (\n        <div>\n            <Modal\n                isOpen={modalOpen}\n                className='admin-modal animate__animated animate__fadeIn animate__faster'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n                <div className=\"frame\">\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <h1 className=\"h1-modal\">Editar Usuario</h1>\n\n                    {\n                        show === true &&\n                        <form className=\"form-main-wrapper\" onSubmit={handleSubmit}>\n\n                            <div className=\"grid-items2\">\n                                <label>Admin: </label>\n                                <Switch\n                                    onChange={handleInputSwitch}\n                                    checked={admin}\n                                    onColor=\"#ffa600\"\n                                    height={14}\n                                    width={30} />\n                            </div>\n\n                            <div className=\"grid-items\">\n                                <label>Email: </label>\n                                <input\n                                    className=\"email-modal\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    autoComplete=\"off\"\n                                    value={email}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Email\" />\n                            </div>\n\n                            <div className=\"grid-items\">\n                                <label>Nombre: </label>\n                                <input\n                                    className=\"name-modal\"\n                                    type=\"text\"\n                                    name=\"name\"\n                                    autoComplete=\"off\"\n                                    value={name}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Nombre\" />\n                            </div>\n\n                            <div className=\"grid-items\">\n                                <label>Password: </label>\n                                <input\n                                    className=\"password-modal\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    autoComplete=\"off\"\n                                    value={password}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Password\" />\n                            </div>\n\n                            <div className=\"wrapper-button\">\n                                <button className=\"btn btn-order\" type=\"submit\">Crear</button>\n                            </div>\n\n                        </form>\n                    }\n\n\n                </div>\n                {modalOpen && <ToastContainer />}\n            </Modal>\n\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchWithToken } from '../helpers/fetch';\nimport validator from 'validator';\nimport Switch from \"react-switch\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ModalToastify } from '../components/ui/ModalToastify';\nimport { AdminModal } from '../components/admin/AdminModal';\nimport { uiOpenModal } from '../actions/ui';\nimport { disableScroll } from '../helpers/disable-enable-scroll';\nimport { startDeleteOrderEvent } from '../actions/calendar';\nimport { ToastSuccess } from '../components/ui/ToastSuccess';\nimport { ToastError } from '../components/ui/ToastError';\nimport { startAddUser, startDeleteUser } from '../actions/auth';\n\nexport const AdminScreen = () => {\n\n    const [formValuesUser, setFormValuesUser] = useState({ email: '', name: '', password: '' });\n    const { email, name, password } = formValuesUser;\n\n    const [formValuesOrder, setFormValuesOrder] = useState({ orderId: '' });\n    const { orderId } = formValuesOrder;\n\n    const [users, setUsers] = useState([]);\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [idUser, setIdUser] = useState(null);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        async function loadUsers() {\n            const resp = await fetchWithToken('users/', undefined, 'GET');\n            const { users } = await resp.json();\n            if (users) {\n                setUsers([...users]);\n            }\n        }\n        loadUsers();\n    }, [])\n\n\n    const handleInputChangeUser = ({ target }) => {\n        const name = target.name;\n        document.querySelector(`input[name=\"${name}\"]`).classList.remove('border-red');\n\n        setFormValuesUser({\n            ...formValuesUser,\n            [target.name]: target.value\n        });\n    }\n\n    const handleInputSwitch = () => {\n        setIsAdmin(!isAdmin)\n    }\n\n    // Will call tostify first to confirm the option the user will choose. Cancel or Deny.\n    const handleStartDeleteUser = (id, name) => {\n        toast.warn(<ModalToastify\n            handleDeleteItem={() => handleDeleteUser(id)}\n            code={name}\n            message=\"Estás seguro de borrar el usuario\" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    const handleDeleteUser = async (id) => {\n        const resp = await dispatch(startDeleteUser(id));\n\n        if (resp?.ok) {\n            setUsers(users.map(user => user.id === resp.user.id ? resp.user : user));\n            toast.success(<ToastSuccess text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n        } else {\n            toast.error(<ToastError text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n        }\n    }\n\n    const handleUpdateUser = (id) => {\n        setIdUser(id);\n        disableScroll();\n        dispatch(uiOpenModal());\n    }\n\n    const handleSubmitUser = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let isValid = true;\n        let message = '';\n\n        if (!validator.isEmail(email)) {\n            document.querySelector('input[name=\"email\"]').classList.add('border-red');\n            isValid = false;\n            message += 'El email debe de ser un email válido. \\n';\n        } else {\n            document.querySelector('input[name=\"email\"]').classList.remove('border-red');\n        }\n\n        if (name.trim().length < 4) {\n            document.querySelector('input[name=\"name\"]').classList.add('border-red');\n            isValid = false;\n            message += 'El nombre debe de tener al menos 4 caracteres. \\n';\n        } else {\n            document.querySelector('input[name=\"name\"]').classList.remove('border-red');\n        }\n\n        if (password.trim().length < 6) {\n            document.querySelector('input[name=\"password\"]').classList.add('border-red');\n            isValid = false;\n            message += 'La password debe de tener al menos 4 caracteres. \\n';\n        } else {\n            document.querySelector('input[name=\"password\"]').classList.remove('border-red');\n        }\n\n        if (!isValid) {\n            return toast.error(message, { position: toast.POSITION.TOP_CENTER });\n        }\n\n        const resp = await dispatch(startAddUser({ ...formValuesUser, admin: isAdmin }))\n\n        if (resp?.ok) {\n            setUsers([...users, resp.user]);\n            toast.success(<ToastSuccess text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n            setFormValuesUser({ email: '', name: '', password: '' });\n            setIsAdmin(false);\n        } else {\n            const message = resp.msg || 'Error al crear el usuario, inténtelo más tarde';\n            toast.error(<ToastError text={message} />, { position: toast.POSITION.TOP_CENTER });\n        }\n\n    }\n\n    const handleInputChangeOrder = ({ target }) => {\n\n        document.querySelector(`input[name=\"${target.name}\"]`).classList.remove('border-red');\n        setFormValuesOrder({\n            ...formValuesUser,\n            [target.name]: target.value\n        });\n    }\n\n    // Will call tostify first to confirm the option the user will choose. Cancel or Deny.\n    const handleStartDeleteOrder = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (orderId !== '') {\n            toast.warn(<ModalToastify\n                handleDeleteItem={handleSubmitOrder}\n                code={orderId}\n                message=\"Estás seguro de borrar la order con el número\" />,\n                {\n                    position: toast.POSITION.TOP_CENTER,\n                    closeOnClick: false,\n                    autoClose: false,\n                    toastId: '1'\n                });\n        } else {\n            document.querySelector('input[name=\"orderId\"]').classList.add('border-red');\n            return toast.error('Debes indicar el número de orden', { position: toast.POSITION.TOP_CENTER });\n        }\n    }\n\n    const handleSubmitOrder = async () => {\n\n        let isValid = true;\n        let message = '';\n\n        if (!Number.isInteger(Number(orderId)) || orderId.trim().length === 0 || !validator.isNumeric(orderId)) {\n            document.querySelector('input[name=\"orderId\"]').classList.add('border-red');\n            isValid = false;\n            message += 'El id es obligatorio y debe de ser numérico. \\n';\n        } else {\n            document.querySelector('input[name=\"orderId\"]').classList.remove('border-red');\n        }\n\n        if (!isValid) {\n            return toast.error(message, { position: toast.POSITION.TOP_CENTER });\n        }\n\n        const resp = await dispatch(startDeleteOrderEvent(orderId));\n\n        if (resp.ok) {\n            toast.success(<ToastSuccess text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n        } else {\n            toast.error(<ToastError text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n        }\n\n        setFormValuesOrder({ orderId: '' });\n\n    }\n\n\n    return (\n        <div className='admin-screen animate__animated animate__fadeIn'>\n            {idUser && <AdminModal\n                setIdUser={setIdUser}\n                idUser={idUser}\n                users={users}\n                setUsers={setUsers} />}\n            <ToastContainer />\n            <h1>Administración</h1>\n\n            <div className=\"users-main-wrapper\">\n\n                <div className=\"wrapper-users-table\">\n                    <h3>Usuarios registrados</h3>\n                    <div className=\"users-header\">\n                        <div>ID</div>\n                        <div>Email</div>\n                        <div>Nombre</div>\n                        <div>Admin</div>\n                        <div>Activo</div>\n                        <div>Opciones</div>\n                    </div>\n\n                    {\n                        users && users.length > 0 &&\n\n                        users.map(user => {\n\n                            return (\n                                <div key={user.id} className=\"users-body\">\n                                    <div>{user.id}</div>\n                                    <div>{user.email}</div>\n                                    <div>{user.name}</div>\n                                    <div>{user.admin ? \"Si\" : \"No\"}</div>\n                                    <div className=\"user-status\">\n                                        {user.active\n                                            ? <i className=\"fas fa-check\"></i>\n                                            : <i className=\"fas fa-times\"></i>\n                                        }\n                                    </div>\n                                    <div className=\"options-user\">\n                                        <i className=\"fas fa-wrench\" onClick={() => { handleUpdateUser(user.id) }}></i>\n                                        <i className=\"fas fa-user-minus\" onClick={() => { handleStartDeleteUser(user.id, user.name) }}></i>\n                                    </div>\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n\n                <div className=\"forms-wrapper\" onSubmit={handleSubmitUser}>\n                    <form className=\"form-add-users\">\n                        <h3>Agregar nuevo usuario</h3>\n\n                        <div className=\"main-wrapper-inputs\">\n\n                            <div className=\"wrapper-input\">\n                                <label>Admin: </label>\n                                <Switch\n                                    onChange={handleInputSwitch}\n                                    checked={isAdmin}\n                                    onColor=\"#ffa600\"\n                                    height={20}\n                                    width={42} />\n                            </div>\n\n                            <div className=\"wrapper-input\">\n                                <label>Email: </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={handleInputChangeUser}\n                                    placeholder=\"Email\"\n                                    autoComplete=\"off\"\n                                />\n                            </div>\n\n                            <div className=\"wrapper-input\">\n                                <label>Nombre: </label>\n                                <input\n                                    type=\"name\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={handleInputChangeUser}\n                                    placeholder=\"Nombre\"\n                                    autoComplete=\"off\"\n                                />\n                            </div>\n\n                            <div className=\"wrapper-input\">\n                                <label>Password: </label>\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={handleInputChangeUser}\n                                    placeholder=\"Password\"\n                                    autoComplete=\"off\"\n                                />\n                            </div>\n\n                        </div>\n\n                        <div className=\"main-wrapper-submit\">\n                            <button className=\"btn btn-order\" type=\"submit\">Crear</button>\n                        </div>\n\n                    </form>\n\n                    <form className=\"form-remove-orders\" onSubmit={handleStartDeleteOrder}>\n                        <h3>Eliminar orden</h3>\n\n                        <div className=\"wrapper-input\">\n                            <label>Número Orden: </label>\n                            <input\n                                type=\"text\"\n                                value={orderId}\n                                onChange={handleInputChangeOrder}\n                                placeholder=\"Número\"\n                                autoComplete=\"off\"\n                                name=\"orderId\"\n                            />\n                        </div>\n                        <div className=\"main-wrapper-submit\">\n                            <button className=\"btn btn-order-cancel\" type=\"submit\">Eliminar</button>\n                        </div>\n                    </form>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n","export const getMachinesByNumberId = (id, machines) => {\n\n    if (!id || id.length < 1 || machines.length < 1 || machines === 'undefined') {\n        return false;\n    }\n\n    return machines.filter(machine => id.toString() === machine.numberId.toString());\n\n}\n","export const getSectionsByFactoryId = (id, sections) => {\n\n    if (!id || id.length < 1 || sections.length < 1 || sections === 'undefined') {\n        return false;\n    }\n\n    return sections.filter(section => section.factoryId.toString() === id.toString())\n\n}\n","export const getSectionNumbersBySectionId = (id, numbers) => {\n\n    if (!id || id.length < 1 || numbers.length < 1 || numbers === 'undefined') {\n        return false;\n    }\n\n    return numbers.filter(number => number.sectionId.toString() === id.toString());\n\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport const OperationModalAdd = ({ setShowAddModal, formValues, setFormValues }) => {\n\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n    const [subFormValues, setSubFormValues] = useState({ operation: '', time: '' });\n\n    const { operation, time } = subFormValues;\n    const { operations } = formValues;\n\n    const handleCloseModal = () => {\n        setShowAddModal(false);\n        dispatch(uiCloseModal());\n        enableScroll();\n    }\n\n    const handleInputChange = ({ target }) => {\n        setSubFormValues({\n            ...subFormValues,\n            [target.name]: target.value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let isValid = true;\n        var regexp = /^\\d+(\\.\\d{1,2})?$/;\n\n        if (operation.trim().length <= 2 || operation === '') {\n            isValid = false\n            document.querySelector('input[name=\"operation\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"operation\"]').classList.remove('border-red');\n        }\n\n        if (isNaN(parseInt(time)) || time === '' || !regexp.test(time)) {\n            isValid = false;\n            document.querySelector('input[name=\"time\"]').classList.add('border-red');\n        } else {\n            if (time.indexOf('.') > 0) {\n                const [, splitted] = time.split('.');\n\n                if (splitted === '25' || splitted === '50' || splitted === '75' || splitted === '5') {\n                    document.querySelector('input[name=\"time\"]').classList.remove('border-red');\n                } else {\n                    isValid = false;\n                    document.querySelector('input[name=\"time\"]').classList.add('border-red');\n                }\n            } else {\n                document.querySelector('input[name=\"time\"]').classList.remove('border-red');\n            }\n        }\n\n        if (!isValid) {\n            return toast.error('Revise los campos marcados en rojo, el tiempo debe de ser números positivo enteros o .25, .50, .75', { position: 'top-center' });\n        }\n\n        setFormValues({\n            ...formValues,\n            operations: [...operations, subFormValues]\n        });\n\n        handleCloseModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            closeTimeoutMS={300}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Agregar Operación</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                <form onSubmit={handleSubmit}>\n\n                    <div className=\"grid-date\">\n                        <label>Operación: </label>\n                        <input\n                            value={operation}\n                            type=\"text\"\n                            name=\"operation\"\n                            onChange={handleInputChange}\n                            autoComplete=\"off\"\n                        />\n                    </div>\n\n                    <div className=\"grid-date\">\n                        <label>Tiempo: </label>\n                        <input\n                            value={time}\n                            type=\"number\"\n                            name=\"time\"\n                            min=\"0.25\"\n                            step=\"0.01\"\n                            onChange={handleInputChange}\n                            autoComplete=\"off\"\n                        />\n                    </div>\n\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Guardar</button>\n                    </div>\n                </form>\n\n            </div>\n\n            <ToastContainer />\n\n        </Modal>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport const OperationModalUpdate = ({ index, setIndex, formValues, setFormValues }) => {\n\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n    const [subFormValues, setSubFormValues] = useState({ operation: '', time: '' });\n    // const [isModalOperation, setIsModalOperation] = useState(true);\n    const { operation, time } = subFormValues;\n    const { operations } = formValues;\n\n    useEffect(() => {\n\n        if (index != null && operations.length >= index) {\n            setSubFormValues({ ...operations[index] });\n        }\n\n    }, [index, operations]);\n\n    const handleCloseModal = () => {\n        // setIsModalOperation(false);\n        setIndex(null);\n        dispatch(uiCloseModal());\n        enableScroll();\n    }\n\n    const handleInputChange = ({ target }) => {\n        setSubFormValues({\n            ...subFormValues,\n            [target.name]: target.value\n        });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let isValid = true;\n        var regexp = /^\\d+(\\.\\d{1,2})?$/;\n\n        if (operation.trim().length <= 2 || operation === '') {\n            isValid = false\n            document.querySelector('input[name=\"operation\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"operation\"]').classList.remove('border-red');\n        }\n\n        if (isNaN(parseInt(time)) || time === '' || !regexp.test(time)) {\n            isValid = false;\n            document.querySelector('input[name=\"time\"]').classList.add('border-red');\n        } else {\n            if (time.toString().indexOf('.') > 0) {\n                const [, splitted] = time.split('.');\n\n                if (splitted === '25' || splitted === '50' || splitted === '75' || splitted === '5') {\n                    document.querySelector('input[name=\"time\"]').classList.remove('border-red');\n                } else {\n                    isValid = false;\n                    document.querySelector('input[name=\"time\"]').classList.add('border-red');\n                }\n            } else {\n                document.querySelector('input[name=\"time\"]').classList.remove('border-red');\n            }\n        }\n\n        if (!isValid) {\n            return toast.error('Revise los campos marcados en rojo, el tiempo debe de ser números positivo enteros o .25, .50, .75', { position: 'top-center' });\n        }\n\n        setFormValues({\n            ...formValues,\n            operations: operations.map((operation, i) => i === index ? subFormValues : operation)\n        });\n\n        handleCloseModal();\n    }\n\n\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            closeTimeoutMS={300}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Editar Operación</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                <form onSubmit={handleSubmit}>\n\n                    <div className=\"grid-date\">\n                        <label>Operación: </label>\n                        <input\n                            value={operation}\n                            type=\"text\"\n                            name=\"operation\"\n                            onChange={handleInputChange}\n                            autoComplete=\"off\"\n                        />\n                    </div>\n\n                    <div className=\"grid-date\">\n                        <label>Tiempo: </label>\n                        <input\n                            value={time}\n                            type=\"number\"\n                            name=\"time\"\n                            min=\"0.25\"\n                            step=\"0.01\"\n                            onChange={handleInputChange}\n                            autoComplete=\"off\"\n                        />\n                    </div>\n\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Guardar</button>\n                    </div>\n                </form>\n\n            </div>\n\n            <ToastContainer />\n\n        </Modal>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nimport { disableScroll } from '../../helpers/disable-enable-scroll';\n\nimport { OperationModalAdd } from './OperationModalAdd';\nimport { OperationModalUpdate } from './OperationModalUpdate';\n\nimport { toast } from 'react-toastify';\nimport { ModalToastify } from '../ui/ModalToastify';\n\n\nexport const TabOperations = ({ formValues, setFormValues, disabled }) => {\n\n    const dispatch = useDispatch();\n    const { operations } = formValues;\n    const [showAddModal, setShowAddModal] = useState(false)\n    const [index, setIndex] = useState(null);\n\n    const handleAddOperation = () => {\n        setShowAddModal(true);\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    const handleDelete = (i) => {\n        toast.warn(<ModalToastify\n            handleDeleteItem={() => handleDeleteOperation(i)}\n            code={operations[i].operation}\n            message=\"Estás seguro de borrar la operación \" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    const handleDeleteOperation = (index) => {\n        const newOperations = operations.filter((operation, i) => i !== index && operation)\n\n        setFormValues({\n            ...formValues,\n            operations: newOperations\n        });\n    }\n\n    const handleUpdateOperation = (i) => {\n        setIndex(i);\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    return (\n        <div className=\"tab-table-wrapper\">\n            <div>\n\n                <div className=\"header-tab-table header-tab-table1\">\n\n                    <div>\n                        <p>Tiempo</p>\n                    </div>\n                    <div>\n                        <p>Operaciones</p>\n                    </div>\n                </div>\n\n                {\n                    operations.length > 0\n                    &&\n                    operations.map((operation, i) =>\n                    (\n                        <div className=\"header-tab-body header-tab-body1\" key={i}>\n                            <div>\n                                <p>{operation.time}</p>\n                            </div>\n                            <div>\n                                <p>{operation.operation}</p>\n                            </div>\n                            <div>\n                                {\n                                    !disabled &&\n                                    <>\n                                        <i className=\"far fa-trash-alt\" onClick={() => { handleDelete(i) }}></i>\n                                        <i className=\"far fa-edit\" onClick={() => { handleUpdateOperation(i) }}></i>\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    ))\n                }\n\n                {showAddModal\n                    &&\n                    <OperationModalAdd\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                        setShowAddModal={setShowAddModal}\n                    />}\n\n                {(index >= 0 && !showAddModal)\n                    &&\n                    <OperationModalUpdate\n                        index={index}\n                        setIndex={setIndex}\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                    />}\n\n            </div>\n\n            {\n                !disabled &&\n                <div className=\"button-add-tab-wrapper\" onClick={handleAddOperation}>\n                    <i className=\"fas fa-plus\"></i><span>Agregar Operación</span>\n                </div>\n            }\n\n\n        </div>\n    )\n}\n","export const getTechnicianNameById = (id, technicians) => {\n\n    return technicians.find(technician => technician.id.toString() === id);\n\n}","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport es from 'date-fns/locale/es';\n\nimport moment from \"moment\";\n\nimport { getTechnicianNameById } from '../../helpers/getTechnicianNameById';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\n\nexport const ClockInOutModalAdd = ({ setShowAddModal, formValues, setFormValues }) => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { technicians } = useSelector(state => state.crew);\n\n    const [subFormValues, setSubFormValues] = useState(\n        {\n            userId: '0',\n            start: new Date(),\n            end: moment().add('1', 'hours').toDate()\n        });\n\n    const { userId, start, end } = subFormValues;\n    const { clocks, startWork } = formValues;\n\n    const handleCloseModal = () => {\n        enableScroll();\n        setShowAddModal(false);\n        dispatch(uiCloseModal());\n    }\n\n    // This function only will change user select\n    const handleInputChange = ({ target }) => {\n\n        const id = target.value;\n        const { name } = getTechnicianNameById(id, technicians);\n\n        if (name) {\n            setSubFormValues({\n                ...subFormValues,\n                userId: id,\n                user: name\n            });\n        }\n    }\n\n    // Listen for changes on start clock Date\n    const handleDateStartChange = (e) => {\n        setSubFormValues({\n            ...subFormValues,\n            start: e\n        });\n    }\n\n    // Listen for changes on end clock Date\n    const handleDateEndChange = (e) => {\n        setSubFormValues({\n            ...subFormValues,\n            end: e\n        });\n    }\n\n    // Submit the form. Check values and Dates with momentJS\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let isValid = true;\n\n        if (userId === '' || userId <= 0) {\n            isValid = false;\n            document.querySelector('select[name=\"user\"]').classList.add('border-red');\n        } else {\n            document.querySelector('select[name=\"user\"]').classList.remove('border-red');\n        }\n\n        if (!moment(start).isValid) {\n            isValid = false;\n            document.querySelector('.clock-start-modal').classList.add('border-red');\n        } else {\n            document.querySelector('.clock-start-modal').classList.remove('border-red');\n        }\n\n        if (!moment(end).isValid) {\n            isValid = false;\n            document.querySelector('.clock-end-modal').classList.add('border-red');\n        } else {\n            document.querySelector('.clock-end-modal').classList.remove('border-red');\n        }\n\n        if (moment(start).isSameOrAfter(end)) {\n            isValid = false;\n            document.querySelector('.clock-start-modal').classList.add('border-red');\n            document.querySelector('.clock-end-modal').classList.add('border-red');\n        }\n        if (!isValid) {\n            return toast.error('Revise los campos marcados en rojo', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        setFormValues({\n            ...formValues,\n            clocks: [...clocks, subFormValues]\n        });\n\n        handleCloseModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            closeTimeoutMS={300}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Nuevo Fichaje</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"grid-date\">\n                        <label>Técnico: </label>\n                        <select name=\"user\" value={userId} onChange={handleInputChange}>\n                            <option value=\"0\" disabled>Elige Técnico</option>\n                            {technicians.length > 0\n                                && technicians.map(technician =>\n                                    <option key={technician.id} value={technician.id}>{technician.name}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"grid-date\">\n                        <label>Hora Inicio: </label>\n                        <DatePicker\n                            className=\"clock-start-modal\"\n                            selected={start}\n                            timeInputLabel=\"Hora:\"\n                            dateFormat=\"dd/MM/yyyy HH:mm\"\n                            showTimeInput\n                            onChange={handleDateStartChange}\n                            locale={es}\n                            minDate={startWork}\n                        />\n                    </div>\n                    <div className=\"grid-date\">\n                        <label>Hora Fin: </label>\n                        <DatePicker\n                            className=\"clock-end-modal\"\n                            selected={end}\n                            timeInputLabel=\"Hora:\"\n                            dateFormat=\"dd/MM/yyyy HH:mm\"\n                            showTimeInput\n                            onChange={handleDateEndChange}\n                            minDate={start}\n                            locale={es}\n                        />\n                    </div>\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Aceptar</button>\n                    </div>\n                </form>\n            </div>\n            <ToastContainer />\n        </Modal >\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport es from 'date-fns/locale/es';\n\nimport moment from \"moment\";\n\nimport { getTechnicianNameById } from '../../helpers/getTechnicianNameById';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\n\nexport const ClockInOutModalUpdate = ({ setIndex, index, formValues, setFormValues }) => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { technicians } = useSelector(state => state.crew);\n\n    const [subFormValues, setSubFormValues] = useState(\n        {\n            userId: '',\n            user: 'default',\n            start: new Date(),\n            end: moment().add('1', 'hours').toDate()\n        });\n    const { userId, user, start, end } = subFormValues;\n    const { clocks, startWork } = formValues;\n\n    // Get the values of the current CLOCKINOUT clicked\n    useEffect(() => {\n        if (index !== null && clocks.length >= index) {\n            setSubFormValues({ ...clocks[index] })\n        }\n    }, [index, clocks]);\n\n    const handleCloseModal = () => {\n        enableScroll();\n        setIndex(null);\n        dispatch(uiCloseModal());\n    }\n\n    // This function only will change user select\n    const handleInputChange = ({ target }) => {\n\n        const id = target.value;\n        const { name } = getTechnicianNameById(id, technicians);\n\n        if (name) {\n            setSubFormValues({\n                ...subFormValues,\n                userId: id,\n                user: name\n            });\n        }\n    }\n\n    // Listen for changes on start clock Date\n    const handleDateStartChange = (e) => {\n        setSubFormValues({\n            ...subFormValues,\n            start: e\n        });\n    }\n\n    // Listen for changes on end clock Date\n    const handleDateEndChange = (e) => {\n        setSubFormValues({\n            ...subFormValues,\n            end: e\n        });\n    }\n\n    // Submit the form. Check values and Dates with momentJS\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let isValid = true;\n\n        if (user === 'default' || user.trim().length === 0) {\n            isValid = false;\n            document.querySelector('select[name=\"user\"]').classList.add('border-red');\n        } else {\n            document.querySelector('select[name=\"user\"]').classList.remove('border-red');\n        }\n\n        if (!moment(start).isValid) {\n            isValid = false;\n            document.querySelector('.clock-start-modal').classList.add('border-red');\n        } else {\n            document.querySelector('.clock-start-modal').classList.remove('border-red');\n        }\n\n        if (!moment(end).isValid) {\n            isValid = false;\n            document.querySelector('.clock-end-modal').classList.add('border-red');\n        } else {\n            document.querySelector('.clock-end-modal').classList.remove('border-red');\n        }\n\n        if (moment(start).isSameOrAfter(end)) {\n            isValid = false;\n            document.querySelector('.clock-start-modal').classList.add('border-red');\n            document.querySelector('.clock-end-modal').classList.add('border-red');\n        }\n        if (!isValid) {\n            return toast.error('Revise los campos marcados en rojo', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        setFormValues({\n            ...formValues,\n            clocks: clocks.map((clock, i) => i === index ? subFormValues : clock)\n        });\n\n        handleCloseModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            closeTimeoutMS={300}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Editar Fichaje</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}>\n                    <i className=\"fas fa-times\"></i>\n                </span>\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"grid-date\">\n\n                        <label>Técnico: </label>\n                        <select name=\"user\" value={userId} onChange={handleInputChange}>\n                            <option value=\"default\" disabled>Elige Técnico</option>\n                            {technicians.length > 0\n                                && technicians.map(technician =>\n                                    <option key={technician.id} value={technician.id}>{technician.name}</option>)}\n                        </select>\n\n                    </div>\n                    <div className=\"grid-date\">\n                        <label>Hora Inicio: </label>\n                        <DatePicker\n                            className=\"clock-start-modal\"\n                            selected={start}\n                            timeInputLabel=\"Hora:\"\n                            dateFormat=\"dd/MM/yyyy HH:mm\"\n                            showTimeInput\n                            onChange={handleDateStartChange}\n                            locale={es}\n                            minDate={startWork}\n                        />\n                    </div>\n                    <div className=\"grid-date\">\n                        <label>Hora Fin: </label>\n                        <DatePicker\n                            className=\"clock-end-modal\"\n                            selected={end}\n                            timeInputLabel=\"Hora:\"\n                            dateFormat=\"dd/MM/yyyy HH:mm\"\n                            showTimeInput\n                            onChange={handleDateEndChange}\n                            minDate={start}\n                            locale={es}\n                        />\n                    </div>\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Aceptar</button>\n                    </div>\n                </form>\n            </div>\n            <ToastContainer />\n        </Modal >\n    )\n}\n","import React, { useState } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nimport { disableScroll } from '../../helpers/disable-enable-scroll';\n\nimport { ClockInOutModalAdd } from './ClockInOutModalAdd';\nimport { ClockInOutModalUpdate } from './ClockInOutModalUpdate';\nimport { toast } from 'react-toastify';\nimport { ModalToastify } from '../ui/ModalToastify';\n\n\nexport const TabClockInOut = ({ formValues, setFormValues, disabled }) => {\n\n    const dispatch = useDispatch();\n    const { technicians } = useSelector(state => state.crew)\n\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [index, setIndex] = useState(null);\n\n    const { clocks } = formValues;\n\n    const handleAddModal = () => {\n        // Open modal to add new\n        disableScroll();\n        setShowAddModal(true);\n        dispatch(uiOpenModal());\n    }\n\n    const handleUpdateModal = (index) => {\n\n        // Open Modal to edit\n        disableScroll();\n        setIndex(index);\n        dispatch(uiOpenModal());\n    }\n\n    // Show modal confirmation before deleting a technician clock\n    const handleDelete = (i) => {\n        toast.warn(<ModalToastify\n            handleDeleteItem={() => handleDeleteClockInOut(i)}\n            code={clocks[i].user}\n            message=\"Estás seguro de borrar el fichaje de \" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    // Delete and technician clock from array\n    const handleDeleteClockInOut = (index) => {\n\n        const newClocks = clocks.filter((clock, i) => i !== index && clock)\n\n        setFormValues({\n            ...formValues,\n            clocks: newClocks\n        });\n\n    }\n\n\n    return (\n        <div className=\"tab-table-wrapper\">\n            <div>\n\n                <div className=\"header-tab-table header-tab-table2\">\n                    <div>\n                        <p>Técnico</p>\n                    </div>\n                    <div>\n                        <p>H. Inicio</p>\n                    </div>\n                    <div>\n                        <p>H. Fin</p>\n                    </div>\n                </div>\n\n                {\n                    clocks.length > 0\n                    &&\n                    clocks.map((clock, i) =>\n                        <div className=\"header-tab-body header-tab-body2\" key={i}>\n\n                            <select className=\"select-tab-user-clock\" name=\"user\" value={clock.userId} disabled>\n                                {technicians.length > 0\n                                    && technicians.map(technician =>\n                                        <option key={technician.id} value={technician.id}>{technician.name}</option>)}\n                            </select>\n\n                            <div>\n                                <DatePicker\n                                    selected={clock.start}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    showTimeInput\n                                    disabled\n                                />\n                            </div>\n                            <div>\n                                <DatePicker\n                                    selected={clock.end}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    showTimeInput\n                                    disabled\n                                />\n                            </div>\n                            <div>\n                                {\n                                    !disabled &&\n                                    <>\n                                        <i className=\"far fa-trash-alt\" onClick={() => { handleDelete(i) }}></i>\n                                        <i className=\"far fa-edit\" onClick={() => { handleUpdateModal(i) }}></i>\n                                    </>\n                                }\n\n                            </div>\n                        </div>\n                    )\n                }\n                {showAddModal\n                    &&\n                    <ClockInOutModalAdd\n                        setShowAddModal={setShowAddModal}\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                    />\n                }\n                {index >= 0 && !showAddModal\n                    &&\n                    <ClockInOutModalUpdate\n                        setIndex={setIndex}\n                        index={index}\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                    />\n                }\n            </div>\n            {\n                !disabled &&\n\n                <div className=\"button-add-tab-wrapper\" onClick={handleAddModal}>\n                    <i className=\"far fa-clock\"></i>\n                    <span>Fichar</span>\n                </div>\n\n            }\n\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport { uiCloseModal } from '../../actions/ui';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { startGetWarehouseItems } from '../../actions/warehouse';\n\nexport const MaterialModalAdd = ({ formValues, setFormValues, setShowAddModal }) => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { items } = useSelector(state => state.warehouse);\n    const { materials } = formValues;\n\n    const [subFormValues, setSubFormValues] = useState({ code: '', description: '', quantity: '1' });\n    const [searchResults, setSearchResults] = useState([]);\n    const [search, setSearch] = useState('');\n\n    const [itemSelected, setItemSelected] = useState(false);\n\n    const { description, quantity } = subFormValues;\n\n\n    useEffect(() => {\n        dispatch(startGetWarehouseItems());\n    }, [dispatch]);\n\n    useEffect(() => {\n        // When input search have text, will check value of column code and description\n        // looking for matches.\n\n        // When the input is empty, will return an empty array.\n        if (search) {\n            const rows = items.filter((value) => {\n                if (\n                    (value.code !== '' && value.code.toLowerCase().includes(search.toLowerCase()))\n                    ||\n                    (value.description !== '' && value.description.toLowerCase().includes(search.toLowerCase()))) {\n\n                    return value;\n                } else {\n                    return false;\n                }\n\n            });\n            setSearchResults(rows);\n        } else {\n            setSearchResults([]);\n        }\n\n    }, [search, items]);\n\n\n    const handleCloseModal = () => {\n        enableScroll();\n        setShowAddModal(false);\n        dispatch(uiCloseModal());\n    }\n\n    const handleSearch = ({ target }) => {\n        setSearch(target.value);\n    }\n\n    const handleAdd = (code, description) => {\n        setItemSelected(true);\n        setSearch('');\n        setSubFormValues({\n            ...subFormValues,\n            code,\n            description\n        });\n    }\n\n    // This function changes subFormValues\n    const handleInputChange = ({ target }) => {\n\n        setSubFormValues({\n            ...subFormValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    // Submit the form.\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (description.trim().length === 0 || description === '') {\n            return toast.error('Debes elegir un material', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        if (!Number.isInteger((Number)(quantity)) || parseInt(quantity) <= 0 || parseInt(quantity) >= 100) {\n            document.querySelector('input[name=\"quantity\"]').classList.add('border-red');\n            return toast.error('Debes de elegir como mínimo 1 unidad y máximo 100',\n                { position: toast.POSITION.TOP_CENTER });\n        } else {\n            document.querySelector('input[name=\"quantity\"]').classList.remove('border-red');\n        }\n\n        setFormValues({\n            ...formValues,\n            materials: [...materials, subFormValues]\n        });\n\n        handleCloseModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Agregar Material</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                <form onSubmit={handleSubmit}>\n\n                    <div className=\"grid-date\">\n                        <label>Buscar: </label>\n                        <div className=\"custom-input-searcher\">\n                            <input\n                                placeholder=\"Buscar Material\"\n                                name=\"search\"\n                                onChange={handleSearch}\n                                value={search}\n                                autoComplete=\"off\"\n                            />\n                            {searchResults &&\n\n                                <ul onChange={handleAdd} className={`${searchResults.length > 0 ? 'go' : ''}`}>\n                                    {searchResults.map(result =>\n                                        <li\n                                            key={result.code}\n                                            onClick={() => handleAdd(result.code, result.description)}\n                                        >\n                                            {result.description}\n                                        </li>\n                                    )}\n                                </ul>\n                            }\n                        </div>\n                    </div>\n\n                    {itemSelected\n\n                        &&\n                        <>\n                            <div className=\"grid-date\">\n                                <label>Material: </label>\n                                <input\n                                    value={description}\n                                    type=\"text\"\n                                    name=\"item\"\n                                    disabled\n                                />\n                            </div>\n                            <div className=\"grid-date\">\n                                <label>Cantidad: </label>\n                                <input\n                                    value={quantity}\n                                    type=\"number\"\n                                    name=\"quantity\"\n                                    min=\"1\"\n                                    step=\"1\"\n                                    onChange={handleInputChange}\n                                    autoComplete=\"off\"\n                                />\n                            </div>\n                        </>\n                    }\n\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Agregar</button>\n                    </div>\n\n                </form>\n            </div>\n            <ToastContainer />\n        </Modal >\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport { uiCloseModal } from '../../actions/ui';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { startGetWarehouseItems } from '../../actions/warehouse';\n\nexport const MaterialModalUpdate = ({ index, setIndex, formValues, setFormValues }) => {\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { items } = useSelector(state => state.warehouse);\n    const { materials } = formValues;\n\n    const [subFormValues, setSubFormValues] = useState({ code: '', description: '', quantity: '1' });\n    const [searchResults, setSearchResults] = useState([]);\n    const [search, setSearch] = useState('');\n\n    const [itemSelected, setItemSelected] = useState(false);\n\n    const { description, quantity } = subFormValues;\n\n\n    useEffect(() => {\n        dispatch(startGetWarehouseItems());\n    }, [dispatch]);\n\n    useEffect(() => {\n\n        if (index != null && materials.length >= index) {\n            setSubFormValues(materials[index]);\n            setItemSelected(true);\n        }\n\n    }, [index, materials]);\n\n    useEffect(() => {\n        // When input search have text, will check value of column code and description\n        // looking for matches.\n\n        // When the input is empty, will return an empty array.\n        if (search) {\n            const rows = items.filter((value) => {\n                if (\n                    (value.code !== '' && value.code.toLowerCase().includes(search.toLowerCase()))\n                    ||\n                    (value.description !== '' && value.description.toLowerCase().includes(search.toLowerCase()))) {\n\n                    return value;\n                } else {\n                    return false;\n                }\n\n            });\n            setSearchResults(rows);\n        } else {\n            setSearchResults([]);\n        }\n\n    }, [search, items]);\n\n    const handleCloseModal = () => {\n        enableScroll();\n        setIndex(null);\n        dispatch(uiCloseModal());\n    }\n\n    const handleSearch = ({ target }) => {\n        setSearch(target.value);\n    }\n\n    const handleAdd = (code, description) => {\n        setItemSelected(true);\n        setSearch('');\n        setSubFormValues({\n            ...subFormValues,\n            code,\n            description\n        });\n    }\n\n    // This function changes subFormValues\n    const handleInputChange = ({ target }) => {\n        setSubFormValues({\n            ...subFormValues,\n            [target.name]: target.value\n        });\n    }\n\n    // Submit the form.\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (description.trim().length === 0 || description === '') {\n            return toast.error('Debes elegir un material', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        if (!Number.isInteger((Number)(quantity)) || parseInt(quantity) <= 0 || parseInt(quantity) >= 100) {\n            document.querySelector('input[name=\"quantity\"]').classList.add('border-red');\n            return toast.error('Debes de elegir como mínimo 1 unidad y máximo 100',\n                { position: toast.POSITION.TOP_CENTER });\n        } else {\n            document.querySelector('input[name=\"quantity\"]').classList.remove('border-red');\n        }\n\n        setFormValues({\n            ...formValues,\n            materials: materials.map((material, i) => i === index ? subFormValues : material)\n        });\n\n        handleCloseModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            closeTimeoutMS={300}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Editar Material</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                <form onSubmit={handleSubmit}>\n\n                    <div className=\"grid-date\">\n                        <label>Buscar: </label>\n                        <div className=\"custom-input-searcher\">\n                            <input\n                                placeholder=\"Buscar Material\"\n                                name=\"search\"\n                                onChange={handleSearch}\n                                value={search}\n                                autoComplete=\"off\"\n                            />\n                            {searchResults &&\n\n                                <ul onChange={handleAdd} className={`${searchResults.length > 0 ? 'go' : ''}`}>\n                                    {searchResults.map(result =>\n                                        <li\n                                            key={result.code}\n                                            onClick={() => handleAdd(result.code, result.description)}\n                                        >\n                                            {result.description}\n                                        </li>\n                                    )}\n                                </ul>\n                            }\n                        </div>\n                    </div>\n\n                    {itemSelected\n\n                        &&\n                        <>\n                            <div className=\"grid-date\">\n                                <label>Material: </label>\n                                <input\n                                    value={description}\n                                    type=\"text\"\n                                    name=\"item\"\n                                    disabled\n                                />\n                            </div>\n                            <div className=\"grid-date\">\n                                <label>Cantidad: </label>\n                                <input\n                                    value={quantity}\n                                    type=\"number\"\n                                    name=\"quantity\"\n                                    min=\"1\"\n                                    step=\"1\"\n                                    onChange={handleInputChange}\n                                    autoComplete=\"off\"\n                                />\n                            </div>\n                        </>\n                    }\n\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Agregar</button>\n                    </div>\n\n                </form>\n            </div>\n            <ToastContainer />\n        </Modal >\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { uiOpenModal } from '../../actions/ui';\nimport { disableScroll } from '../../helpers/disable-enable-scroll';\nimport { ModalToastify } from '../ui/ModalToastify';\nimport { MaterialModalAdd } from './MaterialModalAdd';\nimport { MaterialModalUpdate } from './MaterialModalUpdate';\n\nexport const TabMaterials = ({ formValues, setFormValues, disabled }) => {\n\n    const dispatch = useDispatch();\n    const { materials } = formValues;\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [index, setIndex] = useState(null);\n\n\n    const handleAddItem = () => {\n        setShowAddModal(true);\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    const handleDelete = (i) => {\n\n        toast.warn(<ModalToastify\n            handleDeleteItem={() => handleDeleteItem(i)}\n            code={materials[i].description}\n            message=\"Estás seguro de borrar el item \" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    const handleDeleteItem = (index) => {\n        const newMaterials = materials.filter((material, i) => i !== index && material)\n\n        setFormValues({\n            ...formValues,\n            materials: newMaterials\n        });\n    }\n\n    const handleUpdateItem = (i) => {\n        setIndex(i);\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    return (\n        <div className=\"tab-table-wrapper\">\n            <div>\n\n\n                <div className=\"header-tab-table header-tab-table3\">\n                    <div>\n                        <p>Código</p>\n                    </div>\n                    <div>\n                        <p>Descripción</p>\n                    </div>\n                    <div>\n                        <p>Cantidad</p>\n                    </div>\n\n                </div>\n                {\n                    materials && materials.length > 0\n                    &&\n                    materials.map((material, i) =>\n                    (<div className=\"header-tab-body header-tab-body3\" key={i}>\n                        <div>\n                            <p>{material.code}</p>\n                        </div>\n                        <div>\n                            <p>{material.description}</p>\n                        </div>\n                        <div>\n                            <p>{material.quantity}</p>\n                        </div>\n                        <div className=\"action-icons\">\n                            {\n                                !disabled &&\n                                <>\n                                    <i className=\"far fa-trash-alt\" onClick={() => { handleDelete(i) }}></i>\n                                    <i className=\"far fa-edit\" onClick={() => { handleUpdateItem(i) }}></i>\n                                </>\n                            }\n                        </div>\n                    </div>)\n                    )\n                }\n\n                {showAddModal\n                    &&\n                    <MaterialModalAdd\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                        setShowAddModal={setShowAddModal}\n                    />}\n\n                {(index >= 0 && !showAddModal)\n                    &&\n                    <MaterialModalUpdate\n                        index={index}\n                        setIndex={setIndex}\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                    />\n                }\n\n            </div>\n\n\n            {\n                !disabled &&\n\n                <div className=\"button-add-tab-wrapper\" onClick={handleAddItem}>\n                    <i className=\"fas fa-boxes\"></i><span>Nuevo item</span>\n                </div>\n\n            }\n\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Flip } from 'react-toastify';\nimport { clearActiveEvent } from '../../actions/calendar';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { ToastError } from './ToastError';\nimport { ToastSuccess } from './ToastSuccess';\n\n\nexport const BackgroundModal = ({ result, setShowModal }) => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // On first render create and execute toast of SUCCES or ERROR\n    useEffect(() => {\n\n        if (Object.keys(result).length > 0) {\n\n            const { message, ok: isOk } = result;\n\n            if (isOk) {\n                return toast.success(<ToastSuccess text={message} />, { autoClose: 2000, toastId: 1, position: 'top-center', onClose: () => handleCloseModal() });\n            } else {\n                return toast.error(<ToastError text={message} />, { autoClose: 2000, toastId: 1, position: 'top-center', onClose: () => handleError() });\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [result]);\n\n    // If the operation failed, close modal\n    const handleError = () => {\n        setShowModal(false);\n        enableScroll();\n    }\n\n    // If the operation succeded and after the toast disappears, will close the modal and redirect to /calendar\n    const handleCloseModal = () => {\n        setShowModal(false);\n        enableScroll();\n        dispatch(clearActiveEvent());\n        const path = `/calendar`;\n        history.push(path);\n    }\n\n    return (\n        <div className=\"modal-advise animate__animated animate__fadeIn animate__fast\">\n            <ToastContainer transition={Flip} />\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport { startLoadFactory } from '../../actions/factory';\n\nimport { getMachinesByNumberId } from '../../helpers/getMachinesByNumberId';\nimport { getSectionsByFactoryId } from '../../helpers/getSectionsByFactoryId';\nimport { getSectionNumbersBySectionId } from '../../helpers/getSectionNumbersBySectionId';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport es from 'date-fns/locale/es';\n\nimport moment from \"moment\";\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { TabOperations } from './TabOperations';\nimport { TabClockInOut } from './TabClockInOut';\nimport { TabMaterials } from './TabMaterials';\nimport { clearActiveEvent, startAddOrderEvent, startUpdateOrderEvent } from '../../actions/calendar';\n\nimport { BackgroundModal } from '../ui/BackgroundModal';\nimport { ModalToastify } from '../ui/ModalToastify';\n\nconst initialState = {\n    factory: 'default',\n    section: 'default',\n    machine: 'default',\n    number: 'default',\n    technician: 'default',\n    worker: '',\n    orderType: 'default',\n    breakdown: 'default',\n    closed: false,\n    confirmed: false,\n    start: new Date(),\n    end: new Date(),\n    startFix: new Date(),\n    endFix: new Date(),\n    materials: [],\n    operations: [],\n    clocks: [],\n    totalMins: 0,\n    description: '',\n}\n\nexport const OrderForm = () => {\n\n    const dispatch = useDispatch();\n    const { factories, sections, machines, numbers } = useSelector(state => state.factory);\n    const { types, breakdowns, activeEvent } = useSelector(state => state.calendar);\n    const { technicians } = useSelector(state => state.crew);\n    const { showResponsive } = useSelector(state => state.nav);\n\n\n    // Show allowed sections, numbers and machines\n    const [selectedSections, setSelectedSections] = useState([]);\n    const [selectedSectionsNumbers, setSelectedSectionsNumbers] = useState([]);\n    const [selectedMachines, setSelectedMachines] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [result, setResult] = useState({});\n    const [breadMessage, setBreadMessage] = useState('*Selecciona una factoría para para desbloquear el siguiente campo');\n\n\n    // Formvalues deconstruction\n    const [formValues, setFormValues] = useState(initialState);\n    const { factory,\n        section,\n        machine,\n        number,\n        technician,\n        worker,\n        orderType,\n        breakdown,\n        closed,\n        confirmed,\n        start,\n        end,\n        startFix,\n        endFix,\n        description,\n    } = formValues;\n\n    const history = useHistory();\n\n    // Load and fecth factories, sections, machines and docs from DB\n    useEffect(() => {\n        dispatch(startLoadFactory());\n    }, [dispatch]);\n\n    // Load activeEvent or redirect to /neworder path if there is not an activeEvent\n    useEffect(() => {\n        // If there is an activeEvent, get the current factory.name,\n        // section.number, section.name and machine.name\n        if (activeEvent) {\n            setBreadMessage('Ok');\n            setFormValues(activeEvent);\n            const { factory: factoryId } = activeEvent;\n            const factorySections = getSectionsByFactoryId(factoryId, sections);\n            setSelectedSections(factorySections);\n\n            const { section: sectionId } = activeEvent;\n            const { number: numberId } = activeEvent;\n            const sectionNumbers = getSectionNumbersBySectionId(sectionId, numbers);\n            const sectionMachines = getMachinesByNumberId(numberId, machines);\n            setSelectedSectionsNumbers(sectionNumbers);\n            setSelectedMachines(sectionMachines);\n        } else {\n            setFormValues(initialState);\n            setSelectedSections([]);\n            setSelectedSectionsNumbers([]);\n            setSelectedMachines([]);\n\n            if (history.location.pathname === '/order') {\n                history.push('/neworder');\n            }\n        }\n\n    }, [activeEvent, history, machines, numbers, sections]);\n\n    // When de component is dismounted, remove the activeEvent from store\n    useEffect(() => {\n        return () => {\n            dispatch(clearActiveEvent());\n        }\n    }, [dispatch]);\n\n\n    const handleInputChange = async ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n\n        // If the input changed is a factory, remove the sections and machines rendered\n        // in the selects and the breadcrumb message, and set the new sections belonging to the factory\n        if (target.name === 'factory') {\n            setSelectedSectionsNumbers([]);\n            setSelectedMachines([]);\n            setBreadMessage('*Selecciona una sección para desbloquear el siguiente campo');\n\n            setFormValues({\n                ...formValues,\n                [target.name]: target.value,\n                section: 'default',\n                number: 'default',\n                machine: 'default'\n            });\n\n            const id = target.value;\n            const factorySections = getSectionsByFactoryId(id, sections);\n            setSelectedSections(factorySections);\n        }\n\n        // If the input changed is a section, remove the machines rendered in the select\n        // and the breadcrumb message, and set the new numbers belonging to the section\n        if (target.name === 'section') {\n            setSelectedMachines([]);\n            setBreadMessage('*Selecciona el número de sección para desbloquear el resto de campos');\n\n            setFormValues({\n                ...formValues,\n                [target.name]: target.value,\n                number: 'default',\n                machine: 'default'\n            });\n\n            const id = target.value;\n            const sectionNumbers = getSectionNumbersBySectionId(id, numbers);\n            setSelectedSectionsNumbers(sectionNumbers);\n        }\n\n        // If the input changed is a number, remove the breadcrumb message\n        // and set the new machines belonging to the number\n        if (target.name === 'number') {\n            setBreadMessage('Ok');\n\n            setFormValues({\n                ...formValues,\n                [target.name]: target.value,\n                machine: 'default'\n            });\n\n            const id = target.value;\n            const sectionMachines = getMachinesByNumberId(id, machines);\n            setSelectedMachines(sectionMachines);\n        }\n    }\n\n    // Listen for date changes start input\n    const handleStartDateChange = (e) => {\n        setFormValues({ ...formValues, start: e });\n        document.querySelector('input[name=\"start\"]').classList.remove('border-red');\n    }\n\n    // Listen for date changes end input\n    const handleEndDateChange = (e) => {\n        setFormValues({ ...formValues, end: e });\n        document.querySelector('input[name=\"end\"]').classList.remove('border-red');\n    }\n\n    // Listen for date changes startFix input\n    const handleStartFixDateChange = (e) => {\n        setFormValues({ ...formValues, startFix: e });\n        document.querySelector('input[name=\"startFix\"]').classList.remove('border-red');\n    }\n\n    // Listen for date changes endFix input\n    const handleEndFixDateChange = (e) => {\n        setFormValues({ ...formValues, endFix: e });\n        document.querySelector('input[name=\"endFix\"]').classList.remove('border-red');\n    }\n\n    // If the user agree the form, the event will be locked setting the\n    // property closed to true\n    const handleLockChange = () => {\n        setFormValues({ ...formValues, closed: !closed });\n    }\n\n    const checkOrder = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (closed) {\n\n            toast.warn(<ModalToastify\n                handleDeleteItem={() => handleSubmit(e)}\n                message=\"El proceso es irreversible, estás seguro de cerrar la orden\" />,\n                {\n                    position: toast.POSITION.TOP_CENTER,\n                    closeOnClick: false,\n                    autoClose: false,\n                    toastId: '1'\n                });\n        } else {\n            handleSubmit(e);\n        }\n\n    }\n\n    // Check all the inputs are not empty and if there is an activeEvent, update\n    // if there isn't an activeEvent, create\n    const handleSubmit = async () => {\n\n        let isValid = true;\n        let result = {};\n\n        if (!factory || factory === 'default' || factory === '') {\n            document.querySelector('select[name=\"factory\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"factory\"]')?.classList.remove('border-red');\n        }\n\n        if (!section || section === 'default' || section === '') {\n            document.querySelector('select[name=\"section\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"section\"]')?.classList.remove('border-red');\n        }\n\n        if (!number || number === 'default' || number === '') {\n            document.querySelector('select[name=\"number\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"number\"]')?.classList.remove('border-red');\n        }\n\n        if (!machine || machine === 'default' || machine === '') {\n            document.querySelector('select[name=\"machine\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"machine\"]')?.classList.remove('border-red');\n        }\n\n        if (!orderType || orderType === 'default' || orderType === '') {\n            document.querySelector('select[name=\"orderType\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"orderType\"]')?.classList.remove('border-red');\n        }\n\n        if (!breakdown || breakdown === 'default' || breakdown === '') {\n            document.querySelector('select[name=\"breakdown\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"breakdown\"]')?.classList.remove('border-red');\n        }\n\n        if (!technician || technician === 'default' || technician === '') {\n            document.querySelector('select[name=\"technician\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"technician\"]')?.classList.remove('border-red');\n        }\n\n        if (!worker || worker.trim().length <= 2) {\n            document.querySelector('input[name=\"worker\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('input[name=\"worker\"]')?.classList.remove('border-red');\n        }\n\n        if (moment(start).isSameOrAfter(end)) {\n            document.querySelector('input[name=\"start\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('input[name=\"start\"]')?.classList.remove('border-red');\n        }\n\n        if (moment(end).isBefore(endFix) || moment(end).isBefore(start)) {\n            document.querySelector('input[name=\"end\"]')?.classList.add('border-red');\n            isValid = false;\n\n            if (moment(end).isBefore(endFix)) {\n                document.querySelector('input[name=\"endFix\"]')?.classList.add('border-red');\n            }\n            if (moment(end).isBefore(start)) {\n                document.querySelector('input[name=\"start\"]')?.classList.add('border-red');\n            }\n\n        } else {\n            document.querySelector('input[name=\"end\"]')?.classList.remove('border-red');\n        }\n\n        if (moment(startFix).isBefore(start) || moment(startFix).isSameOrAfter(endFix)) {\n            document.querySelector('input[name=\"startFix\"]')?.classList.add('border-red');\n            isValid = false;\n\n            if (moment(startFix).isBefore(start)) {\n                document.querySelector('input[name=\"start\"]')?.classList.add('border-red');\n            }\n            if (moment(startFix).isSameOrAfter(endFix)) {\n                document.querySelector('input[name=\"endFix\"]')?.classList.add('border-red');\n            }\n\n        } else {\n            document.querySelector('input[name=\"startFix\"]')?.classList.remove('border-red');\n        }\n\n        if (moment(endFix).isBefore(startFix) || moment(endFix).isAfter(end) ||\n            moment(endFix).isAfter(end) || moment(endFix).isSameOrBefore(startFix)) {\n\n            document.querySelector('input[name=\"endFix\"]')?.classList.add('border-red');\n            isValid = false;\n\n            if (moment(endFix).isBefore(startFix)) {\n                document.querySelector('input[name=\"startFix\"]')?.classList.add('border-red');\n            }\n            if (moment(endFix).isAfter(end)) {\n                document.querySelector('input[name=\"end\"]')?.classList.add('border-red');\n            }\n\n        } else {\n            document.querySelector('input[name=\"endFix\"]')?.classList.remove('border-red');\n        }\n\n        if (description.length <= 0 || description.length === '') {\n            isValid = false;\n            document.querySelector('.description-textarea')?.classList.add('border-red');\n        } else {\n            document.querySelector('.description-textarea')?.classList.remove('border-red');\n        }\n\n        if (!isValid) {\n            return toast.error('Revise los campos marcados en rojo y revise las fechas debídamente!', { position: 'top-center' });\n        }\n\n        if (activeEvent) {\n            result = await dispatch(startUpdateOrderEvent(formValues));\n        } else {\n            result = await dispatch(startAddOrderEvent(formValues));\n        }\n\n        setShowModal(true);\n        setResult(result);\n\n    }\n\n    return (\n\n        <>\n            {showModal\n                &&\n                <BackgroundModal\n                    result={result}\n                    setShowModal={setShowModal}\n                />\n            }\n\n            <div className=\"animate__animated animate__fadeIn animated__fast\">\n\n                {\n                    !activeEvent\n                        ? <h1 className=\"h1-order\">Nueva Orden</h1>\n                        : confirmed\n                            ? <h1 className=\"h1-order\">Ver Orden Cerrada</h1>\n                            : <h1 className=\"h1-order\">Editar Orden</h1>\n                }\n\n                <form onSubmit={checkOrder}>\n\n                    {!showModal && <ToastContainer />}\n\n                    <h3 className={`h3-order ${breadMessage === 'Ok' ? 'mb-4' : ''}`}>Datos Orden</h3>\n\n                    <div className=\"icon-lock-unlock-wrapper\">\n                        {!activeEvent && <i className=\"fas fa-lock-open disabled\"></i>}\n\n                        {\n                            confirmed === 1\n                            &&\n                            <i className=\"fas fa-lock disabled\"></i>\n                        }\n                        {\n                            (!confirmed || confirmed === 0) && activeEvent && (closed || closed === 1) &&\n                            <i className=\"fas fa-lock\" onClick={handleLockChange}></i>\n                        }\n                        {\n                            (!confirmed || confirmed === 0) && activeEvent && (!closed || closed === 0) &&\n                            <i className=\"fas fa-lock-open\" onClick={handleLockChange}></i>\n                        }\n\n                    </div>\n\n                    <span className={`advise-factory animate__animated animate__fadeIn`}>\n                        {breadMessage !== 'Ok' && `${breadMessage}`}\n                    </span>\n\n                    <div className=\"order-form\">\n\n                        <div className=\"factory-wrapper form-grid\">\n                            <label>Factoría: </label>\n                            <select\n                                name=\"factory\"\n                                value={factory}\n                                onChange={handleInputChange}\n                                disabled={closed}\n                            >\n                                <option value=\"default\" disabled>Factoría</option>\n                                {factories.map(factory =>\n                                    <option key={factory.id} value={factory.id}>{factory.name}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"section-wrapper form-grid\">\n                            <label>Sección: </label>\n                            <select\n                                name=\"section\"\n                                value={section}\n                                onChange={handleInputChange}\n                                disabled={selectedSections.length === 0 || closed}\n                            >\n                                <option value=\"default\" disabled>Elige Sección</option>\n                                {selectedSections.length > 0\n                                    && selectedSections.map(section =>\n                                        <option key={section.id} value={section.id}>{section.name}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"number-wrapper form-grid\">\n                            <label>Número: </label>\n                            <select\n                                name=\"number\"\n                                value={number}\n                                onChange={handleInputChange}\n                                disabled={selectedSectionsNumbers.length === 0 || closed}\n                            >\n\n                                <option value=\"default\" disabled>Elige Número</option>\n                                {selectedSectionsNumbers.length > 0\n                                    && selectedSectionsNumbers.map(number =>\n                                        <option key={number.id} value={number.id}>{number.number}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"machine-wrapper form-grid\">\n                            <label>Máquina: </label>\n                            <select\n                                name=\"machine\"\n                                value={machine}\n                                onChange={handleInputChange}\n                                disabled={selectedMachines.length === 0 || closed}\n                            >\n\n                                <option value=\"default\" disabled>Elige Máquina</option>\n                                {selectedMachines.length > 0\n                                    && selectedMachines.map(machine =>\n                                        <option key={machine.id} value={machine.id}>{machine.name}</option>)}\n                            </select>\n                        </div>\n\n\n                        <div className=\"order-type-wrapper form-grid\">\n                            <label>Tipo orden: </label>\n                            <select\n                                name=\"orderType\"\n                                value={orderType}\n                                onChange={handleInputChange}\n                                disabled={closed}\n                            >\n                                <option value=\"default\" disabled>Elige Tipo</option>\n                                {types.length > 0\n                                    && types.map(type =>\n                                        <option key={type.id} value={type.id}>{type.name}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"breakdown-wrapper form-grid\">\n                            <label>Tipo avería: </label>\n                            <select\n                                name=\"breakdown\"\n                                value={breakdown}\n                                onChange={handleInputChange}\n                                disabled={closed}\n                            >\n                                <option value=\"default\" disabled>Elige Avería</option>\n                                {breakdowns.length > 0\n                                    && breakdowns.map(breakdown =>\n                                        <option key={breakdown.id} value={breakdown.id}>{breakdown.name}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"technician-wrapper form-grid\">\n                            <label>Técnico: </label>\n                            <select\n                                name=\"technician\"\n                                value={technician}\n                                onChange={handleInputChange}\n                                disabled={closed}\n                            >\n                                <option value=\"default\" disabled>Elige Técnico</option>\n                                {technicians.length > 0\n                                    && technicians.map(technician =>\n                                        <option key={technician.id} value={technician.id}>{technician.name}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"worker-wrapper form-grid\">\n                            <label>Avisado por: </label>\n                            <input\n                                type=\"text\"\n                                name=\"worker\"\n                                value={worker}\n                                onChange={handleInputChange}\n                                disabled={closed}\n                                autoComplete=\"off\"\n                            />\n                        </div>\n                    </div>\n\n                    <h3 className=\"h3-order\">Fechas Orden</h3>\n\n                    <div className=\"order-form2\">\n\n                        <div className=\"grid-dates\">\n                            <div className=\"start-work-wrapper form-grid limit\">\n                                <label>Fecha aviso: </label>\n                                {!showResponsive && <DatePicker\n                                    selected={start}\n                                    onChange={handleStartDateChange}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    locale={es}\n                                    showTimeInput\n                                    name=\"start\"\n                                    disabled={closed}\n                                />}\n                            </div>\n\n                            <div className=\"end-work-wrapper form-grid limit\">\n                                <label>Fecha fin: </label>\n                                {!showResponsive && <DatePicker\n                                    selected={end}\n                                    onChange={handleEndDateChange}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    showTimeInput\n                                    locale={es}\n                                    minDate={start}\n                                    name=\"end\"\n                                    disabled={closed}\n                                />}\n                            </div>\n                        </div>\n                        <div className=\"grid-dates\">\n                            <div className=\"start-fix-wrapper form-grid limit\">\n                                <label>Inicio trabajo: </label>\n                                {!showResponsive && <DatePicker\n                                    selected={startFix}\n                                    onChange={handleStartFixDateChange}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    locale={es}\n                                    showTimeInput\n                                    minDate={start}\n                                    name=\"startFix\"\n                                    disabled={closed}\n                                />}\n                            </div>\n\n                            <div className=\"end-fix-wrapper form-grid limit\">\n                                <label>Fin trabajo: </label>\n                                {!showResponsive && <DatePicker\n                                    selected={endFix}\n                                    onChange={handleEndFixDateChange}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    locale={es}\n                                    showTimeInput\n                                    minDate={startFix}\n                                    name=\"endFix\"\n                                    disabled={closed}\n                                />}\n                            </div>\n                        </div>\n                    </div>\n\n                    <h3 className=\"h3-order\">Información Adicional</h3>\n\n                    <Tabs>\n                        <TabList>\n                            <Tab>Notas</Tab>\n                            <Tab>Operaciones</Tab>\n                            <Tab>Fichajes</Tab>\n                            <Tab>Materiales</Tab>\n                        </TabList>\n\n                        {/* Notes */}\n                        <TabPanel >\n                            <div className=\"tab-table-wrapper\">\n                                <div className=\"tab-table-textarea\">\n                                    <label>Observaciones: </label>\n                                    <textarea\n                                        className=\"description-textarea\"\n                                        name='description'\n                                        value={description}\n                                        onChange={handleInputChange}\n                                        disabled={closed}></textarea>\n                                </div>\n                            </div>\n                        </TabPanel>\n\n                        {/* Operations */}\n                        <TabPanel>\n                            <TabOperations\n                                formValues={formValues}\n                                setFormValues={setFormValues}\n                                disabled={closed}\n                            />\n                        </TabPanel>\n\n                        {/* Clock IN and Clock OUT */}\n                        <TabPanel>\n                            <TabClockInOut\n                                formValues={formValues}\n                                setFormValues={setFormValues}\n                                disabled={closed}\n                            />\n                        </TabPanel>\n\n                        {/* Materials */}\n                        <TabPanel>\n                            <TabMaterials\n                                formValues={formValues}\n                                setFormValues={setFormValues}\n                                disabled={closed}\n                            />\n                        </TabPanel>\n\n                    </Tabs>\n\n                    <div className=\"button-wrapper\">\n                        <button\n                            className=\"btn btn-order-cancel\"\n                            onClick={() => history.goBack()}\n                        >\n                            Volver\n                        </button>\n\n                        {\n                            !confirmed &&\n                            <button className=\"btn btn-order\" type=\"submit\">\n                                {activeEvent ? \"Guardar\" : \"Crear Orden\"}\n                            </button>\n                        }\n\n\n                    </div>\n\n                </form>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { OrderForm } from '../components/order/OrderForm';\nimport { LoadingPopup } from '../components/ui/LoadingPopup';\n\nexport const OrderScreen = () => {\n\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        showLoading();\n    }, []);\n\n    const showLoading = () => {\n\n        setTimeout(() => {\n            setIsLoading(false);\n        }, 300);\n\n    }\n\n    return (\n\n        <div className='order-wrapper'>\n            {isLoading\n                ? <LoadingPopup type=\"no-animation\" />\n\n                : <OrderForm />\n            }\n        </div>\n    )\n\n}\n","export const messages = {\n    allDay: \"Todo el día\",\n    previous: \"<\",\n    next: \">\",\n    today: \"Hoy\",\n    month: \"Mes\",\n    week: \"Semana\",\n    day: \"Día\",\n    agenda: \"Agenda\",\n    date: \"Fecha\",\n    time: \"Hora\",\n    event: \"Evento\",\n    noEventsInRange: \"No hay eventos en este rango\",\n    showMore: (total) => `+ Ver más (${total})`,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getNameFactory, getNameMachine, getNameSection } from \"../../helpers/helpersHistorical\";\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { factories, sections, machines } = useSelector(state => state.factory);\n\n    const [data, setData] = useState({ factoryComponent: '', sectionComponent: '', machineComponent: '' });\n    const { factoryComponent, sectionComponent, machineComponent } = data;\n\n    useEffect(() => {\n        if (event && factories.length > 0 && sections.length > 0 && machines.length > 0) {\n\n            setData({\n                factoryComponent: getNameFactory(event.factory, factories)?.name,\n                sectionComponent: getNameSection(event.section, sections)?.name,\n                machineComponent: getNameMachine(event.machine, machines)?.name\n            });\n\n        }\n    }, [event, factories, machines, sections])\n\n    return (\n        <div>\n            <strong>F{factoryComponent} - {sectionComponent} -</strong>\n            <span> {machineComponent}</span>\n        </div>\n    );\n};\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// Big-Calendar dependencies\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { messages } from '../helpers/calendar-messages';\n\n// Import Spanish texts for days and months\nimport \"moment/locale/es\";\n\nimport { CalendarEvent } from '../components/calendar/CalendarEvent';\nimport { CalendarModal } from '../components/calendar/CalendarModal';\nimport { uiOpenModal } from '../actions/ui';\nimport { setActiveEvent } from '../actions/calendar';\nimport { getEventColor } from '../helpers/getEventColor';\nimport { disableScroll } from '../helpers/disable-enable-scroll';\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\n\n\nexport const CalendarScreen = () => {\n\n    // Get events array from Redux Store\n    const { events } = useSelector(state => state.calendar);\n    const { types } = useSelector(state => state.calendar);\n\n    const dispatch = useDispatch();\n\n    // Set active event on Redux Store calendar: events[], activeEvent = event\n    // then => Open modal\n    const handleEventClick = (event) => {\n        disableScroll();\n        dispatch(setActiveEvent(event));\n        dispatch(uiOpenModal());\n    };\n\n    // Calendar events style\n    const eventStyleGetter = (event, start, end, isSelected) => {\n\n        const { backgroundColor, textColor } = getEventColor(event, types);\n\n        const style = {\n            backgroundColor: backgroundColor,\n            borderRadius: \"5px\",\n            opacity: 0.8,\n            display: \"block\",\n            color: textColor,\n        };\n        return {\n            style,\n        };\n    };\n    // Save last position in localStorage\n    const [lastView, setLastView] = useState(localStorage.getItem(\"lastView\") || \"month\");\n\n    // When the view changes, save the position in localStorage\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem(\"lastView\", e);\n    };\n\n    return (\n        <div className='calendar-screen animate__animated animate__fadeIn'>\n            <h1>Calendario</h1>\n            <Calendar\n                defaultDate={moment().toDate()}\n                defaultView=\"month\"\n                events={events}\n                localizer={localizer}\n                eventPropGetter={eventStyleGetter}\n                messages={messages}\n                components={{ event: CalendarEvent }}\n                onSelectEvent={handleEventClick}\n                onView={onViewChange}\n                view={lastView}\n                startAccessor='start'\n                endAccessor='end'\n            />\n            <CalendarModal />\n        </div>\n    )\n}\n","\n// Depends on orderType of the event, color badge on calendar will be different\nexport const getEventColor = (event, types) => {\n\n    let colors = {\n        backgroundColor: '#0E377F',\n        textColor: 'white'\n    }\n\n    if (types && types.length > 0) {\n        const typeId = event.orderType;\n\n        const type = types.find(type => type.id === typeId);\n\n        if (type) {\n            switch (type.name) {\n                // orange\n                case 'Directiva':\n                    colors.backgroundColor = '#FACC2E';\n                    break;\n                // blue\n                case 'Planificada':\n                    colors.backgroundColor = '#0E377F';\n                    break;\n                // green\n                case 'Preventiva':\n                    colors.backgroundColor = '#31B404';\n                    break;\n                // red\n                case 'Correctiva':\n                    colors.backgroundColor = '#FF4000';\n                    break;\n                // turquoise\n                case 'Otros':\n                    colors.backgroundColor = '#04B4AE';\n                    break;\n                // break white\n                default:\n                    colors.backgroundColor = '#000';\n                    break;\n            }\n\n        }\n\n    }\n\n    return colors;\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearActiveTechnician } from '../../actions/technician';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const ButtonNew = ({ iconData }) => {\n\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n\n        dispatch(clearActiveTechnician());\n        dispatch(uiOpenModal());\n\n    }\n\n    return (\n        <div className={iconData.className} onClick={handleClick}>\n            {iconData.icon}\n        </div>\n    )\n}\n\n\n","\n// If the file is not an valid extension or biger than 2mb, will throw a error message\n// If is ok, will return a promise, because is waiting for set the loading gif on img and then\n// set the new image on image src attribute\nexport const checkImageSizeAndType = async (file) => {\n\n    if (isImage(file.type)) {\n\n        if (checkSize(file.size)) {\n            const src = URL.createObjectURL(file);\n            document.querySelector('.technician-img').src = `${process.env.PUBLIC_URL}/assets/images/loader.gif`;\n\n            return new Promise(resolve => setTimeout(() => {\n                document.querySelector('.technician-img').src = src;\n                resolve({\n                    ok: true\n                });\n            }, 400))\n\n        } else {\n            return ({\n                ok: false,\n                error: 'Error, el tamaño máximo de imagen es de 2.0MB'\n            });\n        }\n\n    } else {\n        return ({\n            res: false,\n            error: 'Error, extensiones soportadas .jpg, .png y .jpeg'\n        });\n    }\n\n}\n\n// Valid image *.png, *.jpg, *.jpeg\nconst isImage = (imgType) => {\n\n    if (imgType === 'image/png' || imgType === 'image/jpg' || imgType === 'image/jpeg') {\n        return true;\n    } else {\n        return false;\n    }\n\n}\n// Image size between > 0 and 2mb\nconst checkSize = (size) => {\n    if (size <= 2000000 && size > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearActiveTechnician, startAddTechnician, startDeleteTechnician, startUpdateTechnician } from '../../actions/technician';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\n\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { checkImageSizeAndType } from '../../helpers/checkImageSizeAndType';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n// minified version is also included\n// import 'react-toastify/dist/ReactToastify.min.css';\n\nimport moment from 'moment';\n\nimport validator from 'validator';\nimport { ModalToastify } from '../ui/ModalToastify';\n\nconst initialState = {\n    name: '',\n    surname: '',\n    birthDate: new Date(),\n    identityDocument: '',\n    phoneNumber: '',\n    email: '',\n    city: '',\n    address: '',\n    image: null,\n    notes: '',\n    schedule: 'default',\n    factory: 'default',\n}\n\nexport const CrewModal = () => {\n\n    const [formValues, setFormValues] = useState(initialState);\n    const [file, setFile] = useState(null);\n    const {\n        name, surname, birthDate, identityDocument, phoneNumber,\n        email, city, address, image, notes, schedule, factory\n    } = formValues;\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeTechnician } = useSelector(state => state.crew);\n\n    const dispatch = useDispatch();\n\n    // If there is an activeTechnician on Store, Modal is opened => disableScroll and set the data\n    // If there is not activeTechnician, init the form with empty values\n    useEffect(() => {\n        if (activeTechnician) {\n            setFormValues(activeTechnician);\n        } else {\n            setFormValues(initialState);\n        }\n    }, [activeTechnician]);\n\n    // Update form values on type\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    // Detect when image file change and update picture \n    const handlePictureChange = async ({ target }) => {\n\n        if (target.files.length > 0) {\n\n            const tempFile = target.files[0];\n\n            const check = await checkImageSizeAndType(tempFile);\n\n            if (!check.ok) {\n                return toast.error(check.error, { position: toast.POSITION.TOP_CENTER });\n            }\n\n            setFile(target.files[0]);\n        }\n    }\n\n    // Update date on any change\n    const handleDateChange = (date) => {\n        setFormValues({\n            ...formValues,\n            birthDate: new Date(date)\n        });\n    }\n\n    // Delete technician from the Store\n    const handleDeleteTechnician = () => {\n        enableScroll();\n        dispatch(startDeleteTechnician());\n        dispatch(uiCloseModal());\n    }\n\n    // Will call tostify first to confirm the option the user will choose. Cancel or Deny.\n    const handleStartDelete = () => {\n        toast.warn(<ModalToastify\n            handleDeleteItem={handleDeleteTechnician}\n            code={`${activeTechnician.name} ${activeTechnician.surname}`}\n            message=\"Estás seguro de borrar el técnico con el nombre\" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    // Check form values and Update or Create technician\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const dateValid = moment(birthDate).isValid();\n        const scheduleArray = ['L-D M-T-N', 'L-V JP', 'L-V M-T-N'];\n        const factoryArray = ['1', '2', '3'];\n\n        let failed = false;\n\n        if (!dateValid) {\n            document.querySelector('.datetime-technician').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('.datetime-technician').classList.remove('border-red');\n        }\n\n        if (name.trim().length <= 2) {\n            document.querySelector('input[name=\"name\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"name\"]').classList.remove('border-red');\n        }\n\n        if (surname.trim().length <= 2) {\n            document.querySelector('input[name=\"surname\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"surname\"]').classList.remove('border-red');\n        }\n\n        if (phoneNumber.trim().length <= 6) {\n            document.querySelector('input[name=\"surname\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"surname\"]').classList.remove('border-red');\n        }\n\n        if (!validator.isEmail(email)) {\n            document.querySelector('input[name=\"email\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"email\"]').classList.remove('border-red');\n        }\n\n        if (!validator.isMobilePhone(phoneNumber, 'es-ES')) {\n            document.querySelector('input[name=\"phoneNumber\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"phoneNumber\"]').classList.remove('border-red');\n        }\n\n        if (!validator.isIdentityCard(identityDocument, 'ES')) {\n            document.querySelector('input[name=\"identityDocument\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"identityDocument\"]').classList.remove('border-red');\n        }\n\n        if (factoryArray.indexOf(factory.toString()) < 0) {\n            document.querySelector('select[name=\"factory\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('select[name=\"factory\"]').classList.remove('border-red');\n        }\n\n        if (scheduleArray.indexOf(schedule) < 0) {\n            failed = true;\n            document.querySelector('select[name=\"schedule\"]').classList.add('border-red');\n        } else {\n            document.querySelector('select[name=\"schedule\"]').classList.remove('border-red');\n        }\n\n        if (failed) {\n            return toast.error('Revise los campos señalados en rojo', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        // Add new technician\n        if (!activeTechnician) {\n            dispatch(startAddTechnician(formValues, file));\n        } else {\n            dispatch(startUpdateTechnician(formValues, file));\n        }\n\n        setFile(null);\n        enableScroll();\n        dispatch(uiCloseModal());\n\n\n        setTimeout(() => {\n            setFormValues(initialState);\n        }, 150);\n    }\n\n    const handleCloseModal = () => {\n        enableScroll();\n        dispatch(uiCloseModal());\n\n        setTimeout(() => {\n            setFormValues(initialState);\n            dispatch(clearActiveTechnician());\n        }, 150);\n    }\n\n\n    return (\n        <div>\n            <Modal\n                isOpen={modalOpen}\n                className='modal animate__animated animate__fadeIn animate__faster'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n                <div className=\"frame\">\n\n                    <h1 className=\"h1-modal\">{!activeTechnician ? 'Nuevo técnico' : 'Editar Técnico'}</h1>\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <form className=\"crew-form\" onSubmit={handleSubmit}>\n\n                        <div className=\"form-wrapper-1\">\n\n                            <div className=\"img-wrapper\">\n                                <img className=\"technician-img\"\n                                    src={image === null ? `${process.env.PUBLIC_URL}/assets/images/user-default.png` : `${process.env.PUBLIC_URL}/assets/images/${image}`}\n                                    alt={`mtile-technician`}\n                                    onChange={handleInputChange} />\n                            </div>\n\n                            <div className=\"form-wrapper-data\">\n\n                                <div className=\"form-wrapper-name\">\n                                    <label>Nombre: </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"name\"\n                                        autoComplete=\"off\"\n                                        value={name}\n                                        onChange={handleInputChange} />\n                                </div>\n\n                                <div className=\"form-wrapper-surname\">\n                                    <label>Apellidos: </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"surname\"\n                                        autoComplete=\"off\"\n                                        value={surname}\n                                        onChange={handleInputChange} />\n                                </div>\n\n                                <div className=\"form-wrapper-birthdate\">\n                                    <label>Fecha Nac.: </label>\n\n                                    <Datetime\n                                        className=\"datetime-technician\"\n                                        value={moment(birthDate).format('DD-MM-yyyy')}\n                                        dateFormat=\"DD-MM-YYYY\"\n                                        timeFormat={false}\n                                        onChange={handleDateChange}\n                                        closeOnSelect={true} />\n                                </div>\n\n                                <div className=\"form-wrapper-identitydocument\">\n                                    <label>DNI: </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"identityDocument\"\n                                        autoComplete=\"off\"\n                                        value={identityDocument}\n                                        onChange={handleInputChange} />\n                                </div>\n\n                                <div className=\"form-wrapper-phone\">\n                                    <label>Tel. Móvil: </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"phoneNumber\"\n                                        autoComplete=\"off\"\n                                        value={phoneNumber}\n                                        onChange={handleInputChange} />\n                                </div>\n\n                                <div className=\"form-wrapper-mail\">\n                                    <label>Email: </label>\n                                    <input\n                                        type=\"email\"\n                                        name=\"email\"\n                                        autoComplete=\"off\"\n                                        value={email}\n                                        onChange={handleInputChange} />\n                                </div>\n                                <div className=\"form-wrapper-city\">\n                                    <label>Localidad: </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"city\"\n                                        autoComplete=\"off\"\n                                        value={city}\n                                        onChange={handleInputChange} />\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div className=\"form-wrapper-2\">\n\n                            <div className=\"form-wrapper-data-2-child\">\n                                <label>Dirección: </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"address\"\n                                    autoComplete=\"off\"\n                                    value={address}\n                                    onChange={handleInputChange} />\n                            </div>\n\n                            <div className=\"form-wrapper-data-2-child\">\n                                <label>Horario: </label>\n                                <select\n                                    name=\"schedule\"\n                                    value={schedule}\n                                    onChange={handleInputChange}>\n                                    <option value=\"default\" disabled>Seleccione Horario</option>\n                                    <option value=\"L-V M-T-N\">L-V M-T-N</option>\n                                    <option value=\"L-V JP\">L-V JP</option>\n                                    <option value=\"L-D M-T-N\">L-D M-T-N</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-wrapper-data-2-child\">\n                                <label>Factoría: </label>\n                                <select\n                                    name=\"factory\"\n                                    value={factory}\n                                    onChange={handleInputChange}>\n                                    <option value=\"default\" disabled>Seleccione Factoría</option>\n                                    <option value=\"1\">Factoría 1</option>\n                                    <option value=\"2\">Factoría 2</option>\n                                    <option value=\"3\">Factoría 3</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-wrapper-textarea\">\n                                <label>Observaciones: </label>\n                                <textarea\n                                    name=\"notes\"\n                                    value={notes}\n                                    onChange={handleInputChange}></textarea>\n                            </div>\n\n                            <div className={`form-wrapper-submit ${activeTechnician ? 'wrapper-flex-between' : 'wrapper-flex-end'}`}>\n\n                                {activeTechnician && <p className=\"btn btn-form-cancel\" onClick={handleStartDelete}>Borrar</p>}\n\n                                <div className=\"form-wrapper-file\">\n\n                                    <label className=\"btn-label-file\">\n                                        <input\n                                            type=\"file\"\n                                            name=\"img\"\n                                            onChange={handlePictureChange}\n                                            accept=\".jpg, .jpeg, .png\" />\n                                        <i className=\"fas fa-cloud-upload-alt\"></i> Subir imagen\n                                    </label>\n\n                                    <button type=\"submit\" className=\"btn btn-form-agree\">{!activeTechnician ? 'Crear' : 'Actualizar'}</button>\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n                {modalOpen && <ToastContainer />}\n            </Modal>\n            {!modalOpen && <ToastContainer />}\n\n        </div>\n    )\n}\n","\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveTechnician } from '../actions/technician';\nimport { uiOpenModal } from '../actions/ui';\n\nimport { ButtonNew } from '../components/ui/ButtonNew';\nimport { CrewModal } from '../components/crew/CrewModal';\nimport { disableScroll } from '../helpers/disable-enable-scroll';\n\nexport const CrewScreen = () => {\n\n    const { technicians } = useSelector(state => state.crew);\n\n    const dispatch = useDispatch();\n\n    const openModalTechnician = (e) => {\n\n        const id = e.target.attributes[1].value;\n        const clickedTechnician = technicians.find((technician) => {\n            return technician.id.toString() === id;\n        });\n\n        dispatch(setActiveTechnician(clickedTechnician));\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    // Button Add new Technician\n    const iconData = {\n        icon: <i className=\"fas fa-user-plus\"></i>,\n        className: 'button-new technician'\n    }\n\n    return (\n        <>\n            <h1 className=\"technician-h1\">Técnicos</h1>\n            <div className=\"crew-wrapper animate__animated animate__fadeIn\">\n\n                {\n                    technicians.map((technician) => {\n\n                        return (\n                            <div key={technician.id} className=\"technician-wrapper\">\n\n                                <div className=\"technician-name-surname\">\n                                    <span>{technician.surname},</span>\n                                    <span>{technician.name}</span>\n                                    <span></span>\n                                </div>\n\n                                <img src={technician.image === null\n                                    ? `${process.env.PUBLIC_URL}/assets/images/user-default.png`\n                                    : `${process.env.PUBLIC_URL}/assets/images/${technician.image}`}\n                                    alt={`${technician.name}`}\n                                />\n\n                                <div className=\"wrapper-technician-button\">\n                                    <button className=\"btn btn-detail-crew\" data-id={technician.id} onClick={openModalTechnician}>Ver más</button>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div >\n            <ButtonNew iconData={iconData} page=\"crew\" />\n            <CrewModal />\n        </>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTable, usePagination } from 'react-table';\nimport { uiOpenModal } from '../../actions/ui';\nimport { setActiveItem } from '../../actions/warehouse';\n\n\nexport const Table = ({ columns, data }) => {\n\n    const { items } = useSelector(state => state.warehouse);\n    const dispatch = useDispatch();\n\n    const tableInstance = useTable({ columns, data }, usePagination);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        pageOptions,\n        page,\n        state: { pageIndex },\n        previousPage,\n        nextPage,\n        canPreviousPage,\n        canNextPage\n    } = tableInstance;\n\n    const handleRowClick = ({ target }) => {\n        const refElement = target.parentNode.childNodes[0].innerText;\n\n        const item = items.find(item => item.code === refElement);\n\n        dispatch(setActiveItem(item));\n        dispatch(uiOpenModal());\n    }\n\n    return (\n        <div className=\"table-wrapper\">\n            <table {...getTableProps()} >\n                <thead>\n                    {// Loop over the header rows\n                        headerGroups.map(headerGroup => (\n                            // Apply the header row props\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {// Loop over the headers in each row\n                                    headerGroup.headers.map(column => (\n                                        // Apply the header cell props\n                                        <th {...column.getHeaderProps()}>\n                                            {// Render the header\n                                                column.render('Header')}\n                                        </th>\n                                    ))}\n                            </tr>\n                        ))}\n                </thead>\n                {/* Apply the table body props */}\n                <tbody {...getTableBodyProps()}>\n                    {// Loop over the table rows\n                        page.map(row => {\n                            // Prepare the row for display\n                            prepareRow(row)\n                            return (\n                                // Apply the row props\n                                <tr {...row.getRowProps()} onClick={handleRowClick}>\n                                    {// Loop over the rows cells\n                                        row.cells.map(cell => {\n                                            // Apply the cell props\n                                            return (\n                                                <td {...cell.getCellProps()}>\n                                                    {// Render the cell contents\n                                                        cell.render('Cell')}\n                                                </td>\n                                            )\n                                        })}\n                                </tr>\n                            )\n                        })}\n                </tbody>\n            </table>\n            <div className=\"table-page-controls\">\n\n                <div className=\"table-buttons-wrapper\">\n                    <button className=\"btn btn-table\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n                        <i className=\"fas fa-chevron-left\"></i>\n                    </button>\n                    <button className=\"btn btn-table\" onClick={() => nextPage()} disabled={!canNextPage}>\n                        <i className=\"fas fa-chevron-right\"></i>\n                    </button>\n                </div>\n\n                <div className=\"table-page\">\n                    Página {pageIndex + 1} de {pageOptions.length}\n                </div>\n\n            </div >\n\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { removeActiveItem, startAddItem, startRemoveItem, startUpdateItem } from '../../actions/warehouse';\n\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { getColumnsTableWarehouse } from '../../helpers/getColumnsTables';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ModalToastify } from '../ui/ModalToastify';\n\n// minified version is also included\n// import 'react-toastify/dist/ReactToastify.min.css';\n\nconst initialState = { id: '', code: '', description: '', quantity: '', minStock: '', place: '' };\n\nexport const WarehouseModal = ({ setSearch }) => {\n\n    const { activeItem } = useSelector(state => state.warehouse);\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n    const columns = getColumnsTableWarehouse;\n\n    const [formValues, setFormValues] = useState(initialState);\n    const { code, description, quantity, minStock, place } = formValues;\n\n    useEffect(() => {\n        if (activeItem) {\n            setFormValues(activeItem);\n        }\n    }, [activeItem]);\n\n    const handleCloseModal = () => {\n        dispatch(uiCloseModal());\n        enableScroll();\n\n        setTimeout(() => {\n            dispatch(removeActiveItem());\n            cleanFormValues();\n        }, 200);\n    }\n\n    // DeleteItem from Store and DB, closemodal and then clean form\n    const handleDeleteItem = () => {\n\n        if (activeItem) {\n            dispatch(startRemoveItem());\n        }\n\n        dispatch(uiCloseModal());\n        enableScroll();\n        cleanFormValues();\n        setSearch('');\n    }\n\n    // Will call tostify first to confirm the option the user will choose. Cancel or Deny.\n    const handleStartDelete = () => {\n        toast.warn(<ModalToastify handleDeleteItem={handleDeleteItem} code={activeItem.code} message=\"Estás seguro de borrar el Item con el código\" />, { position: toast.POSITION.TOP_CENTER, closeOnClick: false, autoClose: false, toastId: '1' });\n    }\n\n    // Clean Formvalues\n    const cleanFormValues = () => {\n        setFormValues(initialState);\n    }\n\n    // Check inputs and dispatch Update or New, depends on activeItem\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let isValid = true;\n\n        if (code.length <= 2) {\n            isValid = false;\n            document.querySelector('input[name=\"code\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"code\"]').classList.remove('border-red');\n        }\n        if (description.length <= 2) {\n            isValid = false;\n            document.querySelector('input[name=\"description\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"description\"]').classList.remove('border-red');\n        }\n        if (quantity.length === 0 && !isNaN(parseInt(quantity))) {\n            isValid = false;\n            document.querySelector('input[name=\"quantity\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"quantity\"]').classList.remove('border-red');\n        }\n        if (minStock.length === 0 && !isNaN(parseInt(minStock))) {\n            isValid = false;\n            document.querySelector('input[name=\"minStock\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"minStock\"]').classList.remove('border-red');\n        }\n        if (place.length <= 0) {\n            isValid = false;\n            document.querySelector('input[name=\"place\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"place\"]').classList.remove('border-red');\n        }\n\n        if (!isValid) {\n            return toast.error('Revise los campos señalados en rojo', {\n                position: toast.POSITION.TOP_CENTER\n            });\n        }\n\n        if (activeItem) {\n            dispatch(startUpdateItem(formValues));\n        } else {\n            dispatch(startAddItem(formValues));\n        }\n\n        dispatch(uiCloseModal());\n        dispatch(removeActiveItem());\n        setTimeout(() => {\n            cleanFormValues();\n        }, 300);\n\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    return (\n        <div>\n            <Modal\n                isOpen={modalOpen}\n                className='modal-warehouse animate__animated animate__fadeIn animate__fast'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n\n                <div className=\"frame\">\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <h1 className=\"h1-modal\">{activeItem ? 'Editar Item' : 'Agregar Item'}</h1>\n\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"thead-modal\">\n                            <div className=\"grid-items\">\n                                <label>{columns[0].Header}:</label>\n                                <input type=\"text\" value={code} name=\"code\" disabled={activeItem} onChange={handleInputChange} />\n                            </div>\n                            <div className=\"grid-items\">\n                                <label>{columns[1].Header}:</label>\n                                <input type=\"text\" value={description} name=\"description\" onChange={handleInputChange} />\n                            </div>\n                            <div className=\"grid-items\">\n                                <label>{columns[2].Header}:</label>\n                                <input type=\"number\" value={quantity} name=\"quantity\" onChange={handleInputChange} />\n                            </div>\n                            <div className=\"grid-items\">\n                                <label>{columns[3].Header}:</label>\n                                <input type=\"number\" value={minStock} name=\"minStock\" onChange={handleInputChange} />\n                            </div>\n                            <div className=\"grid-items\">\n                                <label>{columns[4].Header}:</label>\n                                <input type=\"text\" value={place} name=\"place\" onChange={handleInputChange} />\n                            </div>\n                        </div>\n\n                        <div className={`wrapper-buttons-warehouse ${!activeItem ? 'alone' : ''}`}>\n                            {activeItem && <span className=\"btn btn-form-cancel\" onClick={handleStartDelete}>Eliminar</span>}\n\n                            <button type=\"submit\" className=\"btn btn-form-agree\">{activeItem ? 'Actualizar' : 'Guardar'}</button>\n                        </div>\n\n                    </form>\n                </div>\n\n                {modalOpen && <ToastContainer />}\n            </Modal>\n            {!modalOpen && <ToastContainer />}\n        </div>\n    )\n}\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startGetWarehouseItems } from '../actions/warehouse';\nimport { ButtonNew } from '../components/ui/ButtonNew';\nimport { Table } from '../components/warehouse/Table';\nimport { WarehouseModal } from '../components/warehouse/WarehouseModal';\nimport { getColumnsTableWarehouse } from '../helpers/getColumnsTables';\n\n\nexport const WarehouseScreen = () => {\n\n    // Header columns for the table of items\n    const columns = getColumnsTableWarehouse;\n\n    const [searchResults, setSearchResults] = useState([]);\n    const [search, setSearch] = useState('');\n\n    const dispatch = useDispatch();\n\n    const { items } = useSelector(state => state.warehouse);\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeItem } = useSelector(state => state.warehouse);\n\n    useEffect(() => {\n        dispatch(startGetWarehouseItems());\n    }, [dispatch]);\n\n    useEffect(() => {\n        // When input search have text, will check value of column code and description\n        // looking for matches.\n\n        // When the input is empty, will return an empty array.\n        if (search) {\n            const rows = items.filter((value) => {\n                if (\n                    (value.code !== '' && value.code.toLowerCase().includes(search.toLowerCase()))\n                    ||\n                    (value.description !== '' && value.description.toLowerCase().includes(search.toLowerCase()))) {\n\n                    return value;\n                } else {\n                    return false;\n                }\n\n            });\n            setSearchResults(rows);\n        } else {\n            setSearchResults([]);\n        }\n\n    }, [search, items]);\n\n    // Input search value will update the State on every change\n    const handleInputChange = ({ target }) => {\n        setSearch(target.value);\n    }\n\n    // State for animation input show/hide\n    const [showed, setShowed] = useState(false);\n\n    const showIn = () => {\n        setShowed(true);\n        if (!modalOpen) {\n            document.querySelector('.finder').focus();\n        }\n    }\n    const hideOut = () => {\n        if (search.length === 0) {\n            setShowed(false);\n        }\n    }\n\n    // Button Add new Item\n    const iconData = {\n        icon: <i className=\"far fa-plus-square\"></i>,\n        className: 'button-new new',\n    }\n\n    return (\n        <div className='animate__animated animate__fadeIn'>\n            <h1 className=\"h1-warehouse\">Almacén</h1>\n\n            <div className=\"wrapper-stock-finder\">\n                <input\n                    type=\"search\"\n                    name=\"search\"\n                    className={`finder ${showed && 'showw'}`}\n                    onBlur={hideOut}\n                    value={search}\n                    onChange={handleInputChange}\n                    autoComplete=\"off\"\n                />\n\n                <i className={`fas fa-search ${showed && 'hidee'}`} onClick={showIn} ></i>\n            </div>\n            <div className=\"separator\"></div>\n\n            {\n                (searchResults.length > 0 && columns.length > 0)\n                    ? <Table columns={columns} data={searchResults} />\n                    :\n                    <h3 className=\"h3-warehouse animate__animated animate__fadeInUpBig animate__faster\">{\n                        search.length === 0\n                            ? 'Pulsa la lupa para comenzar la búsqueda'\n                            : 'No se han encontrado coincidencias'}\n                    </h3>\n            }\n\n            {!activeItem && <ButtonNew iconData={iconData} />}\n\n            <WarehouseModal setSearch={setSearch} />\n        </div>\n\n\n    )\n}\n","import moment from 'moment';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTable, usePagination, useSortBy } from 'react-table';\nimport { setActiveEvent } from '../../actions/calendar';\nimport { uiOpenModal } from '../../actions/ui';\nimport { disableScroll } from '../../helpers/disable-enable-scroll';\nimport { getOrderById } from '../../helpers/getOrderById';\nimport { getNameBreakdown, getNameFactory, getNameNumber, getNameOrderType, getNameSection } from '../../helpers/helpersHistorical';\nimport { CalendarModal } from '../calendar/CalendarModal';\n\n\nexport const TableHistorical = ({ columns, data }) => {\n\n    const { events } = useSelector(state => state.calendar);\n    const { types } = useSelector(state => state.calendar);\n    const { breakdowns } = useSelector(state => state.calendar);\n    const { factories } = useSelector(state => state.factory);\n    const { sections } = useSelector(state => state.factory);\n    const { numbers } = useSelector(state => state.factory);\n    const { machines } = useSelector(state => state.factory);\n\n    const dispatch = useDispatch();\n\n    const tableInstance = useTable({ columns, data }, useSortBy, usePagination,);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        pageOptions,\n        page,\n        state: { pageIndex },\n        previousPage,\n        nextPage,\n        canPreviousPage,\n        canNextPage\n    } = tableInstance;\n\n\n    // Get the data-id attribute from the <td> and search the order in the store\n    const handleRowClick = ({ target }) => {\n\n        const orderId = target.attributes[0].nodeValue;\n\n        if (!orderId || !events || events.length < 1 || events === undefined) {\n            return;\n        }\n        const order = getOrderById(orderId, events);\n\n        dispatch(setActiveEvent(order));\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    return (\n        <div className=\"table-wrapper\">\n            <CalendarModal />\n\n            <table {...getTableProps()} >\n                <thead>\n                    {// Loop over the header rows\n                        headerGroups.map(headerGroup => (\n                            // Apply the header row props\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {// Loop over the headers in each row\n                                    headerGroup.headers.map(column => (\n                                        // Apply the header cell props\n                                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                            {// Render the header\n                                                column.render('Header')}\n                                        </th>\n                                    ))}\n                            </tr>\n                        ))}\n                </thead>\n                {/* Apply the table body props */}\n\n                {\n                    types && breakdowns && factories && sections && numbers && machines\n\n                    &&\n                    <tbody {...getTableBodyProps()}>\n                        {// Loop over the table rows\n                            page.map(row => {\n                                // Prepare the row for display\n                                prepareRow(row)\n                                return (\n                                    // Apply the row props\n                                    <tr {...row.getRowProps()} onClick={handleRowClick}>\n                                        {// Loop over the rows cells\n                                            row.cells.map((cell, i) => {\n\n                                                // each case will call their own method to parse the data \n                                                // from an ID to the name property\n                                                switch (cell.column.id) {\n\n                                                    // The attribute data-id must be first of other attributes, or the method onClick \n                                                    // is possible that will fail\n                                                    case 'start':\n                                                        return <td key={i} data-id={cell.row.original.id}>{moment(cell.value).format(\"DD-MM-YYYY HH:mm\").toString()}</td>;\n\n                                                    case 'orderType':\n                                                        const { name: orderType } = getNameOrderType(cell.value, types);\n                                                        return <td key={i} data-id={cell.row.original.id}>{orderType}</td>;\n\n                                                    case 'breakdown':\n                                                        const { name: breakdownType } = getNameBreakdown(cell.value, breakdowns);\n                                                        return <td key={i} data-id={cell.row.original.id}>{breakdownType}</td>;\n\n                                                    case 'factory':\n                                                        const { name: factoryName } = getNameFactory(cell.value, factories);\n                                                        return <td key={i} data-id={cell.row.original.id} className=\"text-center\">{factoryName}</td>;\n\n                                                    case 'section':\n                                                        const { name: sectionName } = getNameSection(cell.value, sections);\n                                                        return <td key={i} data-id={cell.row.original.id}>{sectionName}</td>;\n\n                                                    case 'number':\n                                                        const { number: sectionNumber } = getNameNumber(cell.value, numbers);\n                                                        return <td key={i} data-id={cell.row.original.id} className=\"text-center\">{sectionNumber}</td>;\n\n                                                    case 'machine':\n                                                        const { name: machineName } = getNameNumber(cell.value, machines);\n                                                        return <td key={i} data-id={cell.row.original.id}>{machineName}</td>;\n\n                                                    case 'totalMins':\n                                                        return <td key={i} data-id={cell.row.original.id} className=\"text-right\">{cell.value} min.</td>;\n\n                                                    case 'closed':\n                                                        return <td key={i} data-id={cell.row.original.id} className=\"text-center padlocks-history\">\n                                                            {cell.value ? <i data-id={cell.row.original.id} className=\"fas fa-lock\"></i> : <i data-id={cell.row.original.id} className=\"fas fa-lock-open\"></i>}\n                                                        </td>;\n\n                                                    default:\n                                                        // Apply the cell props\n                                                        return (\n                                                            <td {...cell.getCellProps()}>\n                                                                {// Render the cell contents\n                                                                    cell.render('Cell')}\n                                                            </td>\n                                                        )\n                                                }\n\n                                            })}\n                                    </tr>\n                                )\n                            })}\n                    </tbody>\n\n                }\n\n            </table>\n            <div className=\"table-page-controls\">\n\n                <div className=\"table-buttons-wrapper\">\n                    <button className=\"btn btn-table\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n                        <i className=\"fas fa-chevron-left\"></i>\n                    </button>\n                    <button className=\"btn btn-table\" onClick={() => nextPage()} disabled={!canNextPage}>\n                        <i className=\"fas fa-chevron-right\"></i>\n                    </button>\n                </div>\n\n                <div className=\"table-page\">\n                    Página {pageIndex + 1} de {pageOptions.length}\n                </div>\n\n            </div >\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { getColumnsTableHistorical } from '../helpers/getColumnsTables';\nimport { useSelector } from 'react-redux';\nimport { TableHistorical } from '../components/historical/TableHistorical';\n\n\nexport const HistoricalScreen = () => {\n\n    const columns = getColumnsTableHistorical;\n    const { events } = useSelector(state => state.calendar);\n\n    return (\n        <div className='historical-main-container animate__animated animate__fadeIn'>\n            <h1 className='h1-historical'>Histórico de órdenes</h1>\n            {\n                events.length > 0 && <TableHistorical columns={columns} data={events} />\n            }\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport Chart from \"react-apexcharts\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startloadingStatistics } from '../actions/statistics';\n\n\nexport const StatisticsScreen = () => {\n\n\n    const dispatch = useDispatch();\n    const {\n        weeks,\n        threeWeekSections,\n        lastWeekByOrderType,\n        interventionsWeeks,\n        totalTimeByWeek,\n        lastWeekByBreakdown,\n        lastWeekByTechnician,\n    } = useSelector(state => state.statistics);\n\n    const { weeksIntervetions, weeksInterventionsCounts } = interventionsWeeks;\n    const { weeksTime, weeksTotalTime } = totalTimeByWeek;\n\n    useEffect(() => {\n        dispatch(startloadingStatistics());\n    }, [dispatch])\n\n\n    const optionsDonutOrderType = {\n        title: {\n            text: 'Intervenciones',\n            style: {\n                fontSize: '11px',\n                fontWeight: 'bold',\n                fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n        labels: lastWeekByOrderType.names,\n        chart: {\n            toolbar: {\n                show: true,\n                offsetX: 0,\n                offsetY: 0,\n            }\n        },\n    };\n\n    const optionsDonutBreakdown = {\n        title: {\n            text: 'Averías',\n            style: {\n                fontSize: '11px',\n                fontWeight: 'bold',\n                fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n        labels: lastWeekByBreakdown.names,\n        chart: {\n            toolbar: {\n                show: true,\n                offsetX: 0,\n                offsetY: 0,\n            }\n        },\n    };\n\n    const optionsDonutTechnician = {\n        series: lastWeekByTechnician.quantities,\n        options: {\n            title: {\n                text: 'Intervenciones',\n                style: {\n                    fontSize: '11px',\n                    fontWeight: 'bold',\n                    fontFamily: undefined,\n                    color: '#263238'\n                },\n            },\n            legend: {\n                show: true\n            },\n            chart: {\n                type: 'polarArea',\n                toolbar: {\n                    show: true,\n                    offsetX: 0,\n                    offsetY: 0,\n                }\n            },\n            stroke: {\n                colors: ['#fff']\n            },\n            fill: {\n                opacity: 0.8\n            },\n            labels: lastWeekByTechnician.names,\n            responsive: [{\n                breakpoint: 480,\n                options: {\n                    chart: {\n                        width: 200\n                    },\n                    legend: {\n                        position: 'bottom'\n                    }\n                }\n            }]\n        },\n    };\n\n    const optionsBar = {\n        chart: {\n            type: 'bar',\n            height: 350\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '55%',\n                endingShape: 'rounded'\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent']\n        },\n        xaxis: {\n            categories: weeks,\n            title: {\n                text: 'Semana'\n            }\n        },\n        yaxis: {\n            title: {\n                text: 'Intervenciones'\n            }\n        },\n        fill: {\n            opacity: 1\n        },\n        tooltip: {\n            y: {\n                formatter: function (val) {\n                    return val + \" intervenciones\"\n                }\n            }\n        },\n    };\n\n\n    const dataBarInterventionsWeeks = {\n        series: [{\n            data: weeksInterventionsCounts\n        }],\n        options: {\n            chart: {\n                height: 350,\n                type: 'bar',\n                events: {\n                    click: function (chart, w, e) {\n                        // console.log(chart, w, e)\n                    }\n                }\n            },\n            colors: ['#028ffb', '#ff4560', '#feb019', '#01e396'],\n            plotOptions: {\n                bar: {\n                    columnWidth: '45%',\n                    distributed: true,\n                }\n            },\n            dataLabels: {\n                enabled: false\n            },\n            legend: {\n                show: false\n            },\n            yaxis: {\n                title: {\n                    text: 'Intervenciones'\n                }\n            },\n            xaxis: {\n                categories: weeksIntervetions,\n                labels: {\n                    style: {\n                        colors: ['#028ffb', '#ff4560', '#feb019', '#01e396'],\n                        fontSize: '12px'\n                    }\n                },\n                title: {\n                    text: 'Semana'\n                }\n            }\n        }\n    }\n\n    const dataBarTotalTimeWeeks = {\n\n        series: [{\n            name: \"Horas\",\n            data: weeksTotalTime\n        }],\n        options: {\n            chart: {\n                height: 350,\n                type: 'line',\n                zoom: {\n                    enabled: false\n                }\n            },\n            plotOptions: {\n                bar: {\n                    columnWidth: '45%',\n                    distributed: true,\n                }\n            },\n            dataLabels: {\n                enabled: false\n            },\n            legend: {\n                show: false\n            },\n            yaxis: {\n                title: {\n                    text: 'Horas'\n                }\n            },\n            xaxis: {\n                categories: weeksTime,\n\n                title: {\n                    text: 'Semana'\n                }\n            }\n        }\n    }\n\n\n\n    return (\n\n        <div className='animate__animated animate__fadeIn dashboard-screen'>\n\n            <h1>Estadísticas</h1>\n\n            <div className='main-content_dashboard'>\n\n                <div className=\"charts\">\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Intervenciones por sección/semana</h3>\n\n                        {\n                            threeWeekSections.length > 0 && weeks.length > 0 &&\n                            < Chart\n                                options={optionsBar}\n                                series={threeWeekSections}\n                                type=\"bar\"\n                                width=\"100%\"\n                            />\n                        }\n\n                    </div>\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Intervenciones semana previa</h3>\n\n                        {\n                            lastWeekByOrderType && lastWeekByOrderType.quantities.length > 0 && lastWeekByOrderType.names.length > 0 &&\n\n                            <Chart\n                                className=\"chart-pie\"\n                                options={optionsDonutOrderType}\n                                series={lastWeekByOrderType.quantities}\n                                type=\"donut\"\n                                width=\"100%\"\n                            />\n                        }\n                    </div>\n                </div>\n\n                <div className=\"charts2 mt-3\">\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Total intervenciones/semana</h3>\n\n                        {\n                            interventionsWeeks && weeksIntervetions.length > 0 && weeksInterventionsCounts.length > 0 &&\n\n\n                            < Chart\n                                options={dataBarInterventionsWeeks.options}\n                                series={dataBarInterventionsWeeks.series}\n                                type=\"bar\"\n                                width=\"100%\"\n                            />\n\n                        }\n                    </div>\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Total horas/semana intervenciones</h3>\n                        {\n                            totalTimeByWeek && weeksTime.length > 0 && weeksTotalTime.length > 0 &&\n\n\n                            < Chart\n                                options={dataBarTotalTimeWeeks.options}\n                                series={dataBarTotalTimeWeeks.series}\n                                type=\"line\"\n                                width=\"100%\"\n                            />\n\n                        }\n                    </div>\n                </div>\n\n                <div className=\"charts2 mt-3\">\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Intervenciones por técnico semana previa</h3>\n\n                        {\n                            lastWeekByTechnician && lastWeekByTechnician.quantities.length > 0 && lastWeekByTechnician.names.length > 0 &&\n\n                            <Chart\n                                className=\"chart-pie\"\n                                options={optionsDonutTechnician.options}\n                                series={optionsDonutTechnician.series}\n                                type=\"polarArea\"\n                                width=\"100%\"\n                            />\n                        }\n\n                    </div>\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Tipo averías semana previa</h3>\n\n                        {\n                            lastWeekByBreakdown && lastWeekByBreakdown.quantities.length > 0 && lastWeekByBreakdown.names.length > 0 &&\n\n                            <Chart\n                                className=\"chart-pie\"\n                                options={optionsDonutBreakdown}\n                                series={lastWeekByBreakdown.quantities}\n                                type=\"donut\"\n                                width=\"100%\"\n                            />\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport const Error404Screen = () => {\n\n    const history = useHistory();\n\n    return (\n        <div className='screen-404 animate__animated animate__fadeIn'>\n\n            <div className=\"bg-black\">\n                <img className=\"bg-404\" src={`${process.env.PUBLIC_URL}/assets/images/404.jpg`} alt=\"bg\" />\n\n                <div className=\"info-404\">\n                    <h1>404</h1>\n                    <p className=\"text-info\">Página no encontrada</p>\n\n                    <div className=\"buttons-404\">\n                        <Link to='/'>Volver al Dashboard</Link>\n                        <p onClick={() => { history.goBack() }}>Volver atrás</p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\n//const pdfjs = import('pdfjs-dist/build/pdf');\nconst pdfjsWorker = import('pdfjs-dist/build/pdf.worker.entry');\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nexport const PdfLoader = ({ file }) => {\n\n    // eslint-disable-next-line no-unused-vars\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n\n    useEffect(() => {\n        setPageNumber(1);\n    }, [file]);\n\n    function onDocumentLoadSuccess({ numPages }) {\n        setNumPages(numPages);\n        setPageNumber(1);\n    }\n\n    return (\n        <>\n            <Document\n                file={`${process.env.PUBLIC_URL}/assets/docs/${file}`}\n                loading={<img src={`${process.env.PUBLIC_URL}/assets/images/loader.gif`} alt=\"loading\" />}\n                onLoadSuccess={onDocumentLoadSuccess}\n                error={<p>Error al cargar el archivo</p>}\n                renderMode=\"svg\"\n            >\n                <Page pageNumber={pageNumber} />\n                <span className=\"pdf-title\">{file}</span>\n            </Document>\n        </>\n    );\n\n}\n","import React, { useEffect, useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\nimport { useSelector } from 'react-redux';\n//const pdfjs = import('pdfjs-dist/build/pdf');\nconst pdfjsWorker = import('pdfjs-dist/build/pdf.worker.entry');\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\n\n// const options = {\n//     cMapUrl: `//cdn.jsdelivr.net/npm/pdfjs-dist@${pdfjs.version}/cmaps/`,\n//     cMapPacked: true,\n// };\n\nexport const PdfPage = ({ file }) => {\n\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const { modalOpen } = useSelector(state => state.ui)\n\n    useEffect(() => {\n        setPageNumber(1);\n    }, [file]);\n\n    function onDocumentLoadSuccess({ numPages }) {\n        setNumPages(numPages);\n        setPageNumber(1);\n    }\n\n    function changePage(offset) {\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\n    }\n\n    function previousPage() {\n        changePage(-1);\n    }\n\n    function nextPage() {\n        changePage(1);\n    }\n\n    return (\n        <>\n            <Document\n                file={`${process.env.PUBLIC_URL}/assets/docs/${file}`}\n                loading={<img src={`${process.env.PUBLIC_URL}/assets/images/loader.gif`} alt=\"loading\" />}\n                onLoadSuccess={onDocumentLoadSuccess}\n                error={<p>Error al cargar el archivo</p>}\n                renderMode=\"canvas\"\n            >\n                <Page pageNumber={pageNumber} >\n                    {modalOpen\n\n                        &&\n                        <div className=\"pdf-page-buttons\">\n                            <button className=\"left-arrow\" disabled={pageNumber <= 1} onClick={previousPage}>\n                                <i className=\"fas fa-chevron-left\"></i>\n                            </button>\n\n                            <span className=\"info-pages\">\n                                {pageNumber || (numPages ? 1 : '--')} de {numPages || '--'}\n                            </span>\n\n                            <button className=\"right-arrow\" disabled={pageNumber >= numPages} onClick={nextPage}>\n                                <i className=\"fas fa-chevron-right\"></i>\n                            </button>\n                        </div>\n\n                    }\n\n                </Page>\n            </Document>\n\n\n        </>\n    );\n\n}","import React from 'react'\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { clearActiveDoc, startDeleteDoc } from '../../actions/factory';\nimport { PdfPage } from './PdfPage';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { ModalToastify } from '../ui/ModalToastify';\n\n\n\nexport const PdfModal = ({ setShowModalDoc, resetData }) => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeDoc } = useSelector(state => state.factory);\n\n    const handleCloseModal = () => {\n        enableScroll();\n        dispatch(uiCloseModal());\n        dispatch(clearActiveDoc());\n        setShowModalDoc(false);\n    }\n\n    const handleDeleteDoc = () => {\n        dispatch(startDeleteDoc());\n        enableScroll();\n        dispatch(uiCloseModal());\n        setShowModalDoc(false);\n        resetData();\n    }\n\n    // Will call tostify first to confirm the option the user will choose. Cancel or Deny.\n    const handleStartDelete = () => {\n        toast.warn(<ModalToastify\n            handleDeleteItem={handleDeleteDoc}\n            code={`${activeDoc.name} ${activeDoc.info}`}\n            message=\"Estás seguro de borrar el documento\" />,\n            {\n                position: \"top-center\",\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    // useEffect(() => {\n    //     if (modalOpen && activeDoc) {\n    //         console.log(document.querySelector('.ReactModal__Overlay'))\n    //     }\n    // }, [modalOpen, activeDoc]);\n\n    return (\n        <div className=\"pdf-modal\">\n\n            {activeDoc && modalOpen\n                &&\n                <div className=\"info-wrapper\">\n                    <div className=\"pdf-header\">\n                        <i className=\"fas fa-arrow-left\" onClick={handleCloseModal}></i>\n                        <img src={`${process.env.PUBLIC_URL}/assets/images/pdf.png`} alt=\"pdf-icon\" />\n                        <span>{activeDoc.name}</span>\n                    </div>\n                    <div className=\"pdf-delete\" onClick={handleStartDelete}>\n                        <i className=\"far fa-trash-alt\"></i>\n                    </div>\n                </div>\n            }\n\n            <Modal\n                isOpen={modalOpen}\n                className='modal-docs animate__animated animate__fadeIn animate__fast'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n                {activeDoc && <PdfPage file={activeDoc.name} />}\n                {modalOpen && <ToastContainer />}\n            </Modal>\n            {!modalOpen && <ToastContainer />}\n        </div>\n    )\n}\n","\nexport const checkFile = (file) => {\n\n    if (isPdf(file.type)) {\n        if (checkSize(file.size)) {\n            return { ok: true }\n        } else {\n            return { ok: false, error: 'El archivo excede la capacidad máxima de 16MB' };\n        }\n    } else {\n        return { ok: false, error: 'Sólo archivos PDF son soportados' };\n    }\n}\n\n\nconst isPdf = (type) => {\n    if (type === \"application/pdf\") {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst checkSize = (size) => {\n    if (size <= 15000000 && size > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { startAddFile, startLoadFactory } from '../../actions/factory';\nimport { uiCloseModal } from '../../actions/ui';\nimport { checkFile } from '../../helpers/checkDocSizeAndType';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { getSectionsByFactoryId } from '../../helpers/getSectionsByFactoryId';\n\n\nconst initialState = {\n    factory: 'default',\n    section: 'default',\n    info: ''\n}\n\nexport const PdfModalAdd = ({ resetData }) => {\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n\n    const { factories } = useSelector(state => state.factory);\n    const { sections } = useSelector(state => state.factory);\n\n    const [formValues, setFormValues] = useState(initialState)\n    const { factory, section, info } = formValues;\n    const [file, setFile] = useState(null);\n\n    const [selectedSections, setSelectedSections] = useState([]);\n\n    // Load and fecth factories, sections, machines and docs from DB\n    useEffect(() => {\n        dispatch(startLoadFactory());\n    }, [dispatch]);\n\n    const handleSubmit = (e) => {\n\n        let formIsValid = true;\n        e.preventDefault();\n\n        if (factory === 'default' || factory.length === 0) {\n            formIsValid = false;\n            document.querySelector('select[name=\"factory\"]').classList.add('border-red');\n        } else {\n            document.querySelector('select[name=\"factory\"]').classList.remove('border-red');\n        }\n\n        if (section === 'default' || section.length === 0) {\n            formIsValid = false;\n            document.querySelector('select[name=\"section\"]').classList.add('border-red');\n        } else {\n            document.querySelector('select[name=\"section\"]').classList.remove('border-red');\n        }\n\n        if (info.length === 0) {\n            formIsValid = false;\n            document.querySelector('input[name=\"info\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"info\"]').classList.remove('border-red');\n        }\n\n        if (!file && formIsValid) {\n            return toast.error('No se ha adjuntado ningún documento', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        if (!formIsValid) {\n            return toast.error('Revise los campos resaltados en rojo', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        dispatch(startAddFile({ ...formValues, file }));\n        enableScroll();\n        resetData();\n        setFormValues(initialState);\n        dispatch(uiCloseModal());\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n\n        if (target.name === 'factory') {\n            setFormValues({ ...formValues, factory: target.value, section: 'default' });\n            const id = target.value;\n            const factorySections = getSectionsByFactoryId(id, sections);\n            setSelectedSections(factorySections);\n        }\n    }\n\n    const handleFileChange = ({ target }) => {\n\n        if (target.files.length > 0) {\n\n            const tempFile = target.files[0];\n            const check = checkFile(tempFile);\n\n            if (!check.ok) {\n                return toast.error(check.error, { position: toast.POSITION.TOP_CENTER });\n            }\n\n            document.querySelector('.file-name-wrapper').classList.add('show-file-name');\n            setFile(target.files[0]);\n        }\n    }\n\n\n    const handleCloseModal = () => {\n        enableScroll();\n        dispatch(uiCloseModal());\n\n        setTimeout(() => {\n            setFormValues(initialState);\n        }, 200);\n    }\n\n\n    return (\n\n        <div>\n\n            <Modal\n                isOpen={modalOpen}\n                className='add-modal animate__animated animate__fadeIn animate__fast'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n\n                <div className=\"frame\">\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <h1 className=\"h1-modal\">Agregar Documentación</h1>\n\n                    <form onSubmit={handleSubmit}>\n\n                        <div className=\"thead-modal\">\n                            <div className=\"grid-items\">\n                                <label>Factoría: </label>\n                                <select name=\"factory\" value={factory} onChange={handleInputChange}>\n                                    <option value=\"default\" disabled>Seleccionar</option>\n                                    {factories.map(factory =>\n                                        <option key={factory.id} value={factory.id}>{factory.name}</option>)}\n                                </select>\n                            </div>\n\n                            <div className=\"grid-items\">\n                                <label>Sección: </label>\n                                <select name=\"section\" value={section} onChange={handleInputChange} disabled={selectedSections.length === 0}>\n                                    <option value=\"default\" disabled>Seleccionar</option>\n                                    {selectedSections.length > 0 &&\n                                        selectedSections.map(section =>\n                                            <option key={section.id} value={section.id}>{section.name}</option>)}\n                                </select>\n                            </div>\n\n                            <div className=\"grid-items\">\n                                <label>Descripción: </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"info\"\n                                    value={info}\n                                    onChange={handleInputChange}\n                                    autoComplete=\"off\"\n                                    placeholder=\" Descripción\" />\n                            </div>\n\n                            <div className=\"grid-items file-name-wrapper\">\n                                <label>Archivo: </label>\n                                <input type=\"text\" defaultValue={file?.name} disabled />\n                            </div>\n\n                        </div>\n\n                        <div className=\"form-wrapper-file\">\n\n                            <label className=\"btn-label-file\">\n                                <input type=\"file\" name=\"img\" onChange={handleFileChange} accept=\".pdf\" />\n                                <i className=\"fas fa-cloud-upload-alt\"></i> Cargar PDF\n                        </label>\n\n                            <button type=\"submit\" className=\"btn btn-form-agree\">Guardar</button>\n                        </div>\n\n                    </form>\n                </div>\n                {modalOpen && <ToastContainer />}\n            </Modal>\n            {!modalOpen && <ToastContainer />}\n\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { PdfLoader } from '../components/doc/PdfLoader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveDoc, startLoadFactory } from '../actions/factory';\nimport { getSectionsByFactoryId } from '../helpers/getSectionsByFactoryId';\nimport { getDocsBySectionId } from '../helpers/getDocsBySectionId';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { disableScroll } from '../helpers/disable-enable-scroll';\nimport { PdfModal } from '../components/doc/PdfModal';\nimport { getDocById } from '../helpers/getDocById';\nimport { uiOpenModal } from '../actions/ui';\nimport { ButtonNew } from '../components/ui/ButtonNew';\nimport { PdfModalAdd } from '../components/doc/PdfModalAdd';\n\n\n\nexport const DocsScreen = () => {\n\n    const { factories } = useSelector(state => state.factory);\n    const { sections } = useSelector(state => state.factory);\n    const { docs } = useSelector(state => state.factory);\n    const dispatch = useDispatch();\n\n    // Array of sections from factory\n    const [showSections, setShowSections] = useState([]);\n    // Array of docs from a section\n    const [showPdf, setShowPdf] = useState([]);\n    // State to know if the Select is opened or closed\n    const [isRotateFactory, setIsRotateFactory] = useState(false);\n    // State to know if the Select is opened or closed\n    const [isRotateSection, setIsRotateSection] = useState(false);\n    // Breadcrumb\n    const [optionsSelected, setOptionsSelected] = useState({ factory: '', section: '' });\n\n    const [showModalDoc, setShowModalDoc] = useState(false);\n\n    // This function depends on ClickAwayListener. Will close customs selects \n    // if the user clicks outside the component\n    const handleClickAway = () => {\n        isRotateFactory && toggleFactory();\n        isRotateSection && toggleSection();\n    };\n\n    // Load and fecth factories, sections, machines and docs from DB\n    useEffect(() => {\n        dispatch(startLoadFactory());\n    }, [dispatch]);\n\n    // Reset data from custom select and breadcrumbs\n    const resetData = () => {\n        setOptionsSelected({ factory: '', section: '' });\n        setShowSections([]);\n        setShowPdf([]);\n    }\n\n\n    // When click Factory select, will set breadcrumb text,\n    // close select, will show sections and set the array of documents to an empty array. \n    const handleClickFactory = ({ target }) => {\n\n        // Set factory breadcrumb\n        setOptionsSelected({ factory: target.innerText, section: '' });\n\n        // Get sections from factory\n        const id = target.attributes[0].value;\n        const factorySections = getSectionsByFactoryId(id, sections);\n\n        // Show sections select\n        setShowSections(factorySections);\n        // Hide previous documents by setting an empty array\n        setShowPdf([]);\n    }\n\n    const handleClickSection = ({ target }) => {\n\n        // Set section breadcrumb\n        setOptionsSelected({ ...optionsSelected, section: target.innerText });\n\n        // Get docs from section\n        const id = target.attributes[0].value;\n        const sectionDocs = getDocsBySectionId(id, docs);\n\n        // Show PDF's\n        setShowPdf(sectionDocs);\n    }\n\n    const handleDocClick = (id) => {\n        const docData = getDocById(id, docs);\n        disableScroll();\n        setShowModalDoc(true);\n        dispatch(setActiveDoc(docData));\n        dispatch(uiOpenModal());\n    }\n\n    // Show & Hide Custom Select for Factories. Removing and Adding additional css classes.\n    const toggleFactory = () => {\n        const clicker = document.querySelector('.clicker');\n        const clickerSelect = document.querySelector('.factory-selector');\n\n        if (!clicker || !clickerSelect) {\n            return;\n        }\n\n        if (!isRotateFactory) {\n            clicker.classList.add('rotate');\n            clickerSelect.classList.add('showlist');\n        } else {\n            clicker.classList.remove('rotate');\n            clickerSelect.classList.remove('showlist');\n        }\n\n        setIsRotateFactory(!isRotateFactory);\n\n    }\n\n    // Show & Hide Custom Select for Sections. Removing and Adding additional css classes.\n    const toggleSection = () => {\n\n        if (!isRotateSection) {\n            document.querySelector('.clicker-2').classList.add('rotate');\n            document.querySelector('.section-selector').classList.add('showlist');\n        } else {\n            document.querySelector('.clicker-2').classList.remove('rotate');\n            document.querySelector('.section-selector').classList.remove('showlist');\n        }\n\n        setIsRotateSection(!isRotateSection);\n\n    }\n\n\n    // Button Add new Item\n    const iconData = {\n        icon: <i className=\"fas fa-file-upload\"></i>,\n        className: 'button-new doc',\n    }\n\n\n    return (\n        <div className=\"docs-main-container\">\n            <h1 className=\"h1-docs\">Documentaciones</h1>\n\n            {/*  breadcrumb */}\n            <p className={`doc-breadcrumb ${optionsSelected.factory ? 'show-bread animate__animated animate__fadeIn animate__fast' : ''}`}>\n                Factoría {optionsSelected.factory && `${optionsSelected.factory}`}\n                {optionsSelected.factory && <i className=\"fas fa-caret-right bread-arrow\"></i>}\n\n                {optionsSelected.section && `${optionsSelected.section}`}\n            </p>\n\n            {/*  Factories Custom select */}\n            <div className=\"doc-selectors\">\n                <div className=\"factory-header-selects animate__animated animate__fadeIn animate__fast\">\n                    <ClickAwayListener onClickAway={handleClickAway}>\n                        <div className=\"factory-header\" onClick={toggleFactory}>\n                            <div className=\"grid-name\">\n                                <i className=\"fas fa-industry\"></i>\n                                <h4>Factorías</h4>\n                            </div>\n                            <i className=\"fas fa-sort-down clicker\" onClick={toggleFactory}></i>\n                        </div>\n                    </ClickAwayListener>\n\n                    <div className=\"factory-selector\">\n                        <ul onClick={handleClickFactory}>\n                            {\n                                factories.map\n                                    (\n                                        factory =>\n                                            <li key={factory.id} value={factory.id}>\n                                                {factory.name}\n                                            </li>\n                                    )\n                            }\n                        </ul>\n                    </div>\n                </div>\n\n                {/*  Sections Custom select */}\n                {\n                    showSections.length > 0\n                    &&\n                    <div className=\"section-header-selects animate__animated animate__fadeIn animate__fast\">\n                        <ClickAwayListener onClickAway={handleClickAway}>\n                            <div className=\"section-header\" onClick={toggleSection}>\n                                <div className=\"grid-name\">\n                                    <i className=\"fas fa-project-diagram\"></i>\n                                    <h4>Secciones</h4>\n                                </div>\n                                <i className=\"fas fa-sort-down clicker-2\" onClick={toggleSection}></i>\n                            </div>\n                        </ClickAwayListener>\n\n                        <div className=\"section-selector\">\n                            <ul onClick={handleClickSection}>\n\n                                {\n                                    showSections.length > 0\n                                    &&\n                                    showSections.map\n                                        (\n                                            section =>\n                                                <li key={section.id} value={section.id}>\n                                                    {section.name}\n                                                </li>\n                                        )\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                }\n            </div>\n\n            {/*  Documents */}\n\n            {\n                (showPdf.length > 0)\n                    ? <div className=\"pdf-wrapper\">\n                        {showPdf.map(pdf =>\n                            <div key={pdf.id} className=\"single-pdf-wrapper animate__animated animate__fadeIn\" onClick={() => { handleDocClick(pdf.id) }}>\n                                <PdfLoader file={pdf.name} />\n                            </div>\n                        )}\n                    </div>\n\n                    : (optionsSelected.section && showPdf.length === 0) && <h3 className=\"h3-docs animate__animated animate__zoomIn\">No se ha encontrado documentación</h3>\n            }\n\n            {showModalDoc && <PdfModal setShowModalDoc={setShowModalDoc} resetData={resetData} />}\n\n            {!showModalDoc && <PdfModalAdd resetData={resetData} />}\n\n\n            <ButtonNew iconData={iconData} />\n        </div>\n    );\n\n}\n","export const getDocById = (id, docs) => {\n\n    return docs.find(doc => doc.id === id);\n}","export const getDocsBySectionId = (id, docs) => {\n\n    if (!id || id.length < 1) {\n        return false;\n    }\n\n    return docs.filter(docs => docs.sectionId.toString() === id.toString());\n\n}","import React from 'react'\nimport { OrderForm } from '../components/order/OrderForm'\n\nexport const NewOrderScreen = () => {\n\n    return (\n        <div className=\"order-wrapper\">\n            <OrderForm />\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { toggleResponsive } from '../../actions/nav';\n\nexport const ResponsiveNav = () => {\n\n    const { admin } = useSelector(state => state.auth);\n    const { showResponsive } = useSelector(state => state.nav);\n    const dispatch = useDispatch();\n\n    const showResponsiveNav = () => {\n        dispatch(toggleResponsive());\n    }\n\n    return (\n        <div className=\"responsive-nav-main-container\">\n\n            <div className={`burger ${showResponsive ? 'hide-burger' : ''}`} onClick={showResponsiveNav}>\n                <div className={`line ${showResponsive ? 'rotate-line-1' : ''}`}></div>\n                <div className={`line ${showResponsive ? 'hide-line' : ''}`}></div>\n                <div className={`line ${showResponsive ? 'rotate-line-2' : ''}`}></div>\n            </div>\n\n            <div className={`responsive-nav-main-wrapper ${showResponsive ? 'show-responsive' : ''}`}>\n                <div className=\"responsive-nav-wrapper\">\n                    <NavLink\n                        exact to=\"/\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"fas fa-home\"></i><span >Dashboard</span>\n                    </NavLink>\n\n                    {\n                        admin &&\n                        <NavLink\n                            to=\"/admin\"\n                            activeClassName=\"active-link\"\n                            className={`${showResponsive ? 'show-link' : ''}`}>\n                            <i className=\"fas fa-user-shield\"></i><span >Administrador</span>\n                        </NavLink>\n                    }\n\n                    <NavLink\n                        to=\"/neworder\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"far fa-plus-square\"></i><span >Nueva orden</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/crew\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"fas fa-users\"></i><span >Técnicos</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/calendar\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"far fa-calendar-alt\"></i><span >Calendario</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/docs\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"far fa-file\"></i><span >Documentación</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/warehouse\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"fas fa-boxes\"></i><span >Almacén</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/statistics\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"far fa-chart-bar\"></i><span >Estadísticas</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/history\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"fas fa-history\"></i><span >Histórico</span>\n                    </NavLink>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router';\n\nimport { Navbar } from '../components/ui/Navbar';\nimport { TopBar } from '../components/ui/TopBar';\n\nimport { DashboardScreen } from '../pages/DashboardScreen';\nimport { AdminScreen } from '../pages/AdminScreen';\nimport { OrderScreen } from '../pages/OrderScreen';\nimport { CalendarScreen } from '../pages/CalendarScreen';\nimport { CrewScreen } from '../pages/CrewScreen';\nimport { WarehouseScreen } from '../pages/WarehouseScreen';\nimport { HistoricalScreen } from '../pages/HistoricalScreen';\nimport { StatisticsScreen } from '../pages/StatisticsScreen';\nimport { Error404Screen } from '../pages/Error404Screen';\nimport { DocsScreen } from '../pages/DocsScreen';\nimport { NewOrderScreen } from '../pages/NewOrderScreen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLoadOrderEvents } from '../actions/calendar';\nimport { startLoadFactory } from '../actions/factory';\nimport { startLoadingCrew } from '../actions/technician';\nimport { ResponsiveNav } from '../components/ui/ResponsiveNav';\nimport { toggleResponsive } from '../actions/nav';\nimport { startloadingStatistics } from '../actions/statistics';\nimport { startChecking } from '../actions/auth';\nimport { checkTokenDate } from '../helpers/checkTokenDate';\n\nexport const MainRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const { showResponsive } = useSelector(state => state.nav);\n\n    useEffect(() => {\n        const totalTime = checkTokenDate();\n\n        if (totalTime >= 2) {\n            dispatch(startChecking());\n        }\n    }, []);\n\n    useEffect(() => {\n        dispatch(startloadingStatistics());\n        dispatch(startLoadFactory());\n        dispatch(startLoadingCrew());\n        dispatch(startLoadOrderEvents());\n    }, [dispatch])\n\n    useEffect(() => {\n        if (showResponsive) {\n            dispatch(toggleResponsive());\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"wrapper-nav-main\">\n            <ResponsiveNav />\n\n            <Navbar />\n            {/* toggle-container adds margin-left when Navbar is expanded  */}\n            <main>\n                <TopBar />\n                <div className='container main-container'>\n                    <Switch>\n                        <Route exact path=\"/\" component={DashboardScreen} />\n                        <Route exact path=\"/admin\" component={AdminScreen} />\n                        <Route exact path=\"/neworder\" component={NewOrderScreen} />\n                        <Route exact path=\"/order\" component={OrderScreen} />\n                        <Route exact path=\"/calendar\" component={CalendarScreen} />\n                        <Route exact path=\"/crew\" component={CrewScreen} />\n                        <Route exact path=\"/docs\" component={DocsScreen} />\n                        <Route exact path=\"/warehouse\" component={WarehouseScreen} />\n                        <Route exact path=\"/statistics\" component={StatisticsScreen} />\n                        <Route exact path=\"/history\" component={HistoricalScreen} />\n\n                        <Route path=\"*\">\n                            <Error404Screen />\n                        </Route>\n\n                    </Switch>\n                </div>\n            </main>\n        </div>\n    )\n}\n","export const checkTokenDate = () => {\n    let time = 0;\n    const now = new Date().getTime();\n    const dateToken = parseInt(localStorage.getItem('token-init-date')) || 0;\n    time = (now - dateToken) / 1000;\n    time /= 3600;\n    time = Math.abs(Math.round(time));\n\n    return time;\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n    return (\n        <div>\n            <Route\n                {...rest}\n                component={(props) =>\n                    isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />\n                }\n            />\n        </div>\n    );\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n    return (\n        <div>\n            <Route\n                {...rest}\n                component={(props) =>\n                    !isAuthenticated ? <Component {...props} /> : <Redirect to='/' />\n                }\n            />\n        </div>\n    );\n};\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n} from \"react-router-dom\";\nimport { startChecking } from \"../actions/auth\";\nimport { LoadingScreen } from \"../pages/LoadingScreen\";\nimport { LoginScreen } from \"../pages/LoginScreen\";\nimport { MainRouter } from \"./MainRouter\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const { checking, uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if (checking) {\n        return (<LoadingScreen />);\n    }\n    return (\n        <Router basename='/' >\n            <div>\n                <Switch>\n\n                    <PublicRoute exact path=\"/login\" isAuthenticated={!!uid} component={LoginScreen} />\n                    <PrivateRoute path=\"/\" isAuthenticated={!!uid} component={MainRouter} />\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    loadingLogin: false,\n    uid: null,\n    name: null,\n    admin: true\n}\n\nexport const authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload\n            }\n\n        case types.authLogout:\n            return {\n                ...initialState,\n                checking: false,\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLoadingStart:\n            return {\n                ...state,\n                loadingLogin: true\n            }\n\n        case types.authLoadingFinish:\n            return {\n                ...state,\n                loadingLogin: false\n            }\n\n        default:\n            return state;\n    }\n\n}","\nimport { types } from \"../types/types\";\n\n\nconst initialState = {\n    events: [],\n    types: [],\n    breakdowns: [],\n    activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case types.loadOrderEvents: {\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n        }\n\n        case types.loadOrderTypes: {\n            return {\n                ...state,\n                types: [...action.payload]\n            }\n        }\n        case types.loadBreakdownTypes: {\n            return {\n                ...state,\n                breakdowns: [...action.payload]\n            }\n        }\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.addOrderEvent:\n            return {\n                ...state,\n                events: [...state.events, action.payload],\n            };\n\n        case types.updateOrderEvent:\n            return {\n                ...state,\n                events: state.events.map((e) => (e.id === action.payload.id ? action.payload : e)),\n            };\n\n        case types.deleteOrderEvent:\n            return {\n                ...state,\n                events: state.events.filter((e) => {\n                    return e.id.toString() !== action.payload;\n                }),\n                activeEvent: null,\n            };\n\n        case types.eventClearActive:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventCleaner:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    navExtended: false,\n    showResponsive: false,\n}\n\nexport const navReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.toggleNav:\n            return {\n                ...state,\n                navExtended: !state.navExtended\n            }\n\n        case types.toggleResponsiveNav:\n            return {\n                ...state,\n                showResponsive: !state.showResponsive\n            }\n        default:\n            return state;\n    }\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    technicians: [],\n    activeTechnician: null\n}\n\n\nexport const crewReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.crewLoadTechnicians: {\n            return {\n                ...state,\n                technicians: action.payload\n            }\n        }\n\n\n        case types.crewSetActive:\n            return {\n                ...state,\n                activeTechnician: action.payload\n            }\n\n        case types.crewClearActive:\n            return {\n                ...state,\n                activeTechnician: null\n            }\n\n        case types.crewAddNewTechnician:\n            return {\n                ...state,\n                technicians: [...state.technicians, action.payload]\n            }\n\n        case types.crewDeleteTechnician:\n            return {\n                ...state,\n                technicians: state.technicians.filter((t) => t.id !== state.activeTechnician.id),\n            };\n\n        case types.crewUpdateTechnician:\n            return {\n                ...state,\n                technicians: state.technicians.map(t => t.id === state.activeTechnician.id ? action.payload : t)\n            }\n\n        case types.crewClearTechnician:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true,\n            };\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false,\n            };\n        default:\n            return state;\n    }\n};\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    items: [],\n    activeItem: null\n}\n\nexport const warehouseReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.warehouseLoaded:\n            return {\n                ...state,\n                items: [...action.payload]\n            }\n\n        case types.warehouseAddItem:\n            return {\n                ...state,\n                items: [...state.items, action.payload],\n                activeItem: null\n            }\n\n        case types.warehouseUpdateItem:\n            return {\n                ...state,\n                items: state.items.map(item => (item.code === action.payload.code) ? action.payload : item),\n            }\n\n        case types.warehouseRemoveItem:\n            return {\n                ...state,\n                items: state.items.filter(item => item.code !== state.activeItem.code),\n                activeItem: null\n            }\n\n        case types.warehouseSetActiveItem:\n            return {\n                ...state,\n                activeItem: action.payload\n            }\n\n        case types.warehouseRemoveActiveItem:\n            return {\n                ...state,\n                activeItem: null\n            }\n\n        case types.warehouseClear:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\"\n\n\nconst initialState = {\n    factories: [],\n    sections: [],\n    machines: [],\n    numbers: [],\n    docs: [],\n    activeDoc: null\n}\n\n\nexport const factoryReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.factorySetFactories: {\n            return {\n                ...state,\n                factories: action.payload\n            }\n        }\n\n        case types.factorySetSections: {\n            return {\n                ...state,\n                sections: action.payload\n            }\n        }\n\n        case types.factorySetMachines: {\n            return {\n                ...state,\n                machines: action.payload\n            }\n        }\n\n        case types.factorySetNumberSections: {\n            return {\n                ...state,\n                numbers: action.payload\n            }\n        }\n\n        case types.factorySetDocs: {\n            return {\n                ...state,\n                docs: action.payload\n            }\n        }\n\n        case types.factorySetActiveDoc: {\n            return {\n                ...state,\n                activeDoc: action.payload\n            }\n        }\n\n        case types.factoryClearActiveDoc: {\n            return {\n                ...state,\n                activeDoc: null\n            }\n        }\n\n        case types.factoryAddDoc: {\n            return {\n                ...state,\n                docs: [...state.docs, action.payload]\n            }\n        }\n\n        case types.factoryDeleteDoc: {\n            return {\n                ...state,\n                docs: state.docs.filter(doc => doc.id !== state.activeDoc.id),\n                activeDoc: null\n            }\n        }\n\n        case types.factoryClearFactory: {\n            return {\n                ...initialState\n            }\n        }\n        default:\n            return state;\n    }\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    warnings: []\n}\n\n\nexport const warningReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.warningLoadWarnings:\n            return {\n                ...state,\n                warnings: [...action.payload]\n            }\n\n        case types.warningAddWarning:\n            return {\n                ...state,\n                warnings: [action.payload, ...state.warnings]\n            }\n\n        case types.warningRemoveWarning:\n            return {\n                ...state,\n                warnings: state.warnings.filter(warning => warning.id !== action.payload)\n            }\n\n        case types.warningClear:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}","import { types } from \"../types/types\"\n\n\nconst initialState = {\n    weeks: [],\n    threeWeekSections: [],\n    lastWeekByOrderType: {},\n    lastWeekByBreakdown: {},\n    lastWeekByTechnician: {},\n    interventionsWeeks: {},\n    totalTimeByWeek: {}\n}\n\nexport const statisticsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.statisticsLoadWeeks: {\n            return {\n                ...state,\n                weeks: [...action.payload]\n            }\n        }\n\n        case types.statisticsLoadThreeWeeksSections: {\n            return {\n                ...state,\n                threeWeekSections: [...action.payload]\n            }\n        }\n\n        case types.statisticsLoadlastWeekByOrderType: {\n            return {\n                ...state,\n                lastWeekByOrderType: { ...action.payload }\n            }\n        }\n\n        case types.statisticsLoadlastWeekByBreakdown: {\n            return {\n                ...state,\n                lastWeekByBreakdown: { ...action.payload }\n            }\n        }\n\n        case types.statisticsLoadlastWeekByTechnician: {\n            return {\n                ...state,\n                lastWeekByTechnician: { ...action.payload }\n            }\n        }\n\n        case types.statisticsLoadInterventionsWeeks: {\n            return {\n                ...state,\n                interventionsWeeks: { ...action.payload }\n            }\n        }\n\n        case types.statisticsLoadTotalTimeByWeek: {\n            return {\n                ...state,\n                totalTimeByWeek: { ...action.payload }\n            }\n        }\n\n        case types.statisticsClear: {\n            return {\n                ...initialState\n            }\n        }\n\n        default:\n            return state\n    }\n\n\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { navReducer } from \"./navReducer\";\nimport { crewReducer } from \"./crewReducer\";\nimport { uiReducer } from \"./uiReducer\";\nimport { warehouseReducer } from \"./warehouseReducer\";\nimport { factoryReducer } from \"./factoryReducer\";\nimport { warningReducer } from \"./warningReducer\";\nimport { statisticsReducer } from \"./statisticsReducer\";\n\nexport const rootReducer = combineReducers({\n    auth: authReducer,\n    nav: navReducer,\n    calendar: calendarReducer,\n    ui: uiReducer,\n    crew: crewReducer,\n    warehouse: warehouseReducer,\n    factory: factoryReducer,\n    warning: warningReducer,\n    statistics: statisticsReducer\n});","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers =\n    (typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n","import React from 'react'\nimport { AppRouter } from './router/AppRouter'\n\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './styles/styles.scss';\n\n\nexport const MtileApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MtileApp } from './MtileApp';\n\n\nReactDOM.render(<MtileApp />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}