{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","components/ui/Loading.js","pages/LoadingScreen.js","components/ui/AnimatedBackground.js","helpers/toggleShowPassword.js","helpers/inputChecks.js","components/ui/LoadingPopup.js","components/ui/ToastError.js","pages/LoginScreen.js","actions/nav.js","components/ui/Navbar.js","helpers/countTotalTimeOperations.js","components/ui/ToastSuccess.js","helpers/checkStockItems.js","actions/warehouse.js","actions/calendar.js","actions/factory.js","actions/technician.js","actions/warnings.js","actions/statistics.js","actions/ui.js","components/ui/TopBar.js","components/ui/ResponsiveNav.js","helpers/disable-enable-scroll.js","helpers/getOrderById.js","helpers/helpersHistorical.js","components/calendar/CalendarModal.js","components/dashboard/TableDashboard.js","helpers/getColumnsTables.js","components/ui/ModalToastify.js","components/dashboard/ModalWarning.js","pages/DashboardScreen.js","helpers/getOrdersStillOpen.js","components/admin/AdminModal.js","pages/AdminScreen.js","helpers/getMachinesByNumberId.js","helpers/getSectionsByFactoryId.js","helpers/getSectionNumbersBySectionId.js","components/order/OperationModalAdd.js","components/order/OperationModalUpdate.js","components/order/TabOperations.js","helpers/getTechnicianNameById.js","components/order/ClockInOutModalAdd.js","components/order/ClockInOutModalUpdate.js","components/order/TabClockInOut.js","components/order/MaterialModalAdd.js","components/order/MaterialModalUpdate.js","components/order/TabMaterials.js","components/ui/BackgroundModal.js","components/order/OrderForm.js","pages/OrderScreen.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","pages/CalendarScreen.js","helpers/getEventColor.js","components/ui/ButtonNew.js","helpers/checkImageSizeAndType.js","components/crew/CrewModal.js","pages/CrewScreen.js","components/warehouse/Table.js","components/warehouse/WarehouseModal.js","pages/WarehouseScreen.js","components/historical/TableHistorical.js","pages/HistoricalScreen.js","pages/StatisticsScreen.js","pages/Error404Screen.js","components/doc/PdfLoader.js","components/doc/PdfPage.js","components/doc/PdfModal.js","helpers/checkDocSizeAndType.js","components/doc/PdfModalAdd.js","pages/DocsScreen.js","helpers/getDocById.js","helpers/getDocsBySectionId.js","pages/NewOrderScreen.js","router/MainRouter.js","helpers/checkTokenDate.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/navReducer.js","reducers/crewReducer.js","reducers/uiReducer.js","reducers/warehouseReducer.js","reducers/factoryReducer.js","reducers/warningReducer.js","reducers/statisticsReducer.js","reducers/rootReducer.js","store/store.js","MtileApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","fetchWithFile","a","fetchOperations","id","arrayOperation","operations_added","items","resp","json","new_operation","push","fetchDataWeeksSections","section","weeks","temp","name","week","length","total","types","authLogin","email","password","dispatch","startLoadingLogin","ok","uid","admin","setTimeout","finishLoadingLogin","setItem","Date","getTime","login","msg","console","log","user","type","payload","logout","startChecking","finishChecking","removeItem","startAddUser","startUpdateUser","userData","startDeleteUser","undefined","active","Loading","className","LoadingScreen","AnimatedBackground","toggleShowPassword","input","document","querySelector","icon","classList","contains","remove","add","checkLoginUser","RegExp","test","checkLoginPassword","trim","LoadingPopup","ToastError","text","LoginScreen","useState","formValues","setFormValues","rememberMe","setRememberMe","loadingLogin","useSelector","state","auth","useDispatch","useEffect","handleInputChange","target","value","handleSubmitLogin","e","preventDefault","valid","toast","error","src","alt","onSubmit","onChange","autoComplete","onClick","checked","onColor","height","width","toggleNav","toggleResponsive","Navbar","navExtended","nav","handleToggleNav","onClickAway","exact","to","activeClassName","countTotalTimeOperations","eventData","count","operations","operation","parseFloat","time","ToastSuccess","checkStockItems","itemsToOrder","filter","item","quantity","minStock","startGetWarehouseItems","loadItemsToOrder","loadWarehouseItems","removeActiveItem","updateItem","addItem","setActiveEvent","event","clearActiveEvent","loadOrderEvents","events","startAddOrderEvent","totalMins","materials","clocks","newEvent","array_operations","array_clocks","array_materials","addOrderEvent","message","startUpdateOrderEvent","closed","confirmed","material","code","newItem","end","endFix","start","startFix","updateOrderEvent","startDeleteOrderEvent","deleteOrderEvent","startLoadOrderTypes","loadOrderTypes","orderTypes","startLoadBreakdownTypes","breakdowns","loadBreakdownTypes","breakdownTypes","startLoadFactory","startSetFactories","startSetSections","startSetMachines","startSetNumberSections","startSetDocs","factories","setFactories","sections","setSections","machines","setMachines","numbers","setNumberSections","docs","setDocs","addDoc","doc","deleteDoc","clearActiveTechnician","loadCrew","crew","addNewTechnician","technician","updateTechnician","deleteTechnician","clearTechnicians","loadWarnings","warnings","deleteWarning","addWarning","warning","startloadingStatistics","startLoadWeeks","startLoadThreeWeeksSections","startLoadlastWeekByOrderType","startLoadIntervetionsWeeks","startLoadTotalTimeByWeek","startLoadlastWeekByBreakdown","startLoadlastWeekByTechnician","dataWeeks","loadWeeks","getState","statistics","arrayDatos","loadThreeWeeksSections","orderTypeWeeks","quantities","names","orderTypeWeek","loadLastWeekByOrderType","breakdownWeeks","loadLastWeekByBreakdown","techniciansWeeks","technicianWeek","loadLastWeekByTechnician","interventionsWeeks","weeksIntervetions","weeksInterventionsCounts","intervetionWeek","loadInterventionsWeeks","totalTimeWeeks","weeksTime","weeksTotalTime","timeWeek","loadTotalTimeByWeek","uiOpenModal","uiCloseModal","TopBar","history","useHistory","modalAlert","ui","warehouse","handleToggleAlerts","nativeEvent","map","description","ResponsiveNav","showResponsive","disableScroll","scrollTop","window","pageYOffset","documentElement","scrollLeft","pageXOffset","onscroll","scrollTo","enableScroll","getOrderById","find","toString","getNameOrderType","getNameBreakdown","getNameFactory","factory","getNameSection","getNameNumber","number","getNameMachine","machine","initialState","breakdown","CalendarModal","setTableModal","calendar","technicians","modalOpen","activeEvent","orderType","handleCloseModal","isOpen","onRequestClose","contentLabel","closeTimeoutMS","ariaHideApp","disabled","selected","timeInputLabel","dateFormat","showTimeInput","modal","TableDashboard","columns","tableModal","tableInstance","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","handleRowClick","orderId","attributes","nodeValue","order","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","row","getRowProps","cells","cell","i","data-id","original","moment","format","breakdownType","getCellProps","getColumnsTableWarehouse","Header","accessor","getColumnsTableHistorical","getColumnsTableDashboard","ModalToastify","closeToast","handleDeleteItem","stopPropagation","ModalWarning","setShowWarningModal","isValid","position","POSITION","TOP_CENTER","success","startAddWarning","DashboardScreen","showWarningModal","showLabels","setShowLabels","innerWidth","orders","ordersStillOpen","threeWeekSections","lastWeekByOrderType","handleDeleteWarning","destroyed","startDeleteWarning","optionsDonut","labels","chart","toolbar","show","offsetX","offsetY","legend","optionsBar","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","colors","xaxis","categories","title","yaxis","fill","opacity","tooltip","y","formatter","val","containerMargin","top","responsive","breakpoint","options","fontSize","series","warn","closeOnClick","autoClose","toastId","showDeleteWarning","AdminModal","idUser","setIdUser","users","setUsers","setShow","getUser","handleSubmit","validator","isEmail","newUsers","placeholder","AdminScreen","formValuesUser","setFormValuesUser","formValuesOrder","setFormValuesOrder","isAdmin","setIsAdmin","loadUsers","handleInputChangeUser","handleStartDeleteUser","handleDeleteUser","handleSubmitUser","handleSubmitOrder","Number","isInteger","isNumeric","getMachinesByNumberId","numberId","getSectionsByFactoryId","factoryId","getSectionNumbersBySectionId","sectionId","OperationModalAdd","setShowAddModal","subFormValues","setSubFormValues","isNaN","parseInt","indexOf","split","splitted","min","step","OperationModalUpdate","index","setIndex","TabOperations","showAddModal","handleDeleteOperation","newOperations","handleDelete","handleUpdateOperation","getTechnicianNameById","ClockInOutModalAdd","userId","toDate","startWork","isSameOrAfter","locale","es","minDate","ClockInOutModalUpdate","clock","TabClockInOut","handleDeleteClockInOut","newClocks","handleUpdateModal","MaterialModalAdd","searchResults","setSearchResults","search","setSearch","itemSelected","setItemSelected","toLowerCase","includes","handleAdd","result","MaterialModalUpdate","TabMaterials","newMaterials","handleUpdateItem","BackgroundModal","setShowModal","Object","keys","onClose","handleError","transition","Flip","worker","OrderForm","selectedSections","setSelectedSections","selectedSectionsNumbers","setSelectedSectionsNumbers","selectedMachines","setSelectedMachines","showModal","setResult","breadMessage","setBreadMessage","factorySections","sectionNumbers","sectionMachines","location","pathname","handleLockChange","isBefore","isAfter","isSameOrBefore","goBack","OrderScreen","isLoading","setIsLoading","showLoading","messages","allDay","previous","next","today","month","day","agenda","date","noEventsInRange","showMore","CalendarEvent","factoryComponent","sectionComponent","machineComponent","setData","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","defaultDate","defaultView","eventPropGetter","isSelected","backgroundColor","textColor","typeId","getEventColor","style","borderRadius","display","color","components","onSelectEvent","onView","view","startAccessor","endAccessor","ButtonNew","iconData","checkImageSizeAndType","file","isImage","checkSize","size","URL","createObjectURL","Promise","resolve","res","imgType","surname","birthDate","identityDocument","phoneNumber","city","address","image","notes","schedule","CrewModal","setFile","activeTechnician","handlePictureChange","files","tempFile","check","handleDeleteTechnician","failed","isMobilePhone","isIdentityCard","technicianValues","fileName","formData","FormData","append","startUpdateTechnician","startAddTechnician","timeFormat","closeOnSelect","accept","CrewScreen","openModalTechnician","clickedTechnician","page","Table","usePagination","pageOptions","pageIndex","previousPage","nextPage","canPreviousPage","canNextPage","refElement","parentNode","childNodes","innerText","setActiveItem","place","WarehouseModal","activeItem","cleanFormValues","rest","savedItem","startAddItem","WarehouseScreen","showed","setShowed","onBlur","focus","TableHistorical","pageSize","factoryName","sectionName","sectionNumber","machineName","HistoricalScreen","StatisticsScreen","totalTimeByWeek","lastWeekByBreakdown","lastWeekByTechnician","optionsDonutOrderType","fontWeight","fontFamily","optionsDonutBreakdown","optionsDonutTechnician","dataBarInterventionsWeeks","click","w","distributed","dataBarTotalTimeWeeks","zoom","Error404Screen","pdfjsWorker","pdfjs","GlobalWorkerOptions","workerSrc","PdfLoader","pdf","setNumPages","pageNumber","setPageNumber","loading","onLoadSuccess","numPages","renderMode","info","PdfPage","changePage","offset","prevPageNumber","PdfModal","setShowModalDoc","resetData","activeDoc","handleDeleteDoc","isPdf","PdfModalAdd","formIsValid","uploadedDoc","defaultValue","checkFile","DocsScreen","showSections","setShowSections","showPdf","setShowPdf","isRotateFactory","setIsRotateFactory","isRotateSection","setIsRotateSection","optionsSelected","setOptionsSelected","showModalDoc","handleClickAway","toggleFactory","toggleSection","handleDocClick","docData","getDocById","clicker","clickerSelect","sectionDocs","getDocsBySectionId","NewOrderScreen","MainRouter","tokenDate","Math","abs","round","checkTokenDate","eventsWithData","path","component","PrivateRoute","isAuthenticated","Component","props","PublicRoute","AppRouter","checking","basename","rootReducer","combineReducers","action","t","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","MtileApp","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b24b49ee.chunk.js","sourcesContent":["\nconst { REACT_APP_URL } = process.env;\nconst baseUrl = REACT_APP_URL;\n\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}\n\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    switch (method) {\n        case 'GET':\n            return fetch(url, {\n                method,\n                headers: {\n                    'x-token': token\n                },\n            });\n\n        case 'POST':\n            return fetch(url, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-token': token\n                },\n                body: JSON.stringify(data)\n            });\n\n        case 'DELETE':\n            return fetch(url, {\n                method,\n                headers: {\n                    'x-token': token\n                }\n            });\n\n        case 'PUT':\n            return fetch(url, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-token': token\n                },\n                body: JSON.stringify(data)\n            });\n\n        default:\n            return false;\n    }\n}\n\nconst fetchWithFile = async (endpoint, data) => {\n\n    const token = localStorage.getItem('token') || '';\n    const url = `${baseUrl}/${endpoint}`;\n\n    return fetch(url, {\n        method: 'POST',\n        headers: {\n            'x-token': token\n        },\n        body: data\n    });\n\n}\n\nconst fetchOperations = async (id, endpoint, arrayOperation, method = 'POST') => {\n\n    const operations_added = [];\n\n    for (const items of arrayOperation) {\n        const resp = await fetchWithToken(`events/${endpoint}/${id}`, items, method);\n        const { new_operation } = await resp.json();\n\n        if (new_operation) {\n            operations_added.push(new_operation);\n        }\n    }\n\n    return operations_added;\n}\n\nconst fetchDataWeeksSections = async (section, weeks) => {\n    const temp = {\n        name: section,\n        data: []\n    }\n\n    for (const week of weeks) {\n\n        const resp = await fetchWithToken(`statistics/section/${week}`, { section: section }, 'POST');\n        const { data } = await resp.json();\n\n        if (data.length > 0) {\n            temp.data.push(data[0].total);\n        }\n        else {\n            temp.data.push(0);\n            // // Aleatory numbers just for showing more data\n            // temp.data.push(Math.floor((Math.random() + 1) * 10));\n        }\n    }\n\n    return temp;\n}\n\n\nexport {\n    fetchWithoutToken,\n    fetchWithToken,\n    fetchWithFile,\n    fetchOperations,\n    fetchDataWeeksSections\n}","export const types = {\n\n    /* login */\n    authLogin: '[auth] User Login',\n    authLogout: '[auth] User Logout',\n    authCheckingFinish: '[auth] Checking Finish',\n    authLoadingStart: '[auth] Loading Start',\n    authLoadingFinish: '[auth] Loading Finish',\n\n    /* show/hide extended nav */\n    toggleNav: '[nav] Toggle Nav',\n    toggleResponsiveNav: '[nav] Toggle Responsive',\n\n    /* modal */\n    uiOpenModal: \"[UI] Open Modal\",\n    uiCloseModal: \"[UI] Close Modal\",\n    uiToggleAlerts: \"[UI] Open/Close Alerts\",\n\n    /* calendar */\n    eventSetActive: \"[event] Set Active\",\n    eventClearActive: \"[event] Clear Active\",\n    eventCleaner: \"[event] Clean events\",\n    loadOrderEvents: \"[event] Load Order Events\",\n    loadOrderTypes: \"[event] Load Order Types\",\n    loadBreakdownTypes: \"[event] Load Breakdown Types\",\n    addOrderEvent: \"[event] Add Order Event\",\n    updateOrderEvent: \"[event] Update Order Event\",\n    deleteOrderEvent: \"[event] delete Order Event\",\n\n    /* crew */\n    crewLoadTechnicians: \"[crew] Load techinicians\",\n    crewSetActive: \"[crew] Set active\",\n    crewClearActive: \"[crew] Clear active\",\n    crewAddNewTechnician: \"[crew] Add new technician\",\n    crewUpdateTechnician: \"[crew] Update technician\",\n    crewDeleteTechnician: \"[crew] Delete technician\",\n    crewClearTechnician: \"[crew] Clear Technicians\",\n\n    /* warehouse */\n    warehouseLoaded: \"[warehouse] Loaded Data\",\n    warehouseRemoveItem: \"[warehouse] Remove Item\",\n    warehouseAddItem: \"[warehouse] Add Item\",\n    warehouseUpdateItem: \"[warehouse] Update Item\",\n    warehouseSetActiveItem: \"[warehouse] Set Active Item\",\n    warehouseRemoveActiveItem: \"[warehouse] Remove Active Item\",\n    warehouseClear: \"[warehouse] Clear All\",\n    warehouseItemsToOrder: \"[warehouse] Items To Order Loaded\",\n\n    /* factory */\n    factorySetFactories: \"[factories] Set Factories\",\n    factorySetSections: \"[factories] Set Sections\",\n    factorySetMachines: \"[factories] Set Machines\",\n    factorySetNumberSections: \"[factories] Set Number Sections\",\n    factorySetDocs: \"[factories] Set Docs\",\n    factorySetActiveDoc: \"[factories] Set Active Doc\",\n    factoryClearActiveDoc: \"[factories] Clear Active Doc\",\n    factoryAddDoc: \"[factories] Add Doc\",\n    factoryDeleteDoc: \"[factories] Delete Doc\",\n    factoryClearFactory: \"[factories] Clear Factory\",\n\n    /* warnings */\n    warningLoadWarnings: \"[warnings] Load warnings\",\n    warningAddWarning: \"[warnings] Add warning\",\n    warningRemoveWarning: \"[warnings] Remove warning\",\n    warningClear: \"[warnings] Clear All\",\n\n    /* statistics */\n    statisticsLoadWeeks: \"[statistics] Load Weeks\",\n    statisticsLoadThreeWeeksSections: \"[statistics] Load 3 Weeks Sections\",\n    statisticsLoadlastWeekByOrderType: \"[statistics] Load Last Week by OrderType\",\n    statisticsLoadlastWeekByBreakdown: \"[statistics] Load Last Week by Breakdown\",\n    statisticsLoadlastWeekByTechnician: \"[statistics] Load Last Week by Technician\",\n    statisticsLoadInterventionsWeeks: \"[statistics] Load Interventions by Week\",\n    statisticsLoadTotalTimeByWeek: \"[statistics] Load Total Time by Week\",\n    statisticsClear: \"[statistics] Clear All\",\n}","// We can use dispatch in this actions file, because the middleware *thunk*.\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\"\n\n\n// Login fetch without token\nexport const authLogin = (email, password) => {\n\n    return async (dispatch) => {\n        dispatch(startLoadingLogin());\n\n        try {\n            const resp = await fetchWithoutToken('users/', { email, password }, 'POST');\n            const body = await resp.json();\n\n            if (body.ok) {\n                const { name, uid, token, admin } = body;\n                setTimeout(() => {\n\n                    dispatch(finishLoadingLogin());\n\n                    localStorage.setItem('token', token);\n                    localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n                    dispatch(login({\n                        uid,\n                        name,\n                        admin\n                    }));\n\n                    return {\n                        ok: true\n                    }\n                }, 500);\n\n            } else {\n                return {\n                    ok: false,\n                    msg: 'Usuario y/o password incorrectos'\n                }\n            }\n\n        } catch (error) {\n            console.log(error)\n            return {\n                ok: false,\n                msg: 'Error con la conexión, contacte con el administrador'\n            }\n        }\n\n    }\n}\n\n// login to authReducer\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n// logout to authReducer\nexport const logout = () => ({\n    type: types.authLogout\n});\n\n\nconst startLoadingLogin = () => ({\n    type: types.authLoadingStart\n});\n\nexport const finishLoadingLogin = () => ({\n    type: types.authLoadingFinish\n});\n\n// On every Refresh, will check if usertoken is in localStorage and will renew it\nexport const startChecking = () => {\n\n    return async (dispatch) => {\n\n        try {\n            //fetch with token to backend, if ok, dispatch(login), else finishChecking\n            const resp = await fetchWithToken(\"users/renew\");\n            const body = await resp.json();\n\n            if (body.ok) {\n\n                localStorage.setItem(\"token\", body.token);\n                localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n                dispatch(finishChecking());\n\n                return dispatch(\n                    login({\n                        uid: body.uid,\n                        name: body.name,\n                        admin: body.admin\n                    })\n                );\n            } else {\n                localStorage.removeItem('token');\n                localStorage.removeItem('token-init-date');\n                dispatch(finishChecking());\n            }\n        } catch (error) {\n            console.log(error);\n            localStorage.removeItem('token');\n            localStorage.removeItem('token-init-date');\n            dispatch(finishChecking());\n        }\n    }\n}\n\n// If the token is outdated or doesn't exist, this function will set auth.checking to false\nexport const finishChecking = () => ({\n    type: types.authCheckingFinish,\n});\n\nexport const startAddUser = (user) => {\n\n    return async () => {\n\n        try {\n            const resp = await fetchWithToken('users/new', user, 'POST');\n            const data = await resp.json();\n            const msg = data?.msg;\n\n\n            if (data?.ok) {\n\n                return ({\n                    user: data.user,\n                    ok: true,\n                    msg: 'Usuario creado correctamente'\n                });\n\n            } else {\n                return ({\n                    ok: false,\n                    msg\n                });\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nexport const startUpdateUser = (userData) => {\n\n    return async () => {\n\n        try {\n\n            const resp = await fetchWithToken(`users/${userData.id}`, userData, 'PUT');\n            const { user } = await resp.json();\n\n            if (user) {\n                return ({\n                    ok: true,\n                    msg: 'Usuario editado correctamente',\n                    user\n                });\n            } else {\n                return ({\n                    ok: false,\n                    msg: 'Error al actualizar el usuario, inténtelo de nuevo más tarde',\n                });\n            }\n        } catch (error) {\n            console.log(error);\n            return ({\n                ok: false,\n                msg: 'Error al conectar con la BBDD, contacte con el administrador',\n            });\n        }\n\n\n    }\n\n}\n\nexport const startDeleteUser = (id) => {\n\n    return async () => {\n\n        try {\n\n            const resp = await fetchWithToken(`users/${id}`, undefined, 'DELETE');\n            const { user } = await resp.json();\n\n\n            if (user && !user.active) {\n                return ({\n                    ok: true,\n                    msg: 'Usuario desactivado correctamente',\n                    user,\n                });\n            } else if (user && user.active) {\n                return ({\n                    ok: true,\n                    msg: 'Usuario activado correctamente',\n                    user,\n                });\n            } else {\n                return ({\n                    ok: false,\n                    msg: 'Error al borrar el usuario, inténtelo de nuevo más tarde',\n                    user,\n                });\n            }\n\n        } catch (error) {\n            console.log(error);\n            return ({\n                ok: false,\n                msg: 'Error al borrar el usuario, inténtelo de nuevo más tarde',\n            });\n        }\n\n    }\n\n}","import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"loading-component animate__animated animate__fadeIn\">\n            <h1>Cargando\n                <span className=\"dot dot-1\"> . </span>\n                <span className=\"dot dot-2\">. </span>\n                <span className=\"dot dot-3\">. </span>\n            </h1>\n\n            <div className=\"loading-bar-wrapper\">\n                <div className=\"loading-bar-1\"></div>\n                <div className=\"loading-bar-2\"></div>\n                <div className=\"loading-bar-3\"></div>\n                <div className=\"loading-bar-4\"></div>\n                <div className=\"loading-bar-5\"></div>\n                <div className=\"loading-bar-6\"></div>\n                <div className=\"loading-bar-7\"></div>\n                <div className=\"loading-bar-8\"></div>\n                <div className=\"loading-bar-9\"></div>\n                <div className=\"loading-bar-10\"></div>\n                <div className=\"loading-bar-11\"></div>\n                <div className=\"loading-bar-12\"></div>\n                <div className=\"loading-bar-13\"></div>\n                <div className=\"loading-bar-14\"></div>\n                <div className=\"loading-bar-15\"></div>\n                <div className=\"loading-bar-16\"></div>\n                <div className=\"loading-bar-17\"></div>\n                <div className=\"loading-bar-18\"></div>\n            </div>\n        </div >\n    )\n}\n","import React from 'react'\nimport { Loading } from '../components/ui/Loading'\n\nexport const LoadingScreen = () => {\n    return (\n        <div className=\"loading-screen-wrapper animate__animated animate__fadeIn animate__faster\">\n            <Loading />\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const AnimatedBackground = () => {\n    return (\n        <>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n            <div className=\"firefly\"></div>\n        </>\n    )\n}\n","export const toggleShowPassword = () => {\n    const input = document.querySelector('input[name=\"password\"]');\n    const icon = document.querySelector('.icon-pwd');\n\n    input.type === 'password' ? input.type = \"text\" : input.type = \"password\";\n\n    if (icon.classList.contains('fa-eye-slash')) {\n        icon.classList.remove('fa-eye-slash');\n        icon.classList.add('fa-eye');\n    } else {\n        icon.classList.remove('fa-eye');\n        icon.classList.add('fa-eye-slash');\n    }\n}","\n// Check username length and add or remove additional ui classes to user input.\nexport const checkLoginUser = (user) => {\n\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n    if (!pattern.test(user)) {\n        document.querySelector('input[name=\"user\"]').classList.add('border-red');\n        document.querySelector('.message-error-login-user').classList.add('show-error');\n        return false;\n    } else {\n        document.querySelector('input[name=\"user\"]').classList.remove('border-red');\n        document.querySelector('.message-error-login-user').classList.remove('show-error');\n        return true;\n    }\n}\n\n// Check password length and add or remove additional ui classes to password input.\nexport const checkLoginPassword = (password) => {\n    if (password.trim().length < 4) {\n        document.querySelector('input[name=\"password\"]').classList.add('border-red');\n        document.querySelector('.message-error-login-password').classList.add('show-error');\n        return false;\n    } else {\n        document.querySelector('input[name=\"password\"]').classList.remove('border-red');\n        document.querySelector('.message-error-login-password').classList.remove('show-error');\n        return true;\n    }\n}","import React from 'react'\nimport { Loading } from './Loading'\n\nexport const LoadingPopup = ({ type = 'default' }) => {\n    return (\n        <>\n            {type === 'default'\n                ? <div className=\"loading-wrapper animate__animated animate__fadeIn animate__faster\">\n                    <Loading />\n                </div>\n\n                :\n                <div className=\"loading-wrapper\">\n                    <Loading />\n                </div>\n\n            }\n\n        </>\n    )\n}\n","import React from 'react'\n\nexport const ToastError = ({ text }) => {\n    return (\n        <div className=\"toast-success-custom\">\n            <i className=\"fas fa-exclamation-triangle\"></i>\n            <p>{text}</p>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authLogin, finishLoadingLogin } from '../actions/auth';\nimport { AnimatedBackground } from '../components/ui/AnimatedBackground';\nimport { toggleShowPassword } from '../helpers/toggleShowPassword';\nimport { checkLoginPassword, checkLoginUser } from '../helpers/inputChecks';\nimport { LoadingPopup } from '../components/ui/LoadingPopup';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ToastError } from \"../components/ui/ToastError\";\nimport Switch from \"react-switch\";\n\n\nexport const LoginScreen = () => {\n\n    const [formValues, setFormValues] = useState({ user: '', password: '' });\n    const [rememberMe, setRememberMe] = useState(false);\n    const { user, password } = formValues;\n    const { loadingLogin } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n\n        const email = localStorage.getItem('user_mail') || '';\n        if (email) {\n            setFormValues({ user: email, password: '' });\n            setRememberMe(true);\n        }\n    }, []);\n\n\n    const handleInputSwitch = () => {\n        setRememberMe(!rememberMe);\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        const name = target?.name;\n\n        document.querySelector(`input[name=\"${name}\"]`).classList.remove('border-red');\n        document.querySelector(`.message-error-login-${name}`).classList.remove('show-error');\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    };\n\n    const handleSubmitLogin = async (e) => {\n        e.preventDefault();\n        let valid = true;\n\n        if (!checkLoginUser(user)) {\n            valid = false;\n        }\n        if (!checkLoginPassword(password)) {\n            valid = false;\n        }\n\n        if (!valid) {\n            return;\n        }\n\n        if (rememberMe) {\n            localStorage.setItem('user_mail', user);\n        } else {\n            localStorage.removeItem('user_mail');\n        }\n\n        const resp = await dispatch(authLogin(user, password));\n\n        if (resp?.ok === false) {\n            dispatch(finishLoadingLogin());\n\n            setTimeout(() => {\n                document.querySelector(`input[name=\"user\"]`).classList.add('border-red');\n                document.querySelector(`input[name=\"password\"]`).classList.add('border-red');\n                return toast.error(<ToastError text={resp.msg} />);\n            }, 200);\n\n        }\n    }\n\n    return (\n\n        <div className='login-wrapper'>\n\n            {loadingLogin && <LoadingPopup />}\n\n            <AnimatedBackground />\n\n            <ToastContainer />\n            <div className=\"form-login-wrapper\">\n                <img src={`${process.env.PUBLIC_URL}/assets/images/mtile_login.png`} alt=\"logo_mtile\" />\n\n                <form onSubmit={handleSubmitLogin}>\n\n                    <div className=\"data-form-login\">\n                        <div className=\"login-grid\">\n                            <label>Email:</label>\n                            <input\n                                type=\"text\"\n                                name=\"user\"\n                                value={user}\n                                onChange={handleInputChange}\n                                autoComplete=\"off\" />\n                        </div>\n                        <span className=\"message-error-login-user\">El email no es un email válido.</span>\n\n                        <div className=\"login-grid\">\n                            <label>Password:</label>\n                            <div className=\"login-password-wrapper\">\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={handleInputChange}\n                                    autoComplete=\"off\" />\n                                <i className=\"fas fa-eye-slash icon-pwd\" onClick={toggleShowPassword}></i>\n                            </div>\n                        </div>\n                        <span className=\"message-error-login-password\">La contraseña es demasiado corta.</span>\n\n                        <div className=\"login-button-wrapper\">\n\n                            <div className=\"remember-me-wrapper\">\n                                <Switch\n                                    onChange={handleInputSwitch}\n                                    checked={rememberMe}\n                                    onColor=\"#ffa600\"\n                                    height={20}\n                                    width={42} />\n                                <label>Remember me?</label>\n                            </div>\n                            <button className=\"btn btn-login\" type=\"submit\">Login</button>\n                        </div>\n                    </div>\n\n                </form>\n\n            </div>\n        </div>\n\n    )\n}\n","import { types } from \"../types/types\";\n\n/* Actions to be called from a dispatch */\n\n// Extend and Reduce Nav => toggle\nexport const toggleNav = () => ({\n    type: types.toggleNav,\n});\n\n// Show and Hide Responsive Nav => toggle\nexport const toggleResponsive = () => ({\n    type: types.toggleResponsiveNav,\n});\n","import React from 'react';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { toggleNav } from '../../actions/nav';\n\nexport const Navbar = () => {\n\n    const { navExtended } = useSelector(state => state.nav);\n    const { admin } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    const handleToggleNav = () => {\n        dispatch(toggleNav());\n    }\n    const handleClickAway = () => {\n        if (!navExtended) {\n            return;\n        }\n\n        dispatch(toggleNav());\n    }\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <nav className={!navExtended ? '' : 'nav-large'}>\n\n                <div className=\"nav-icons-wrapper\">\n\n                    <div className=\"mb-3\">\n\n                        <NavLink exact to=\"/\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"fas fa-home\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Dashboard</span>\n                        </NavLink>\n\n                        {\n                            admin &&\n                            <NavLink to=\"/admin\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                                <i className=\"fas fa-user-shield\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Administrador</span>\n                            </NavLink>\n                        }\n\n                        <NavLink to=\"/neworder\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"far fa-plus-square\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Nueva orden</span>\n                        </NavLink>\n\n                        <NavLink to=\"/crew\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"fas fa-users\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Técnicos</span>\n                        </NavLink>\n\n                        <NavLink to=\"/calendar\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"far fa-calendar-alt\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Calendario</span>\n                        </NavLink>\n\n                        <NavLink to=\"/docs\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"far fa-file\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Documentación</span>\n                        </NavLink>\n\n                        <NavLink to=\"/warehouse\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"fas fa-boxes\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Almacén</span>\n                        </NavLink>\n\n                        <NavLink to=\"/statistics\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"far fa-chart-bar\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Estadísticas</span>\n                        </NavLink>\n\n                        <NavLink to=\"/history\" className={navExtended ? 'nav-icon-wrapper' : 'nav-icon-wrapper nav-icon-wrapper-reset-grid'} activeClassName=\"active-link\">\n                            <i className=\"fas fa-history\"></i><span className={!navExtended ? 'nav-text' : 'nav-text show-text'}>Histórico</span>\n                        </NavLink>\n\n                    </div>\n\n\n                    {\n                        (!navExtended)\n                            ?\n                            (\n                                <div className=\"nav-icon-wrapper extend-nav\" onClick={handleToggleNav}>\n                                    <i className=\"fas fa-chevron-right animate__animated animate__fadeIn\"></i>\n                                </div>\n                            )\n                            :\n                            (\n                                <div className=\"nav-icon-wrapper reduce-nav nav-icon-wrapper-reset-grid animate__animated animate__fadeIn animate__slow\" onClick={handleToggleNav}>\n                                    <i className=\"fas fa-chevron-left\"></i>\n                                </div>\n                            )\n                    }\n                </div>\n\n            </nav>\n        </ClickAwayListener>\n    )\n}\n","\n// Count total amout of time in the operations of an order\nexport const countTotalTimeOperations = (eventData) => {\n\n    let count = 0;\n\n    if (eventData.operations && eventData.operations.length > 0) {\n        for (const operation of eventData.operations) {\n            count += parseFloat(operation.time * 60);\n        }\n    }\n\n    return count;\n}","import React from 'react';\n\nexport const ToastSuccess = ({ text = '' }) => {\n    return (\n        <div className=\"toast-success-custom\">\n            <i className=\"far fa-check-circle icon-toast-success\"></i>\n            <p>{text}</p>\n        </div>\n    )\n}\n","export const checkStockItems = (items = []) => {\n\n    const itemsToOrder = items.filter(item => item.quantity <= item.minStock);\n\n    return itemsToOrder;\n}","import { types } from \"../types/types\";\nimport { toast } from 'react-toastify';\nimport { ToastSuccess } from \"../components/ui/ToastSuccess\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { ToastError } from \"../components/ui/ToastError\";\nimport { checkStockItems } from \"../helpers/checkStockItems\";\n\nexport const startGetWarehouseItems = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch items from db\n            const resp = await fetchWithToken(\"warehouse/\");\n            const { items } = await resp.json();\n\n            const itemsToOrder = checkStockItems(items);\n\n            dispatch(loadItemsToOrder(itemsToOrder))\n\n            if (items) {\n                dispatch(loadWarehouseItems(items));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadWarehouseItems = (items) => ({\n    type: types.warehouseLoaded,\n    payload: items\n});\n\nconst loadItemsToOrder = (items) => ({\n    type: types.warehouseItemsToOrder,\n    payload: items\n})\n\nexport const setActiveItem = (item) => ({\n    type: types.warehouseSetActiveItem,\n    payload: item\n});\n\nexport const removeActiveItem = () => ({\n    type: types.warehouseRemoveActiveItem,\n});\n\n\nexport const startUpdateItem = (item) => {\n\n    return async (dispatch) => {\n\n        try {\n            // Update item on BBDD\n            const { id, ...rest } = item;\n            const resp = await fetchWithToken(`warehouse/${id}`, { ...rest }, 'PUT');\n            const { newItem } = await resp.json();\n\n            if (newItem) {\n                dispatch(updateItem(newItem));\n                dispatch(startGetWarehouseItems());\n\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Item actualizado con éxito!\" />);\n                }, 200);\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const updateItem = (item) => ({\n    type: types.warehouseUpdateItem,\n    payload: item\n});\n\nexport const startAddItem = (item) => {\n\n    return async (dispatch) => {\n\n        try {\n\n            // TODO Add item to DB\n            const resp = await fetchWithToken(`warehouse/`, { ...item }, 'POST');\n            const { savedItem } = await resp.json();\n\n            if (savedItem) {\n                dispatch(addItem(item));\n                dispatch(startGetWarehouseItems());\n\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Item actualizado con éxito!\" />);\n                }, 200);\n            } else {\n                toast.error(<ToastError text=\"Error al guardar el item!\" />);\n            }\n\n        } catch (error) {\n            console.log(error);\n            toast.error(<ToastError text=\"Error al conectar, contacte con el administrador!\" />);\n        }\n    }\n}\n\nconst addItem = (item) => ({\n    type: types.warehouseAddItem,\n    payload: item\n});\n\nexport const startRemoveItem = () => {\n\n    return async (dispatch, getState) => {\n\n        try {\n            const { activeItem } = getState()?.warehouse;\n            const id = activeItem?.id;\n\n            if (id) {\n\n                // TODO Remove item from DB\n                const resp = await fetchWithToken(`warehouse/${id}`, {}, 'DELETE');\n                const data = await resp.json();\n                if (data) {\n                    dispatch(removeItem());\n                    toast.success(<ToastSuccess text=\"Item eliminado con éxito!\" />);\n                } else {\n                    toast.error(<ToastError text=\"Error al eliminar el item! !\" />);\n                }\n            }\n        } catch (error) {\n            console.log(error);\n            toast.error(<ToastError text=\"Error al conectar, contacte con el administrador!\" />);\n        }\n    }\n}\n\nconst removeItem = () => ({\n    type: types.warehouseRemoveItem\n});\n\nexport const clearWarehouse = () => ({\n    type: types.warehouseClear\n});","import { types } from \"../types/types\";\nimport { fetchWithToken, fetchOperations } from \"../helpers/fetch\";\nimport { countTotalTimeOperations } from \"../helpers/countTotalTimeOperations\";\nimport { updateItem } from './warehouse';\n\n// Set the last clicked event to activeEvent\nexport const setActiveEvent = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\n// Change activeEvent to NULL\nexport const clearActiveEvent = () => ({\n    type: types.eventClearActive\n});\n\n// Return calendarReducer to its initialState\nexport const clearEvents = () => ({\n    type: types.eventCleaner\n});\n\nexport const startLoadOrderEvents = () => {\n\n    return async (dispatch) => {\n\n        // Call to load order types and breakdown types\n        dispatch(startLoadOrderTypes());\n        dispatch(startLoadBreakdownTypes());\n\n        // fetch the events\n        try {\n            const resp = await fetchWithToken(\"events/events\");\n            const { eventsWithData: events } = await resp.json();\n\n            if (events) {\n\n                for (const event of events) {\n                    event.end = new Date(event.end);\n                    event.endFix = new Date(event.endFix);\n                    event.start = new Date(event.start);\n                    event.startFix = new Date(event.startFix);\n\n                    for (const clock of event.clocks) {\n                        clock.start = new Date(clock.start)\n                        clock.end = new Date(clock.end)\n                    }\n                }\n                dispatch(loadOrderEvents(events));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadOrderEvents = (events) => ({\n    type: types.loadOrderEvents,\n    payload: events\n});\n\nexport const startAddOrderEvent = (eventData) => {\n\n    return async (dispatch) => {\n\n        try {\n            const count = countTotalTimeOperations(eventData);\n            eventData.totalMins = count;\n\n            const { operations, materials, clocks, ...newEvent } = eventData;\n\n\n            // fetch the event \n            const resp = await fetchWithToken(\"events/events\", newEvent, 'POST');\n            const { event } = await resp.json();\n\n            if (event) {\n                // Get the generated ID\n                const { id } = event;\n\n                // fetch the operations, clocks and materials with the eventID generated\n                const array_operations = await fetchOperations(id, 'operation', operations);\n                const array_clocks = await fetchOperations(id, 'clock', clocks);\n                const array_materials = await fetchOperations(id, 'item', materials);\n\n                // Add the operations, clocks, materials from backend to event\n                event.operations = array_operations;\n                event.clocks = array_clocks;\n                event.materials = array_materials;\n\n                // Add the new event to the state\n                dispatch(addOrderEvent(event));\n\n                return {\n                    ok: true,\n                    message: 'Orden creada correctamente!'\n                }\n            } else {\n                //error\n                return {\n                    ok: false,\n                    message: 'No se ha podido guardar la orden!'\n                }\n            }\n\n        } catch (error) {\n            console.log(error);\n            return {\n                ok: false,\n                message: 'Error al guardar en la BBDD, contacte con el administrador!'\n            }\n        }\n    }\n}\n\nconst addOrderEvent = (event) => ({\n    type: types.addOrderEvent,\n    payload: event\n});\n\nexport const startUpdateOrderEvent = (eventData) => {\n\n    return async (dispatch) => {\n\n        const { id, operations, materials, clocks, ...newEvent } = eventData;\n\n        const count = countTotalTimeOperations(eventData);\n        newEvent.totalMins = count;\n\n        // If the order is closed, set confirmed to true\n        if (eventData.closed === true || eventData.closed === 1) {\n            newEvent.confirmed = true;\n        }\n\n        try {\n            //fetch the event \n            const resp = await fetchWithToken(`events/events/${id}`, newEvent, 'PUT');\n            const { event } = await resp.json();\n\n            if (event) {\n\n                // Remove previous operations, clocks, and items\n                await fetchWithToken(`events/operation/${id}`, undefined, 'DELETE');\n                await fetchWithToken(`events/clock/${id}`, undefined, 'DELETE');\n                await fetchWithToken(`events/item/${id}`, undefined, 'DELETE');\n\n                // fetch the operations with the eventID updated\n                let array_operations = [];\n                if (operations.length > 0) {\n                    array_operations = await fetchOperations(id, 'operation', operations);\n                }\n                event.operations = array_operations;\n\n                // fetch the clocks with the eventID updated\n                let array_clocks = [];\n                if (clocks.length > 0) {\n                    array_clocks = await fetchOperations(id, 'clock', clocks);\n                }\n                event.clocks = array_clocks;\n\n                // fetch the items with the eventID updated\n                let array_materials = [];\n                if (materials.length > 0) {\n                    array_materials = await fetchOperations(id, 'item', materials);\n                }\n                event.materials = array_materials;\n\n                // If the order is closed, confirm that discounting the items in the warehouse\n                if (event.confirmed) {\n                    for (const material of event.materials) {\n                        const resp = await fetchWithToken(`warehouse/subtract/${material.code}`, { quantity: material.quantity }, 'PUT');\n                        const { newItem } = await resp.json();\n\n                        // add the item with the amount discounted to the warehouse\n                        if (newItem) {\n                            dispatch(updateItem(newItem));\n                        }\n                    }\n                }\n                // Add the new event to the state\n                // transform dates to JS dates, or calendar will fail\n\n                event.end = new Date(event.end);\n                event.endFix = new Date(event.endFix);\n                event.start = new Date(event.start);\n                event.startFix = new Date(event.startFix);\n\n                dispatch(updateOrderEvent(event));\n\n                return {\n                    ok: true,\n                    message: 'Orden guardada correctamente!'\n                }\n            } else {\n                //error\n                return {\n                    ok: false,\n                    message: 'No se ha podido guardar la orden!'\n                }\n            }\n\n        } catch (error) {\n            console.log(error);\n            return {\n                ok: false,\n                message: 'Error al guardar en la BBDD, contacte con el administrador!'\n            }\n        }\n    }\n}\n\nconst updateOrderEvent = (event) => ({\n    type: types.updateOrderEvent,\n    payload: event\n});\n\nexport const startDeleteOrderEvent = (id) => {\n\n    return async (dispatch) => {\n\n        // fetch the events\n        try {\n            if (id) {\n\n                const resp = await fetchWithToken(`events/events/${id}`, undefined, 'DELETE');\n                const { active } = await resp.json();\n\n                if (active === 0) {\n                    dispatch(deleteOrderEvent(id));\n\n                    return ({\n                        ok: true,\n                        msg: 'Orden borrada correctamente'\n                    });\n\n                } else {\n                    return ({\n                        ok: false,\n                        msg: 'Error, la orden no existe'\n                    });\n                }\n            }\n        } catch (error) {\n            console.log(error);\n            return ({\n                ok: false,\n                msg: 'Error al conectar con la BBDD, hable con su administrador'\n            });\n        }\n\n    }\n}\n\nconst deleteOrderEvent = (id) => ({\n    type: types.deleteOrderEvent,\n    payload: id\n});\n\nconst startLoadOrderTypes = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the types\n            const resp = await fetchWithToken(\"events/types\");\n            const { types } = await resp.json();\n\n            if (types) {\n                dispatch(loadOrderTypes(types));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n\n    }\n}\nconst loadOrderTypes = (orderTypes) => ({\n    type: types.loadOrderTypes,\n    payload: orderTypes\n});\n\nconst startLoadBreakdownTypes = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the breakdowns\n            const resp = await fetchWithToken(\"events/breakdowns\");\n            const { breakdowns } = await resp.json();\n\n            if (breakdowns) {\n                dispatch(loadBreakdownTypes(breakdowns));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nconst loadBreakdownTypes = (breakdownTypes) => ({\n    type: types.loadBreakdownTypes,\n    payload: breakdownTypes\n});\n\n\n\n\n","import { types } from \"../types/types\";\nimport { toast } from 'react-toastify';\nimport { ToastSuccess } from \"../components/ui/ToastSuccess\";\nimport { fetchWithToken } from \"../helpers/fetch\";\n\n\nexport const startLoadFactory = () => {\n\n    return async (dispatch) => {\n\n        dispatch(startSetFactories());\n        dispatch(startSetSections());\n        dispatch(startSetMachines());\n        dispatch(startSetNumberSections());\n        dispatch(startSetDocs());\n\n    }\n}\n\n/* FACTORIES */\nconst startSetFactories = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the factories\n            const resp = await fetchWithToken(\"factory/factories\");\n            const { factories } = await resp.json();\n\n            if (factories) {\n                dispatch(setFactories(factories));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nconst setFactories = (factories) => ({\n    type: types.factorySetFactories,\n    payload: factories\n});\n\n/* FACTORY SECTIONS */\nconst startSetSections = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the sections\n            const resp = await fetchWithToken(\"factory/sections\");\n            const { sections } = await resp.json();\n\n            if (sections) {\n                dispatch(setSections(sections));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nconst setSections = (sections) => ({\n    type: types.factorySetSections,\n    payload: sections\n});\n\n\n/* SECTION'S MACHINES */\nconst startSetMachines = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the machines\n            const resp = await fetchWithToken(\"factory/machines\");\n            const { machines } = await resp.json();\n\n            if (machines) {\n                dispatch(setMachines(machines));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\nconst setMachines = (machines) => ({\n    type: types.factorySetMachines,\n    payload: machines\n});\n\n\n/* SECTION'S NUMBERS */\n\nconst startSetNumberSections = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the section numbers\n            const resp = await fetchWithToken(\"factory/numbers\");\n            const { numbers } = await resp.json();\n\n            if (numbers) {\n                dispatch(setNumberSections(numbers));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nconst setNumberSections = (numbers) => ({\n    type: types.factorySetNumberSections,\n    payload: numbers\n});\n\n\n\n/* DOCS */\n\nconst startSetDocs = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fetch the docs\n            const resp = await fetchWithToken(\"factory/docs\");\n            const { docs } = await resp.json();\n\n            if (docs) {\n                dispatch(setDocs(docs));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst setDocs = (docs) => ({\n    type: types.factorySetDocs,\n    payload: docs\n});\n\nexport const setActiveDoc = (doc) => ({\n    type: types.factorySetActiveDoc,\n    payload: doc\n});\n\nexport const clearActiveDoc = () => ({\n    type: types.factoryClearActiveDoc\n});\n\nexport const startAddFile = (doc) => {\n\n    return async (dispatch) => {\n\n        // Upload File to public folder, and save the name, info and sectionID in DB\n\n        try {\n            const token = localStorage.getItem('token') || '';\n\n            const formData = new FormData();\n            formData.append('file', doc.file)\n            formData.append('info', doc.info)\n            formData.append('section', doc.section)\n\n            const resp = await fetch(`${process.env.REACT_APP_URL}/uploads/doc`, {\n                method: 'POST',\n                headers: {\n                    'x-token': token\n                },\n                body: formData\n            });\n\n            const { uploadedDoc } = await resp.json();\n\n            if (uploadedDoc) {\n                dispatch(addDoc(uploadedDoc));\n\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Documento agregado con éxito!\" />);\n                }, 200);\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst addDoc = (doc) => ({\n    type: types.factoryAddDoc,\n    payload: doc\n});\n\nexport const startDeleteDoc = () => {\n\n    return async (dispatch, getState) => {\n\n        const { factory } = getState();\n        const { id } = factory.activeDoc;\n\n        if (id) {\n\n            // delete\n            try {\n                const resp = await fetchWithToken(`uploads/doc/${id}`, undefined, 'DELETE');\n                const data = await resp.json();\n\n                if (data) {\n                    dispatch(deleteDoc());\n\n                    setTimeout(() => {\n                        toast.success(<ToastSuccess text=\"Documento eliminado con éxito!\" />);\n\n                    }, 600);\n                }\n            } catch (error) {\n                console.log(error);\n            }\n\n        }\n    }\n}\n\nconst deleteDoc = () => ({\n    type: types.factoryDeleteDoc\n});\n\nexport const clearFactory = () => ({\n    type: types.factoryClearFactory\n});\n\n","import { types } from \"../types/types\";\nimport { toast } from 'react-toastify';\nimport { ToastSuccess } from \"../components/ui/ToastSuccess\";\nimport { fetchWithFile, fetchWithToken } from \"../helpers/fetch\";\n\nexport const setActiveTechnician = (tech) => ({\n    type: types.crewSetActive,\n    payload: tech\n});\n\nexport const clearActiveTechnician = () => ({\n    type: types.crewClearActive\n});\n\nexport const startLoadingCrew = () => {\n\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchWithToken(\"crew/\");\n            const { technicians } = await resp.json();\n\n            if (technicians) {\n                dispatch(loadCrew(technicians));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst loadCrew = (crew) => ({\n    type: types.crewLoadTechnicians,\n    payload: crew\n});\n\n\n\nexport const startAddTechnician = (technicianValues, file) => {\n\n    return async (dispatch) => {\n\n        let fileName = null;\n\n        // If there is a File, save it to hosting\n        if (file) {\n\n            try {\n                const formData = new FormData();\n                formData.append('file', file);\n                const resp = await fetchWithFile('uploads/technician/', formData);\n\n                fileName = await resp.json();\n\n            } catch (error) {\n                console.log('Error uploading image', error);\n            }\n        }\n\n        // If the file was saved, add to technicianValues\n        if (fileName) {\n            technicianValues.image = fileName.name;\n        }\n\n        // Saved the new technician to DB\n        try {\n\n            const resp = await fetchWithToken('crew/', technicianValues, 'POST');\n            const { technician } = await resp.json();\n\n            if (technician) {\n                dispatch(addNewTechnician(technician));\n\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Técnico agregado con éxito!\" />);\n                }, 200);\n\n            } else {\n                console.log('Error the technician was not saved');\n            }\n\n        } catch (error) {\n            console.log('Error while saving the technician', error);\n        }\n    }\n}\n\nconst addNewTechnician = (technician) => ({\n    type: types.crewAddNewTechnician,\n    payload: technician\n});\n\nexport const startUpdateTechnician = (technicianValues, file) => {\n\n    return async (dispatch) => {\n\n        const { id } = technicianValues;\n        let fileName = null;\n\n        // If there is a File, save it to hosting\n        if (file) {\n\n            try {\n                const formData = new FormData();\n                formData.append('file', file);\n                const resp = await fetchWithFile('uploads/technician/', formData);\n\n                fileName = await resp.json();\n\n            } catch (error) {\n                console.log('Error uploading image', error);\n            }\n        }\n\n        // If the file was saved, add to technicianValues\n        if (fileName) {\n            technicianValues.image = fileName.name;\n        }\n\n        try {\n            const resp = await fetchWithToken(`crew/${id}`, technicianValues, 'PUT');\n            const { technician } = await resp.json();\n\n            if (technician) {\n\n                dispatch(updateTechnician(technician));\n                setTimeout(() => {\n                    toast.success(<ToastSuccess text=\"Técnico actualizado con éxito!\" />);\n                }, 200);\n\n            } else {\n                console.log('Tthe technician was not saved');\n            }\n        } catch (error) {\n            console.log('Error while updating the technician');\n        }\n    }\n}\n\nconst updateTechnician = (technician) => ({\n    type: types.crewUpdateTechnician,\n    payload: technician\n});\n\n\nexport const startDeleteTechnician = () => {\n\n    return async (dispatch, getState) => {\n\n        try {\n            const { crew } = getState();\n            const { id } = crew.activeTechnician;\n\n            if (id) {\n\n                const resp = await fetchWithToken(`crew/${id}`, undefined, 'DELETE');\n                const { technician } = await resp.json();\n\n                if (technician) {\n                    dispatch(deleteTechnician());\n\n                    setTimeout(() => {\n                        toast.success(<ToastSuccess text=\"Técnico eliminado con éxito!\" />);\n                    }, 200);\n                }\n            } else {\n                console.log('Error, There is no id');\n            }\n        } catch (error) {\n            console.log('Error while deleting', error);\n        }\n    }\n}\n\nconst deleteTechnician = () => ({\n    type: types.crewDeleteTechnician\n});\n\n\nexport const clearTechnicians = () => ({\n    type: types.crewClearTechnician\n});\n","import { toast } from \"react-toastify\";\nimport { ToastError } from \"../components/ui/ToastError\";\nimport { ToastSuccess } from \"../components/ui/ToastSuccess\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const startLoadWarnings = () => {\n\n    return async (dispatch) => {\n\n        try {\n            // fecth warnings\n            const resp = await fetchWithToken(\"warnings/\");\n            const { warnings } = await resp.json();\n\n            if (warnings) {\n                dispatch(loadWarnings(warnings));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst loadWarnings = (warnings) => ({\n    type: types.warningLoadWarnings,\n    payload: warnings\n});\n\nexport const startDeleteWarning = (id) => {\n\n    return async (dispatch) => {\n\n        try {\n            // Delete warning from DB\n            const resp = await fetchWithToken(`warnings/${id}`, {}, 'DELETE');\n            const { destroyed } = await resp.json();\n\n            if (destroyed) {\n                dispatch(deleteWarning(id));\n                toast.success(<ToastSuccess text=\"Aviso eliminado con éxito\" />);\n            } else {\n                toast.error(<ToastError text=\"Error al eliminar el Item!\" />);\n            }\n        } catch (error) {\n            console.log(error);\n            toast.error(<ToastError text=\"Error al conectar, contacte con el administrador!\" />);\n        }\n\n    }\n}\n\nconst deleteWarning = (id) => ({\n    type: types.warningRemoveWarning,\n    payload: id\n});\n\nexport const startAddWarning = ({ description }) => {\n\n    return async (dispatch) => {\n\n        try {\n            // Save warning to DB\n            const resp = await fetchWithToken(\"warnings/\", { description }, 'POST');\n            const { warning } = await resp.json();\n\n            if (warning) {\n                dispatch(addWarning({ id: warning.id, description: warning.description }));\n                toast.success(<ToastSuccess text=\"Aviso agregado con éxito\" />);\n            } else {\n                toast.error(<ToastError text=\"Error al agregar el aviso!\" />);\n            }\n        } catch (error) {\n            console.log(error);\n            toast.error(<ToastError text=\"Error al conectar, contacte con el administrador!\" />);\n        }\n    }\n}\n\nconst addWarning = (warning) => ({\n    type: types.warningAddWarning,\n    payload: warning\n});\n\nexport const clearWarnings = () => ({\n    type: types.warningClear\n});\n","import { fetchDataWeeksSections, fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\n\nexport const startloadingStatistics = () => {\n\n    return async (dispatch) => {\n        await dispatch(startLoadWeeks());\n        await dispatch(startLoadThreeWeeksSections());\n        await dispatch(startLoadlastWeekByOrderType());\n        await dispatch(startLoadIntervetionsWeeks());\n        await dispatch(startLoadTotalTimeByWeek());\n        await dispatch(startLoadlastWeekByBreakdown());\n        await dispatch(startLoadlastWeekByTechnician());\n    }\n}\n\nconst startLoadWeeks = () => {\n\n    return async (dispatch) => {\n        const resp = await fetchWithToken('statistics/14dayssagobyweeks', undefined, 'GET');\n        const { weeks } = await resp.json();\n\n        const dataWeeks = []\n        if (weeks) {\n            for (const week of weeks) {\n                dataWeeks.push(week.week);\n            }\n        }\n        dispatch(loadWeeks(dataWeeks))\n    }\n}\n\nconst loadWeeks = (weeks) => ({\n    type: types.statisticsLoadWeeks,\n    payload: weeks\n});\n\n\nconst startLoadThreeWeeksSections = () => {\n\n    return async (dispatch, getState) => {\n\n        const { weeks } = getState().statistics;\n\n        const arrayDatos = [];\n\n        const sectionsArray = [\n            'Prensas',\n            'Esmaltadoras',\n            'Hornos',\n            'Clasificación',\n            'Parque Box',\n            'Tierras',\n            'Almacén',\n            'Taller',\n            'Otros'\n        ]\n\n        for (const section of sectionsArray) {\n            const data = await fetchDataWeeksSections(section, weeks);\n            arrayDatos.push(data);\n        }\n\n        dispatch(loadThreeWeeksSections(arrayDatos));\n    }\n}\n\nconst loadThreeWeeksSections = (data) => ({\n    type: types.statisticsLoadThreeWeeksSections,\n    payload: data\n});\n\n\n\nconst startLoadlastWeekByOrderType = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('statistics/lastweekbyordertype', undefined, 'GET');\n        const { orderTypeWeeks } = await resp.json();\n\n        const quantities = [];\n        const names = [];\n\n        if (orderTypeWeeks) {\n            for (const orderTypeWeek of orderTypeWeeks) {\n                quantities.push(orderTypeWeek.total);\n                names.push(orderTypeWeek.name);\n            }\n            dispatch(loadLastWeekByOrderType({ quantities, names }));\n        }\n\n    }\n}\n\nconst loadLastWeekByOrderType = (data) => ({\n    type: types.statisticsLoadlastWeekByOrderType,\n    payload: data\n});\n\nconst startLoadlastWeekByBreakdown = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('statistics/lastweekbybreakdown', undefined, 'GET');\n        const { breakdownWeeks } = await resp.json();\n\n        const quantities = [];\n        const names = [];\n\n        if (breakdownWeeks) {\n            for (const orderTypeWeek of breakdownWeeks) {\n                quantities.push(orderTypeWeek.total);\n                names.push(orderTypeWeek.name);\n            }\n            dispatch(loadLastWeekByBreakdown({ quantities, names }));\n        }\n\n    }\n}\n\nconst loadLastWeekByBreakdown = (data) => ({\n    type: types.statisticsLoadlastWeekByBreakdown,\n    payload: data\n});\n\n\nconst startLoadlastWeekByTechnician = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('statistics/lastweekbytechnician', undefined, 'GET');\n        const { techniciansWeeks } = await resp.json();\n\n        const quantities = [];\n        const names = [];\n\n        if (techniciansWeeks) {\n            for (const technicianWeek of techniciansWeeks) {\n                quantities.push(technicianWeek.total);\n                names.push(technicianWeek.name);\n            }\n            dispatch(loadLastWeekByTechnician({ quantities, names }));\n        }\n    }\n}\n\nconst loadLastWeekByTechnician = (data) => ({\n    type: types.statisticsLoadlastWeekByTechnician,\n    payload: data\n});\n\nconst startLoadIntervetionsWeeks = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('statistics/interventionsweeks', undefined, 'GET');\n        const { interventionsWeeks } = await resp.json();\n\n        const weeksIntervetions = [];\n        const weeksInterventionsCounts = [];\n\n        if (interventionsWeeks) {\n            for (const intervetionWeek of interventionsWeeks) {\n                weeksIntervetions.push(intervetionWeek.week);\n                weeksInterventionsCounts.push(intervetionWeek.count);\n            }\n            dispatch(loadInterventionsWeeks({ weeksIntervetions, weeksInterventionsCounts }));\n        }\n\n    }\n}\n\nconst loadInterventionsWeeks = (data) => ({\n    type: types.statisticsLoadInterventionsWeeks,\n    payload: data\n});\n\n\nconst startLoadTotalTimeByWeek = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('statistics/totaltimebyweek', undefined, 'GET');\n        const { totalTimeWeeks } = await resp.json();\n\n        const weeksTime = [];\n        const weeksTotalTime = [];\n\n        if (totalTimeWeeks) {\n            for (const timeWeek of totalTimeWeeks) {\n                weeksTime.push(timeWeek.week);\n                weeksTotalTime.push(timeWeek.totalMins / 60);\n            }\n            dispatch(loadTotalTimeByWeek({ weeksTime, weeksTotalTime }));\n        }\n\n    }\n}\n\nconst loadTotalTimeByWeek = (data) => ({\n    type: types.statisticsLoadTotalTimeByWeek,\n    payload: data\n});\n\n\nexport const statisticsClear = () => ({\n    type: types.statisticsClear\n});\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal,\n});\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal,\n});\n\nexport const uiToggleAlerts = () => ({\n    type: types.uiToggleAlerts,\n});\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../actions/auth';\nimport { clearEvents } from '../../actions/calendar';\nimport { clearFactory } from '../../actions/factory';\nimport { clearTechnicians } from '../../actions/technician';\nimport { clearWarehouse } from '../../actions/warehouse';\nimport { clearWarnings } from '../../actions/warnings';\nimport { useHistory } from 'react-router';\nimport { statisticsClear } from '../../actions/statistics';\nimport { uiToggleAlerts } from '../../actions/ui';\nimport ClickAwayListener from 'react-click-away-listener';\n\nexport const TopBar = () => {\n\n    const { name } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { modalAlert } = useSelector(state => state.ui);\n    const { itemsToOrder } = useSelector(state => state.warehouse);\n\n    const handleLogout = () => {\n        dispatch(clearEvents());\n        dispatch(clearFactory());\n        dispatch(clearTechnicians());\n        dispatch(clearWarnings());\n        dispatch(clearWarehouse());\n        dispatch(clearTechnicians());\n        dispatch(statisticsClear());\n        dispatch(logout());\n        localStorage.removeItem('token');\n        localStorage.removeItem('token-init-date');\n    }\n\n    const handleLogoClick = () => {\n        history.push('/');\n    }\n\n    const handleToggleAlerts = (e) => {\n\n        if (modalAlert) {\n            if (e.target.className === 'bell-alert' && !e.nativeEvent) {\n                return;\n            }\n        }\n        if (!modalAlert) {\n            if (e.target.className !== 'bell-alert' && !e.nativeEvent) {\n                return;\n            }\n        }\n        if (!modalAlert) {\n            if (e.target.className === 'bell-alert' && !e.nativeEvent) {\n                return;\n            }\n        }\n        dispatch(uiToggleAlerts());\n    }\n\n    return (\n        <div className=\"topbar-wrapper\">\n            {/* <h2 className=\"logo-topbar\">M-tile</h2> */}\n\n            <img src={`${process.env.PUBLIC_URL}/assets/images/m_tile_topbar.png`} alt=\"logo_mtile\" onClick={handleLogoClick} />\n            {/* <img src={`${process.env.PUBLIC_URL}/assets/images/m_tile_white.png`} alt=\"logo_mtile\" /> */}\n\n            <div className=\"topbar-user-options\">\n\n                <span className=\"user\">{name}</span>\n\n                <div className=\"wrapper-bell-alert\">\n                    <img className=\"bell-alert\" src={`${process.env.PUBLIC_URL}/assets/images/bell.png`}\n                        alt=\"logo_bell\"\n                        onClick={handleToggleAlerts} />\n\n                    {\n                        itemsToOrder && itemsToOrder.length > 0 &&\n                        <div className=\"circle-alert\">!</div>\n                    }\n\n                    {\n\n                        <ClickAwayListener onClickAway={handleToggleAlerts}>\n                            <div className={`wrapper-alerts ${modalAlert ? 'extend-alerts' : ''}`}>\n                                {\n                                    itemsToOrder && itemsToOrder.length > 0\n\n                                        ? itemsToOrder.map(item => {\n                                            return (\n                                                modalAlert\n                                                && <div key={item.id} className=\"alert-text animate__animated animate__fadeIn\">\n                                                    <span className=\"bold-orange\">{item.quantity <= 0 ? \"Producto agotado\" : \"Producto casi agotado\"}</span>\n                                                    <span>\n                                                        <span className=\"bold\">Item:</span>\n                                                        {item.description}\n                                                    </span>\n                                                    <span>\n                                                        <span className=\"bold\">Referencia:</span>\n                                                        {item.code}\n                                                    </span>\n                                                </div>\n                                            );\n                                        })\n                                        : modalAlert\n                                        && <div className=\"alert-text-default\">\n                                            <span className=\"no-alert-text animate__animated animate__fadeIn\">No hay alertas</span>\n                                        </div>\n\n                                }\n                            </div>\n                        </ClickAwayListener>\n                    }\n\n                </div>\n\n                <i onClick={handleLogout} className=\"fas fa-sign-out-alt\"></i>\n            </div>\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { toggleResponsive } from '../../actions/nav';\n\nexport const ResponsiveNav = () => {\n\n    const { admin } = useSelector(state => state.auth);\n    const { showResponsive } = useSelector(state => state.nav);\n    const dispatch = useDispatch();\n\n    const showResponsiveNav = () => {\n        dispatch(toggleResponsive());\n    }\n\n    return (\n        <div className=\"responsive-nav-main-container\">\n\n            <div className={`burger ${showResponsive ? 'hide-burger' : ''}`} onClick={showResponsiveNav}>\n                <div className={`line ${showResponsive ? 'rotate-line-1' : ''}`}></div>\n                <div className={`line ${showResponsive ? 'hide-line' : ''}`}></div>\n                <div className={`line ${showResponsive ? 'rotate-line-2' : ''}`}></div>\n            </div>\n\n            <div className={`responsive-nav-main-wrapper ${showResponsive ? 'show-responsive' : ''}`}>\n                <div className=\"responsive-nav-wrapper\">\n                    <NavLink\n                        exact to=\"/\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"fas fa-home\"></i><span >Dashboard</span>\n                    </NavLink>\n\n                    {\n                        admin &&\n                        <NavLink\n                            to=\"/admin\"\n                            activeClassName=\"active-link\"\n                            className={`${showResponsive ? 'show-link' : ''}`}>\n                            <i className=\"fas fa-user-shield\"></i><span >Administrador</span>\n                        </NavLink>\n                    }\n\n                    <NavLink\n                        to=\"/neworder\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"far fa-plus-square\"></i><span >Nueva orden</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/crew\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"fas fa-users\"></i><span >Técnicos</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/calendar\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"far fa-calendar-alt\"></i><span >Calendario</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/docs\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"far fa-file\"></i><span >Documentación</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/warehouse\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"fas fa-boxes\"></i><span >Almacén</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/statistics\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"far fa-chart-bar\"></i><span >Estadísticas</span>\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/history\"\n                        activeClassName=\"active-link\"\n                        className={`${showResponsive ? 'show-link' : ''}`}>\n                        <i className=\"fas fa-history\"></i><span >Histórico</span>\n                    </NavLink>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n","export const disableScroll = () => {\n    // Get the current page scroll position \n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\n    // if any scroll is attempted, \n    // set this to the previous value \n    window.onscroll = () => window.scrollTo(scrollLeft, scrollTop);\n}\n\nexport const enableScroll = () => {\n    window.onscroll = function () { };\n}","export const getOrderById = (id, events) => {\n\n    if (!id || id.length < 1 || !events || events.length < 1 || events === 'undefined') {\n        return;\n    }\n\n    return events.find(event => event.id.toString() === id.toString());\n\n}","export const getNameOrderType = (id, types) => {\n\n    return types.find(type => id === type.id);\n\n}\n\nexport const getNameBreakdown = (id, breakdowns) => {\n\n    return breakdowns.find(type => id === type.id);\n\n}\n\nexport const getNameFactory = (id, factories) => {\n\n    return factories.find(factory => id === factory.id);\n\n}\n\nexport const getNameSection = (id, sections) => {\n\n    return sections.find(section => id === section.id);\n\n}\n\nexport const getNameNumber = (id, numbers) => {\n\n    return numbers.find(number => id === number.id);\n\n}\n\nexport const getNameMachine = (id, machines) => {\n\n    return machines.find(machine => id === machine.id);\n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { uiCloseModal } from '../../actions/ui';\n\nimport { clearActiveEvent } from '../../actions/calendar';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst initialState = {\n    id: '',\n    factory: '',\n    section: '',\n    machine: '',\n    technician: '',\n    breakdown: '',\n    description: '',\n    start: '',\n    end: ''\n}\n\nexport const CalendarModal = ({ setTableModal }) => {\n\n    const { factories } = useSelector(state => state.factory);\n    const { sections } = useSelector(state => state.factory);\n    const { machines } = useSelector(state => state.factory);\n    const { numbers } = useSelector(state => state.factory);\n    const { types } = useSelector(state => state.calendar);\n    const { breakdowns } = useSelector(state => state.calendar);\n    const { technicians } = useSelector(state => state.crew);\n    const { modalOpen } = useSelector(state => state.ui);\n\n\n    const [formValues, setFormValues] = useState(initialState);\n\n    const { activeEvent } = useSelector(state => state.calendar);\n    const { id,\n        breakdown,\n        description,\n        section,\n        factory,\n        machine,\n        start,\n        end,\n        technician,\n        number,\n        orderType,\n        totalMins\n    } = formValues;\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent);\n        }\n    }, [activeEvent]);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n\n    const showOrderDetail = () => {\n\n        const modal = document.querySelector('.modal-calendar')\n        modal.classList.remove('animate__fadeIn');\n        modal.classList.add('animate__fadeOut');\n\n        enableScroll();\n        dispatch(uiCloseModal());\n        const path = `/order`;\n        history.push(path);\n\n    }\n\n    const handleCloseModal = () => {\n\n        enableScroll();\n        dispatch(uiCloseModal());\n        dispatch(clearActiveEvent());\n\n        if (setTableModal) {\n            setTableModal(false);\n        }\n    }\n\n    return (\n        <>\n            <Modal\n                isOpen={modalOpen}\n                className='modal-calendar animate__animated animate__fadeIn animate__faster'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n                <div className=\"frame\">\n                    <h1 className=\"h1-modal\">Orden de trabajo</h1>\n\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <div className=\"modal-event-form\">\n\n                        <div className=\"event-input-wrapper-1\">\n                            <div className=\"event-input-1\">\n                                <label>N.º Orden: </label>\n                                <input type='text' name=\"id\" disabled value={id} />\n                            </div>\n\n                            <div className=\"event-input-2\">\n\n                                <label>Tipo orden: </label>\n                                <select name=\"orderType\" value={orderType} disabled>\n                                    <option value=\"default\" disabled>Elige Tipo</option>\n                                    {types.length > 0\n                                        && types.map(type =>\n                                            <option key={type.id} value={type.id}>{type.name}</option>)}\n                                </select>\n\n                            </div>\n                        </div>\n\n                        <div className=\"event-input-wrapper-1\">\n                            <div className=\"event-input-1\">\n                                <label>Factoría: </label>\n                                <select\n                                    name=\"factory\"\n                                    value={factory}\n                                    disabled>\n                                    <option value=\"default\" disabled>Factoría</option>\n                                    {factories.map(factory =>\n                                        <option key={factory.id} value={factory.id}>{factory.name}</option>)}\n                                </select>\n                            </div>\n\n                            <div className=\"event-input-2\">\n                                <label>Sección:</label>\n                                <select\n                                    name=\"section\"\n                                    value={section}\n                                    disabled\n                                >\n                                    <option value=\"default\" disabled>Elige</option>\n                                    {sections.length > 0\n                                        && sections.map(section =>\n                                            <option key={section.id} value={section.id}>{section.name}</option>)}\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"event-input-wrapper-1\">\n\n                            <div className=\"event-input-1\">\n\n                                <label>Máquina:</label>\n                                <select\n                                    name=\"machine\"\n                                    value={machine}\n                                    disabled\n                                >\n\n                                    <option value=\"default\" disabled>Elige Máquina</option>\n                                    {machines.length > 0\n                                        && machines.map(machine =>\n                                            <option key={machine.id} value={machine.id}>{machine.name}</option>)}\n                                </select>\n\n                            </div>\n\n                            <div className=\"event-input-2\">\n                                <label>Número: </label>\n                                <select\n                                    name=\"number\"\n                                    value={number}\n                                    disabled\n                                >\n                                    <option value=\"default\" disabled>Elige Sección</option>\n                                    {numbers.length > 0\n                                        && numbers.map(number =>\n                                            <option key={number.id} value={number.id}>{number.number}</option>)}\n                                </select>\n\n                            </div>\n                        </div>\n\n                        <div className=\"event-input-wrapper-1\">\n                            <div className=\"event-input-1\">\n                                <label>Técnico: </label>\n                                <select\n                                    name=\"technician\"\n                                    value={technician}\n                                    disabled\n                                >\n                                    <option value=\"default\" disabled>Elige Técnico</option>\n                                    {technicians.length > 0\n                                        && technicians.map(technician =>\n                                            <option key={technician.id} value={technician.id}>{technician.name}</option>)}\n                                </select>\n\n                            </div>\n\n                            <div className=\"event-input-2\">\n                                <label>Tipo avería: </label>\n                                <select\n                                    name=\"breakdown\"\n                                    value={breakdown}\n                                    disabled\n                                >\n                                    <option value=\"default\" disabled>Elige Avería</option>\n                                    {breakdowns.length > 0\n                                        && breakdowns.map(breakdown =>\n                                            <option key={breakdown.id} value={breakdown.id}>{breakdown.name}</option>)}\n                                </select>\n\n                            </div>\n                        </div>\n\n                        <div className=\"event-input-wrapper-1\">\n                            <div className=\"event-input-1\">\n                                <label>F. Inicio:</label>\n                                <DatePicker\n                                    selected={start}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    showTimeInput\n                                    name=\"start\"\n                                    disabled />\n                            </div>\n                            <div className=\"event-input-2\">\n                                <label>F. Fin:</label>\n                                <DatePicker\n                                    selected={end}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    showTimeInput\n                                    name=\"end\" />\n                            </div>\n                        </div>\n\n                        <div className=\"event-input-wrapper-3\">\n                            <label>Descripción:</label>\n                            <textarea name=\"description\" disabled value={description} ></textarea>\n                        </div>\n\n                        <div className=\"event-input-wrapper-single\">\n                            <div className=\"event-input\">\n                                <label>Total tiempo de trabajo:</label>\n                                <div className=\"totalmins-wrapper\">\n                                    <input type=\"text\" name=\"totalMins\" disabled value={totalMins} />\n                                    <span>mins.</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"event-button-wrapper\">\n                            <button className=\"btn btn-detail\" onClick={showOrderDetail}>Ver orden</button>\n                        </div>\n\n                    </div>\n                </div>\n            </Modal>\n        </>\n    )\n}\n","import moment from 'moment';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTable, useSortBy } from 'react-table';\nimport { setActiveEvent } from '../../actions/calendar';\nimport { uiOpenModal } from '../../actions/ui';\nimport { disableScroll } from '../../helpers/disable-enable-scroll';\nimport { getOrderById } from '../../helpers/getOrderById';\nimport { getNameBreakdown, getNameOrderType, } from '../../helpers/helpersHistorical';\nimport { CalendarModal } from '../calendar/CalendarModal';\n\n\nexport const TableDashboard = ({ columns, data }) => {\n\n    const { events } = useSelector(state => state.calendar);\n    const { types } = useSelector(state => state.calendar);\n    const { breakdowns } = useSelector(state => state.calendar);\n    const { factories } = useSelector(state => state.factory);\n    const { sections } = useSelector(state => state.factory);\n    const { numbers } = useSelector(state => state.factory);\n    const { machines } = useSelector(state => state.factory);\n\n    const [tableModal, setTableModal] = useState(false);\n    const dispatch = useDispatch();\n\n    const tableInstance = useTable({ columns, data }, useSortBy);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        rows,\n    } = tableInstance;\n\n\n    // Get the data-id attribute from the <td> and search the order in the store\n    const handleRowClick = ({ target }) => {\n        const orderId = target.attributes[0].nodeValue;\n\n        if (!orderId || orderId === 'undefined' || orderId === 'cell' || !events || events.length < 1 || events === undefined) {\n            return;\n        }\n        const order = getOrderById(orderId, events);\n\n        setTableModal(true);\n        dispatch(setActiveEvent(order));\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    return (\n        <div className=\"table-wrapper\">\n\n            {tableModal && <CalendarModal setTableModal={setTableModal} />}\n\n            <table {...getTableProps()} >\n                <thead>\n                    {// Loop over the header rows\n                        headerGroups.map(headerGroup => (\n                            // Apply the header row props\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {// Loop over the headers in each row\n                                    headerGroup.headers.map(column => (\n                                        // Apply the header cell props\n                                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                            {// Render the header\n                                                column.render('Header')}\n                                        </th>\n                                    ))}\n                            </tr>\n                        ))}\n                </thead>\n                {/* Apply the table body props */}\n\n                {\n                    types && breakdowns && factories && sections && numbers && machines\n\n                    &&\n                    <tbody {...getTableBodyProps()}>\n                        {// Loop over the table rows\n                            rows.map(row => {\n                                // Prepare the row for display\n                                prepareRow(row)\n                                return (\n                                    // Apply the row props\n                                    <tr {...row.getRowProps()} onClick={handleRowClick}>\n                                        {// Loop over the rows cells\n                                            row.cells.map((cell, i) => {\n\n                                                // each case will call their own method to parse the data \n                                                // from an ID to the name property\n\n                                                switch (cell.column.id) {\n\n                                                    case 'start':\n                                                        return <td key={i} data-id={cell.row.original.id}>{moment(cell.value).format(\"DD-MM-YYYY HH:mm\").toString()}</td>;\n\n                                                    case 'orderType':\n                                                        const orderType = getNameOrderType(cell.value, types)?.name;\n                                                        return <td key={i} data-id={cell.row.original.id}>{orderType}</td>;\n\n                                                    case 'breakdown':\n                                                        const breakdownType = getNameBreakdown(cell.value, breakdowns)?.name;\n                                                        return <td key={i} data-id={cell.row.original.id}>{breakdownType}</td>;\n\n                                                    case 'description':\n                                                        return <td key={i} data-id={cell.row.original.id}>\n                                                            {cell.value}\n                                                        </td>;\n\n                                                    default:\n                                                        // Apply the cell props\n                                                        return (\n                                                            <td {...cell.getCellProps()}>\n                                                                {// Render the cell contents\n                                                                    cell.render('Cell')}\n                                                            </td>\n                                                        )\n                                                }\n\n                                            })}\n                                    </tr>\n                                )\n                            })}\n                    </tbody>\n                }\n            </table>\n        </div>\n    )\n}\n","export const getColumnsTableWarehouse =\n    [\n        {\n            Header: 'Código',\n            accessor: 'code', // accessor is the \"key\" in the data\n        },\n        {\n            Header: 'Descripción',\n            accessor: 'description',\n        },\n        {\n            Header: 'Cantidad',\n            accessor: 'quantity',\n        },\n        {\n            Header: 'Stock Mínimo',\n            accessor: 'minStock',\n        },\n        {\n            Header: 'Ubicación',\n            accessor: 'place',\n        },\n    ];\n\nexport const getColumnsTableHistorical =\n    [\n        {\n            Header: 'Fecha Inicio',\n            accessor: 'start', // accessor is the \"key\" in the data\n        },\n        {\n            Header: 'Tipo Orden',\n            accessor: 'orderType',\n        },\n        {\n            Header: 'Avería',\n            accessor: 'breakdown',\n        },\n        {\n            Header: 'Factoría',\n            accessor: 'factory',\n        },\n        {\n            Header: 'Sección',\n            accessor: 'section',\n        },\n        {\n            Header: 'Número',\n            accessor: 'number',\n        },\n        {\n            Header: 'Máquina',\n            accessor: 'machine',\n        },\n        {\n            Header: 'Tiempo Trabajo',\n            accessor: 'totalMins',\n        },\n        {\n            Header: 'Estado',\n            accessor: 'closed',\n        },\n    ];\n\nexport const getColumnsTableDashboard =\n    [\n        {\n            Header: 'Fecha Inicio',\n            accessor: 'start', // accessor is the \"key\" in the data\n        },\n        {\n            Header: 'Tipo Orden',\n            accessor: 'orderType',\n        },\n        {\n            Header: 'Avería',\n            accessor: 'breakdown',\n        },\n        {\n            Header: 'Descripción',\n            accessor: 'description',\n        },\n    ];\n","\n// This component needs a function, and ID or Name to show in, and a message\n\nexport const ModalToastify = ({ closeToast, handleDeleteItem, code, message }) => {\n\n    return (\n        <div className=\"toast-wrapper-container\">\n            <p>{message} <b>{code}</b>?</p>\n            <div className=\"toast-wrapper-buttons\">\n                <span onClick={closeToast} className=\"btn btn-cancel-toast\">Cancelar</span>\n                <span onClick={(e) => { e.stopPropagation(); closeToast(); handleDeleteItem(); }} className=\"btn btn-agree-toast\">Aceptar</span>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { startAddWarning } from '../../actions/warnings';\n\nconst initialState = { description: '' };\n\nexport const ModalWarning = ({ setShowWarningModal }) => {\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n\n    const [formValues, setFormValues] = useState(initialState);\n    const { description } = formValues;\n\n    const handleCloseModal = () => {\n        dispatch(uiCloseModal());\n        setShowWarningModal(false);\n        setFormValues(initialState);\n        enableScroll();\n    }\n\n    // Check inputs and dispatch Update or New, depends on activeItem\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let isValid = true;\n\n        if (description.trim().length < 10) {\n            isValid = false;\n            document.querySelector('input[name=\"description\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"description\"]').classList.remove('border-red');\n        }\n\n\n        if (!isValid) {\n            return toast.error('Debes introducir al menos 10 caracteres', {\n                position: toast.POSITION.TOP_CENTER\n            });\n        }\n\n        dispatch(startAddWarning(formValues));\n        handleCloseModal();\n    }\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    return (\n        <div>\n\n            <Modal\n                isOpen={modalOpen}\n                className='modal-warning animate__animated animate__fadeIn animate__fast'\n                onRequestClose={handleCloseModal}\n                contentLabel='Warning Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n\n                <div className=\"frame\">\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <h1 className=\"h1-modal\">Generar Aviso</h1>\n\n                    <form onSubmit={handleSubmit}>\n\n                        <div className=\"grid-warning\">\n                            <label>Aviso:</label>\n                            <input\n                                type=\"text\"\n                                name=\"description\"\n                                value={description}\n                                onChange={handleInputChange}\n                                autoComplete=\"off\"\n                            />\n                        </div>\n\n                        <div className=\"warning-button-wrapper\">\n                            <button className=\"btn btn-detail\">Guardar</button>\n                        </div>\n\n                    </form>\n                </div>\n\n                {modalOpen && <ToastContainer />}\n            </Modal>\n            {!modalOpen && <ToastContainer />}\n        </div>\n    )\n}\n\n\n\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { TableDashboard } from '../components/dashboard/TableDashboard'\nimport { getColumnsTableDashboard } from '../helpers/getColumnsTables';\nimport { getOrdersStillOpen } from '../helpers/getOrdersStillOpen';\nimport Chart from \"react-apexcharts\";\nimport { useDispatch } from 'react-redux';\nimport { startDeleteWarning, startLoadWarnings } from '../actions/warnings';\nimport { ModalToastify } from '../components/ui/ModalToastify';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ModalWarning } from '../components/dashboard/ModalWarning';\nimport { uiOpenModal } from '../actions/ui';\nimport { disableScroll } from '../helpers/disable-enable-scroll';\nimport { Link } from 'react-router-dom';\n\nexport const DashboardScreen = () => {\n\n    const dispatch = useDispatch();\n    const { warnings } = useSelector(state => state.warning);\n    const [showWarningModal, setShowWarningModal] = useState(false);\n    const [showLabels, setShowLabels] = useState(true);\n\n\n    useEffect(() => {\n        dispatch(startLoadWarnings());\n    }, [dispatch]);\n\n    useEffect(() => {\n        const width = window.innerWidth;\n\n        if (width<500) {\n            setShowLabels(false);\n        }\n    }, []);\n\n    const columns = getColumnsTableDashboard;\n    const { events } = useSelector(state => state.calendar);\n    const ordersStillOpen = getOrdersStillOpen(events);\n\n    const { weeks, threeWeekSections, lastWeekByOrderType } = useSelector(state => state.statistics);\n\n\n    const handleAddWarning = () => {\n        setShowWarningModal(true);\n        disableScroll();\n        dispatch(uiOpenModal());\n    };\n\n    const showDeleteWarning = (id, i) => {\n\n        toast.warn(<ModalToastify\n            handleDeleteItem={() => handleDeleteWarning(id)}\n            code={warnings[i].description}\n            message=\"Estás seguro de borrar el aviso \" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n\n    }\n    const handleDeleteWarning = (id) => {\n        dispatch(startDeleteWarning(id));\n    };\n\n    const optionsDonut = {\n        labels: lastWeekByOrderType.names,\n        chart: {\n            toolbar: {\n                show: true,\n                offsetX: 0,\n                offsetY: 0,\n            }\n        },\n        legend: {\n            show: showLabels\n        }\n    };\n\n    const optionsBar = {\n        chart: {\n            type: 'bar',\n            height: 350\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '55%',\n                endingShape: 'rounded'\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent']\n        },\n        xaxis: {\n            categories: weeks,\n            title: {\n                text: 'Semana'\n            }\n        },\n        yaxis: {\n            title: {\n                text: 'Intervenciones'\n            }\n        },\n        fill: {\n            opacity: 1\n        },\n        tooltip: {\n            y: {\n                formatter: function (val) {\n                    return val + \" intervenciones\"\n                }\n            }\n        },\n        legend: {\n            show: showLabels,\n            position: \"bottom\",\n            containerMargin: {\n                top: 30\n            }\n        },\n        responsive: [\n            {\n                breakpoint: 500,\n                options: {\n                    legend: {\n                        fontSize: \"8px\"\n                    }\n                }\n            }\n        ]\n    };\n\n    return (\n        <div className='animate__animated animate__fadeIn dashboard-screen'>\n            <h1>DashBoard</h1>\n\n            <div className='main-content_dashboard'>\n\n                <div className=\"charts\">\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Intervenciones por sección/semana</h3>\n                        {\n                            threeWeekSections.length > 0 && weeks.length > 0 &&\n                            < Chart\n                                options={optionsBar}\n                                series={threeWeekSections}\n                                type=\"bar\"\n                                width=\"100%\"\n                            />\n                        }\n                    </div>\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Intervenciones semana previa</h3>\n\n                        {\n                            lastWeekByOrderType && lastWeekByOrderType?.quantities?.length > 0 && lastWeekByOrderType?.names?.length > 0 &&\n\n                            <Chart\n                                className=\"chart-pie\"\n                                options={optionsDonut}\n                                series={lastWeekByOrderType.quantities}\n                                type=\"donut\"\n                                width=\"100%\"\n                            />\n                        }\n                    </div>\n\n                </div>\n\n                <div className=\"events-alerts-wrapper\">\n                    <div className=\"lasts-events-wrapper\">\n                        <div className=\"header-warnings\">\n                            <h3 className=\"h3-dashboard\">\n                                Eventos activos\n                            </h3>\n                            <Link to=\"/neworder\"><i className=\"fas fa-plus-circle\"></i></Link>\n                        </div>\n\n                        <div className=\"lasts-events\">\n                            {ordersStillOpen.length > 0 && <TableDashboard columns={columns} data={ordersStillOpen} />}\n                        </div>\n                    </div>\n\n                    <div className=\"lasts-alerts-wrapper\">\n                        <div className=\"header-warnings\">\n                            <h3 className=\"h3-dashboard\">\n                                Avisos\n                            </h3>\n                            <i className=\"fas fa-plus-circle\" onClick={handleAddWarning}></i>\n                        </div>\n\n                        <div className=\"alerts-wrapper\">\n\n                            {warnings &&\n\n                                warnings.map((warning, i) => {\n\n                                    return <div key={warning.id} className=\"warnings\">\n                                        <div className=\"warning\">\n                                            <p>{warning.description}</p>\n                                            <i className=\"far fa-trash-alt\" onClick={() => showDeleteWarning(warning.id, i)}></i>\n                                        </div>\n                                    </div>\n\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n\n                {showWarningModal && <ModalWarning setShowWarningModal={setShowWarningModal} />}\n\n                <ToastContainer />\n            </div>\n        </div>\n    )\n}\n","export const getOrdersStillOpen = (orders) => {\n\n    if (!orders || orders.length < 1 || orders === 'undefined') {\n        return [];\n    }\n\n    return orders.filter(order => !order.closed);\n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport validator from 'validator';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Switch from \"react-switch\";\nimport { fetchWithToken } from '../../helpers/fetch';\nimport { startUpdateUser } from '../../actions/auth';\nimport { ToastSuccess } from '../ui/ToastSuccess';\nimport { ToastError } from '../ui/ToastError';\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n    admin: false\n}\n\nexport const AdminModal = ({ idUser, setIdUser, users, setUsers }) => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n\n    const [formValues, setFormValues] = useState(initialState);\n    const [show, setShow] = useState(false);\n    const { name, email, password, admin } = formValues;\n\n    useEffect(() => {\n\n        async function getUser() {\n            if (!idUser) {\n                return;\n            }\n            const resp = await fetchWithToken(`users/${idUser}`, undefined, 'GET');\n            const { user } = await resp.json();\n\n            if (user) {\n                setFormValues({ ...formValues, ...user });\n                setShow(true);\n            }\n        }\n        getUser();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n\n\n    const handleInputSwitch = () => {\n        setFormValues({\n            ...formValues,\n            admin: !admin\n        });\n    }\n\n    // Update form values on type\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    // Check form values and Update or Create technician\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let isValid = true;\n        let message = '';\n\n        if (!validator.isEmail(email)) {\n            document.querySelector('.email-modal').classList.add('border-red');\n            isValid = false;\n            message += 'El email debe de ser un email válido. \\n';\n        } else {\n            document.querySelector('.email-modal').classList.remove('border-red');\n        }\n\n        if (name.trim().length < 4) {\n            document.querySelector('.name-modal').classList.add('border-red');\n            isValid = false;\n            message += 'El nombre debe de tener al menos 4 caracteres. \\n';\n        } else {\n            document.querySelector('.name-modal').classList.remove('border-red');\n        }\n\n        if (password.trim().length < 6) {\n            document.querySelector('.password-modal').classList.add('border-red');\n            isValid = false;\n            message += 'La password debe de tener al menos 4 caracteres. \\n';\n        } else {\n            document.querySelector('.password-modal').classList.remove('border-red');\n        }\n\n        if (!isValid) {\n            return toast.error(message, { position: toast.POSITION.TOP_CENTER });\n        }\n\n        const resp = await dispatch(startUpdateUser({ ...formValues, id: idUser }));\n\n        if (resp.ok) {\n            toast.success(<ToastSuccess text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n            const newUsers = users.map(user => user.id === resp.user.id ? resp.user : user)\n            setUsers([...newUsers]);\n        } else {\n            toast.error(<ToastError text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n        }\n\n        handleCloseModal();\n\n    }\n\n    const handleCloseModal = () => {\n        enableScroll();\n        setFormValues(initialState);\n        setIdUser(null);\n\n        setTimeout(() => {\n            dispatch(uiCloseModal());\n        }, 200);\n    }\n\n    return (\n        <div>\n            <Modal\n                isOpen={modalOpen}\n                className='admin-modal animate__animated animate__fadeIn animate__faster'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n                <div className=\"frame\">\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <h1 className=\"h1-modal\">Editar Usuario</h1>\n\n                    {\n                        show === true &&\n                        <form className=\"form-main-wrapper\" onSubmit={handleSubmit}>\n\n                            <div className=\"grid-items2\">\n                                <label>Admin: </label>\n                                <Switch\n                                    onChange={handleInputSwitch}\n                                    checked={admin}\n                                    onColor=\"#ffa600\"\n                                    height={14}\n                                    width={30} />\n                            </div>\n\n                            <div className=\"grid-items\">\n                                <label>Email: </label>\n                                <input\n                                    className=\"email-modal\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    autoComplete=\"off\"\n                                    value={email}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Email\" />\n                            </div>\n\n                            <div className=\"grid-items\">\n                                <label>Nombre: </label>\n                                <input\n                                    className=\"name-modal\"\n                                    type=\"text\"\n                                    name=\"name\"\n                                    autoComplete=\"off\"\n                                    value={name}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Nombre\" />\n                            </div>\n\n                            <div className=\"grid-items\">\n                                <label>Password: </label>\n                                <input\n                                    className=\"password-modal\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    autoComplete=\"off\"\n                                    value={password}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Password\" />\n                            </div>\n\n                            <div className=\"wrapper-button\">\n                                <button className=\"btn btn-order\" type=\"submit\">Crear</button>\n                            </div>\n\n                        </form>\n                    }\n\n\n                </div>\n                {modalOpen && <ToastContainer />}\n            </Modal>\n\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchWithToken } from '../helpers/fetch';\nimport validator from 'validator';\nimport Switch from \"react-switch\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ModalToastify } from '../components/ui/ModalToastify';\nimport { AdminModal } from '../components/admin/AdminModal';\nimport { uiOpenModal } from '../actions/ui';\nimport { disableScroll } from '../helpers/disable-enable-scroll';\nimport { startDeleteOrderEvent } from '../actions/calendar';\nimport { ToastSuccess } from '../components/ui/ToastSuccess';\nimport { ToastError } from '../components/ui/ToastError';\nimport { startAddUser, startDeleteUser } from '../actions/auth';\n\nexport const AdminScreen = () => {\n\n    const [formValuesUser, setFormValuesUser] = useState({ email: '', name: '', password: '' });\n    const { email, name, password } = formValuesUser;\n\n    const [formValuesOrder, setFormValuesOrder] = useState({ orderId: '' });\n    const { orderId } = formValuesOrder;\n\n    const [users, setUsers] = useState([]);\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [idUser, setIdUser] = useState(null);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        async function loadUsers() {\n            const resp = await fetchWithToken('users/', undefined, 'GET');\n            const { users } = await resp.json();\n            if (users) {\n                setUsers([...users]);\n            }\n        }\n        loadUsers();\n    }, [])\n\n\n    const handleInputChangeUser = ({ target }) => {\n        const name = target.name;\n        document.querySelector(`input[name=\"${name}\"]`).classList.remove('border-red');\n\n        setFormValuesUser({\n            ...formValuesUser,\n            [target.name]: target.value\n        });\n    }\n\n    const handleInputSwitch = () => {\n        setIsAdmin(!isAdmin)\n    }\n\n    // Will call tostify first to confirm the option the user will choose. Cancel or Deny.\n    const handleStartDeleteUser = (id, name, active) => {\n        const message = active ? \"Estás seguro de deshabilitar el usuario\" : \"Estás seguro de habilitar el usuario\";\n\n        toast.warn(<ModalToastify\n            handleDeleteItem={() => handleDeleteUser(id)}\n            code={name}\n            message={message} />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    const handleDeleteUser = async (id) => {\n        const resp = await dispatch(startDeleteUser(id));\n\n        if (resp?.ok) {\n            setUsers(users.map(user => user.id === resp.user.id ? resp.user : user));\n            toast.success(<ToastSuccess text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n        } else {\n            toast.error(<ToastError text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n        }\n    }\n\n    const handleUpdateUser = (id) => {\n        setIdUser(id);\n        disableScroll();\n        dispatch(uiOpenModal());\n    }\n\n    const handleSubmitUser = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let isValid = true;\n        let message = '';\n\n        if (!validator.isEmail(email)) {\n            document.querySelector('input[name=\"email\"]').classList.add('border-red');\n            isValid = false;\n            message += 'El email debe de ser un email válido. \\n';\n        } else {\n            document.querySelector('input[name=\"email\"]').classList.remove('border-red');\n        }\n\n        if (name.trim().length < 4) {\n            document.querySelector('input[name=\"name\"]').classList.add('border-red');\n            isValid = false;\n            message += 'El nombre debe de tener al menos 4 caracteres. \\n';\n        } else {\n            document.querySelector('input[name=\"name\"]').classList.remove('border-red');\n        }\n\n        if (password.trim().length < 6) {\n            document.querySelector('input[name=\"password\"]').classList.add('border-red');\n            isValid = false;\n            message += 'La password debe de tener al menos 4 caracteres. \\n';\n        } else {\n            document.querySelector('input[name=\"password\"]').classList.remove('border-red');\n        }\n\n        if (!isValid) {\n            return toast.error(message, { position: toast.POSITION.TOP_CENTER });\n        }\n\n        const resp = await dispatch(startAddUser({ ...formValuesUser, admin: isAdmin }))\n\n        if (resp?.ok) {\n            setUsers([...users, resp.user]);\n            toast.success(<ToastSuccess text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n            setFormValuesUser({ email: '', name: '', password: '' });\n            setIsAdmin(false);\n        } else {\n            const message = resp.msg || 'Error al crear el usuario, inténtelo más tarde';\n            toast.error(<ToastError text={message} />, { position: toast.POSITION.TOP_CENTER });\n        }\n\n    }\n\n    const handleInputChangeOrder = ({ target }) => {\n\n        document.querySelector(`input[name=\"${target.name}\"]`).classList.remove('border-red');\n        setFormValuesOrder({\n            ...formValuesUser,\n            [target.name]: target.value\n        });\n    }\n\n    // Will call tostify first to confirm the option the user will choose. Cancel or Deny.\n    const handleStartDeleteOrder = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (orderId !== '') {\n            toast.warn(<ModalToastify\n                handleDeleteItem={handleSubmitOrder}\n                code={orderId}\n                message=\"Estás seguro de borrar la order con el número\" />,\n                {\n                    position: toast.POSITION.TOP_CENTER,\n                    closeOnClick: false,\n                    autoClose: false,\n                    toastId: '1'\n                });\n        } else {\n            document.querySelector('input[name=\"orderId\"]').classList.add('border-red');\n            return toast.error('Debes indicar el número de orden', { position: toast.POSITION.TOP_CENTER });\n        }\n    }\n\n    const handleSubmitOrder = async () => {\n\n        let isValid = true;\n        let message = '';\n\n        if (!Number.isInteger(Number(orderId)) || orderId.trim().length === 0 || !validator.isNumeric(orderId)) {\n            document.querySelector('input[name=\"orderId\"]').classList.add('border-red');\n            isValid = false;\n            message += 'El id es obligatorio y debe de ser numérico. \\n';\n        } else {\n            document.querySelector('input[name=\"orderId\"]').classList.remove('border-red');\n        }\n\n        if (!isValid) {\n            return toast.error(message, { position: toast.POSITION.TOP_CENTER });\n        }\n\n        const resp = await dispatch(startDeleteOrderEvent(orderId));\n\n        if (resp.ok) {\n            toast.success(<ToastSuccess text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n        } else {\n            toast.error(<ToastError text={resp.msg} />, { position: toast.POSITION.TOP_CENTER });\n        }\n\n        setFormValuesOrder({ orderId: '' });\n\n    }\n\n\n    return (\n        <div className='admin-screen animate__animated animate__fadeIn'>\n            {idUser && <AdminModal\n                setIdUser={setIdUser}\n                idUser={idUser}\n                users={users}\n                setUsers={setUsers} />}\n            <ToastContainer />\n            <h1>Administración</h1>\n\n            <div className=\"users-main-wrapper\">\n\n                <div className=\"wrapper-users-table\">\n                    <h3>Usuarios registrados</h3>\n                    <div className=\"users-header\">\n                        <div>ID</div>\n                        <div>Email</div>\n                        <div>Nombre</div>\n                        <div>Admin</div>\n                        <div>Activo</div>\n                        <div>Opciones</div>\n                    </div>\n\n                    {\n                        users && users.length > 0 &&\n\n                        users.map(user => {\n\n                            return (\n                                <div key={user.id} className=\"users-body\">\n                                    <div>{user.id}</div>\n                                    <div>{user.email}</div>\n                                    <div>{user.name}</div>\n                                    <div>{user.admin ? \"Si\" : \"No\"}</div>\n                                    <div className=\"user-status\">\n                                        {user.active\n                                            ? <i className=\"fas fa-check\"></i>\n                                            : <i className=\"fas fa-times\"></i>\n                                        }\n                                    </div>\n                                    <div className=\"options-user\">\n                                        <i className=\"fas fa-wrench\" onClick={() => { handleUpdateUser(user.id) }}></i>\n\n                                        {user.active\n                                            ? <i className=\"fas fa-user-minus\" onClick={() => { handleStartDeleteUser(user.id, user.name, user.active) }}></i>\n                                            : <i className=\"fas fa-user-plus\" onClick={() => { handleStartDeleteUser(user.id, user.name, user.active) }}></i>\n                                        }\n\n                                    </div>\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n\n                <div className=\"forms-wrapper\" onSubmit={handleSubmitUser}>\n                    <form className=\"form-add-users\">\n                        <h3>Agregar nuevo usuario</h3>\n\n                        <div className=\"main-wrapper-inputs\">\n\n                            <div className=\"wrapper-input\">\n                                <label>Admin: </label>\n                                <Switch\n                                    onChange={handleInputSwitch}\n                                    checked={isAdmin}\n                                    onColor=\"#ffa600\"\n                                    height={20}\n                                    width={42} />\n                            </div>\n\n                            <div className=\"wrapper-input\">\n                                <label>Email: </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={handleInputChangeUser}\n                                    placeholder=\"Email\"\n                                    autoComplete=\"off\"\n                                />\n                            </div>\n\n                            <div className=\"wrapper-input\">\n                                <label>Nombre: </label>\n                                <input\n                                    type=\"name\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={handleInputChangeUser}\n                                    placeholder=\"Nombre\"\n                                    autoComplete=\"off\"\n                                />\n                            </div>\n\n                            <div className=\"wrapper-input\">\n                                <label>Password: </label>\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={handleInputChangeUser}\n                                    placeholder=\"Password\"\n                                    autoComplete=\"off\"\n                                />\n                            </div>\n\n                        </div>\n\n                        <div className=\"main-wrapper-submit\">\n                            <button className=\"btn btn-order\" type=\"submit\">Crear</button>\n                        </div>\n\n                    </form>\n\n                    <form className=\"form-remove-orders\" onSubmit={handleStartDeleteOrder}>\n                        <h3>Eliminar orden</h3>\n\n                        <div className=\"wrapper-input\">\n                            <label>Número Orden: </label>\n                            <input\n                                type=\"text\"\n                                value={orderId}\n                                onChange={handleInputChangeOrder}\n                                placeholder=\"Número\"\n                                autoComplete=\"off\"\n                                name=\"orderId\"\n                            />\n                        </div>\n                        <div className=\"main-wrapper-submit\">\n                            <button className=\"btn btn-order-cancel\" type=\"submit\">Eliminar</button>\n                        </div>\n                    </form>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n","export const getMachinesByNumberId = (id, machines) => {\n\n    if (!id || id.length < 1 || machines.length < 1 || machines === 'undefined') {\n        return false;\n    }\n\n    return machines.filter(machine => id.toString() === machine.numberId.toString());\n\n}\n","export const getSectionsByFactoryId = (id, sections) => {\n\n    if (!id || id.length < 1 || sections.length < 1 || sections === 'undefined') {\n        return false;\n    }\n\n    return sections.filter(section => section.factoryId.toString() === id.toString())\n\n}\n","export const getSectionNumbersBySectionId = (id, numbers) => {\n\n    if (!id || id.length < 1 || numbers.length < 1 || numbers === 'undefined') {\n        return false;\n    }\n\n    return numbers.filter(number => number.sectionId.toString() === id.toString());\n\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport const OperationModalAdd = ({ setShowAddModal, formValues, setFormValues }) => {\n\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n    const [subFormValues, setSubFormValues] = useState({ operation: '', time: '' });\n\n    const { operation, time } = subFormValues;\n    const { operations } = formValues;\n\n    const handleCloseModal = () => {\n        setShowAddModal(false);\n        dispatch(uiCloseModal());\n        enableScroll();\n    }\n\n    const handleInputChange = ({ target }) => {\n        setSubFormValues({\n            ...subFormValues,\n            [target.name]: target.value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let isValid = true;\n        var regexp = /^\\d+(\\.\\d{1,2})?$/;\n\n        if (operation.trim().length <= 2 || operation === '') {\n            isValid = false\n            document.querySelector('input[name=\"operation\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"operation\"]').classList.remove('border-red');\n        }\n\n        if (isNaN(parseInt(time)) || time === '' || !regexp.test(time)) {\n            isValid = false;\n            document.querySelector('input[name=\"time\"]').classList.add('border-red');\n        } else {\n            if (time.indexOf('.') > 0) {\n                const [, splitted] = time.split('.');\n\n                if (splitted === '25' || splitted === '50' || splitted === '75' || splitted === '5') {\n                    document.querySelector('input[name=\"time\"]').classList.remove('border-red');\n                } else {\n                    isValid = false;\n                    document.querySelector('input[name=\"time\"]').classList.add('border-red');\n                }\n            } else {\n                document.querySelector('input[name=\"time\"]').classList.remove('border-red');\n            }\n        }\n\n        if (!isValid) {\n            return toast.error('Revise los campos marcados en rojo, el tiempo debe de ser números positivo enteros o .25, .50, .75', { position: 'top-center' });\n        }\n\n        setFormValues({\n            ...formValues,\n            operations: [...operations, subFormValues]\n        });\n\n        handleCloseModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            closeTimeoutMS={300}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Agregar Operación</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                <form onSubmit={handleSubmit}>\n\n                    <div className=\"grid-date\">\n                        <label>Operación: </label>\n                        <input\n                            value={operation}\n                            type=\"text\"\n                            name=\"operation\"\n                            onChange={handleInputChange}\n                            autoComplete=\"off\"\n                        />\n                    </div>\n\n                    <div className=\"grid-date\">\n                        <label>Tiempo: </label>\n                        <input\n                            value={time}\n                            type=\"number\"\n                            name=\"time\"\n                            min=\"0.25\"\n                            step=\"0.01\"\n                            onChange={handleInputChange}\n                            autoComplete=\"off\"\n                        />\n                    </div>\n\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Guardar</button>\n                    </div>\n                </form>\n\n            </div>\n\n            <ToastContainer />\n\n        </Modal>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport const OperationModalUpdate = ({ index, setIndex, formValues, setFormValues }) => {\n\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n    const [subFormValues, setSubFormValues] = useState({ operation: '', time: '' });\n    // const [isModalOperation, setIsModalOperation] = useState(true);\n    const { operation, time } = subFormValues;\n    const { operations } = formValues;\n\n    useEffect(() => {\n\n        if (index != null && operations.length >= index) {\n            setSubFormValues({ ...operations[index] });\n        }\n\n    }, [index, operations]);\n\n    const handleCloseModal = () => {\n        // setIsModalOperation(false);\n        setIndex(null);\n        dispatch(uiCloseModal());\n        enableScroll();\n    }\n\n    const handleInputChange = ({ target }) => {\n        setSubFormValues({\n            ...subFormValues,\n            [target.name]: target.value\n        });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let isValid = true;\n        var regexp = /^\\d+(\\.\\d{1,2})?$/;\n\n        if (operation.trim().length <= 2 || operation === '') {\n            isValid = false\n            document.querySelector('input[name=\"operation\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"operation\"]').classList.remove('border-red');\n        }\n\n        if (isNaN(parseInt(time)) || time === '' || !regexp.test(time)) {\n            isValid = false;\n            document.querySelector('input[name=\"time\"]').classList.add('border-red');\n        } else {\n            if (time.toString().indexOf('.') > 0) {\n                const [, splitted] = time.split('.');\n\n                if (splitted === '25' || splitted === '50' || splitted === '75' || splitted === '5') {\n                    document.querySelector('input[name=\"time\"]').classList.remove('border-red');\n                } else {\n                    isValid = false;\n                    document.querySelector('input[name=\"time\"]').classList.add('border-red');\n                }\n            } else {\n                document.querySelector('input[name=\"time\"]').classList.remove('border-red');\n            }\n        }\n\n        if (!isValid) {\n            return toast.error('Revise los campos marcados en rojo, el tiempo debe de ser números positivo enteros o .25, .50, .75', { position: 'top-center' });\n        }\n\n        setFormValues({\n            ...formValues,\n            operations: operations.map((operation, i) => i === index ? subFormValues : operation)\n        });\n\n        handleCloseModal();\n    }\n\n\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            closeTimeoutMS={300}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Editar Operación</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                <form onSubmit={handleSubmit}>\n\n                    <div className=\"grid-date\">\n                        <label>Operación: </label>\n                        <input\n                            value={operation}\n                            type=\"text\"\n                            name=\"operation\"\n                            onChange={handleInputChange}\n                            autoComplete=\"off\"\n                        />\n                    </div>\n\n                    <div className=\"grid-date\">\n                        <label>Tiempo: </label>\n                        <input\n                            value={time}\n                            type=\"number\"\n                            name=\"time\"\n                            min=\"0.25\"\n                            step=\"0.01\"\n                            onChange={handleInputChange}\n                            autoComplete=\"off\"\n                        />\n                    </div>\n\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Guardar</button>\n                    </div>\n                </form>\n\n            </div>\n\n            <ToastContainer />\n\n        </Modal>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nimport { disableScroll } from '../../helpers/disable-enable-scroll';\n\nimport { OperationModalAdd } from './OperationModalAdd';\nimport { OperationModalUpdate } from './OperationModalUpdate';\n\nimport { toast } from 'react-toastify';\nimport { ModalToastify } from '../ui/ModalToastify';\n\n\nexport const TabOperations = ({ formValues, setFormValues, disabled }) => {\n\n    const dispatch = useDispatch();\n    const { operations } = formValues;\n    const [showAddModal, setShowAddModal] = useState(false)\n    const [index, setIndex] = useState(null);\n\n    const handleAddOperation = () => {\n        setShowAddModal(true);\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    const handleDelete = (i) => {\n        toast.warn(<ModalToastify\n            handleDeleteItem={() => handleDeleteOperation(i)}\n            code={operations[i].operation}\n            message=\"Estás seguro de borrar la operación \" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    const handleDeleteOperation = (index) => {\n        const newOperations = operations.filter((operation, i) => i !== index && operation)\n\n        setFormValues({\n            ...formValues,\n            operations: newOperations\n        });\n    }\n\n    const handleUpdateOperation = (i) => {\n        setIndex(i);\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    return (\n        <div className=\"tab-table-wrapper\">\n            <div>\n\n                <div className=\"header-tab-table header-tab-table1\">\n\n                    <div>\n                        <p>Tiempo</p>\n                    </div>\n                    <div>\n                        <p>Operaciones</p>\n                    </div>\n                </div>\n\n                {\n                    operations.length > 0\n                    &&\n                    operations.map((operation, i) =>\n                    (\n                        <div className=\"header-tab-body header-tab-body1\" key={i}>\n                            <div>\n                                <p>{operation.time}</p>\n                            </div>\n                            <div>\n                                <p>{operation.operation}</p>\n                            </div>\n                            <div>\n                                {\n                                    !disabled &&\n                                    <>\n                                        <i className=\"far fa-trash-alt\" onClick={() => { handleDelete(i) }}></i>\n                                        <i className=\"far fa-edit\" onClick={() => { handleUpdateOperation(i) }}></i>\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    ))\n                }\n\n                {showAddModal\n                    &&\n                    <OperationModalAdd\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                        setShowAddModal={setShowAddModal}\n                    />}\n\n                {(index >= 0 && !showAddModal)\n                    &&\n                    <OperationModalUpdate\n                        index={index}\n                        setIndex={setIndex}\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                    />}\n\n            </div>\n\n            {\n                !disabled &&\n                <div className=\"button-add-tab-wrapper\" onClick={handleAddOperation}>\n                    <i className=\"fas fa-plus\"></i><span>Agregar Operación</span>\n                </div>\n            }\n\n\n        </div>\n    )\n}\n","export const getTechnicianNameById = (id, technicians) => {\n\n    return technicians.find(technician => technician.id.toString() === id);\n\n}","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport es from 'date-fns/locale/es';\n\nimport moment from \"moment\";\n\nimport { getTechnicianNameById } from '../../helpers/getTechnicianNameById';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\n\nexport const ClockInOutModalAdd = ({ setShowAddModal, formValues, setFormValues }) => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { technicians } = useSelector(state => state.crew);\n\n    const [subFormValues, setSubFormValues] = useState(\n        {\n            userId: '0',\n            start: new Date(),\n            end: moment().add('1', 'hours').toDate()\n        });\n\n    const { userId, start, end } = subFormValues;\n    const { clocks, startWork } = formValues;\n\n    const handleCloseModal = () => {\n        enableScroll();\n        setShowAddModal(false);\n        dispatch(uiCloseModal());\n    }\n\n    // This function only will change user select\n    const handleInputChange = ({ target }) => {\n\n        const id = target.value;\n        const { name } = getTechnicianNameById(id, technicians);\n\n        if (name) {\n            setSubFormValues({\n                ...subFormValues,\n                userId: id,\n                user: name\n            });\n        }\n    }\n\n    // Listen for changes on start clock Date\n    const handleDateStartChange = (e) => {\n        setSubFormValues({\n            ...subFormValues,\n            start: e\n        });\n    }\n\n    // Listen for changes on end clock Date\n    const handleDateEndChange = (e) => {\n        setSubFormValues({\n            ...subFormValues,\n            end: e\n        });\n    }\n\n    // Submit the form. Check values and Dates with momentJS\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let isValid = true;\n\n        if (userId === '' || userId <= 0) {\n            isValid = false;\n            document.querySelector('select[name=\"user\"]').classList.add('border-red');\n        } else {\n            document.querySelector('select[name=\"user\"]').classList.remove('border-red');\n        }\n\n        if (!moment(start).isValid) {\n            isValid = false;\n            document.querySelector('.clock-start-modal').classList.add('border-red');\n        } else {\n            document.querySelector('.clock-start-modal').classList.remove('border-red');\n        }\n\n        if (!moment(end).isValid) {\n            isValid = false;\n            document.querySelector('.clock-end-modal').classList.add('border-red');\n        } else {\n            document.querySelector('.clock-end-modal').classList.remove('border-red');\n        }\n\n        if (moment(start).isSameOrAfter(end)) {\n            isValid = false;\n            document.querySelector('.clock-start-modal').classList.add('border-red');\n            document.querySelector('.clock-end-modal').classList.add('border-red');\n        }\n        if (!isValid) {\n            return toast.error('Revise los campos marcados en rojo', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        setFormValues({\n            ...formValues,\n            clocks: [...clocks, subFormValues]\n        });\n\n        handleCloseModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            closeTimeoutMS={300}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Nuevo Fichaje</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"grid-date\">\n                        <label>Técnico: </label>\n                        <select name=\"user\" value={userId} onChange={handleInputChange}>\n                            <option value=\"0\" disabled>Elige Técnico</option>\n                            {technicians.length > 0\n                                && technicians.map(technician =>\n                                    <option key={technician.id} value={technician.id}>{technician.name}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"grid-date\">\n                        <label>Hora Inicio: </label>\n                        <DatePicker\n                            className=\"clock-start-modal\"\n                            selected={start}\n                            timeInputLabel=\"Hora:\"\n                            dateFormat=\"dd/MM/yyyy HH:mm\"\n                            showTimeInput\n                            onChange={handleDateStartChange}\n                            locale={es}\n                            minDate={startWork}\n                        />\n                    </div>\n                    <div className=\"grid-date\">\n                        <label>Hora Fin: </label>\n                        <DatePicker\n                            className=\"clock-end-modal\"\n                            selected={end}\n                            timeInputLabel=\"Hora:\"\n                            dateFormat=\"dd/MM/yyyy HH:mm\"\n                            showTimeInput\n                            onChange={handleDateEndChange}\n                            minDate={start}\n                            locale={es}\n                        />\n                    </div>\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Aceptar</button>\n                    </div>\n                </form>\n            </div>\n            <ToastContainer />\n        </Modal >\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport es from 'date-fns/locale/es';\n\nimport moment from \"moment\";\n\nimport { getTechnicianNameById } from '../../helpers/getTechnicianNameById';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\n\nexport const ClockInOutModalUpdate = ({ setIndex, index, formValues, setFormValues }) => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { technicians } = useSelector(state => state.crew);\n\n    const [subFormValues, setSubFormValues] = useState(\n        {\n            userId: '',\n            user: 'default',\n            start: new Date(),\n            end: moment().add('1', 'hours').toDate()\n        });\n    const { userId, user, start, end } = subFormValues;\n    const { clocks, startWork } = formValues;\n\n    // Get the values of the current CLOCKINOUT clicked\n    useEffect(() => {\n        if (index !== null && clocks.length >= index) {\n            setSubFormValues({ ...clocks[index] })\n        }\n    }, [index, clocks]);\n\n    const handleCloseModal = () => {\n        enableScroll();\n        setIndex(null);\n        dispatch(uiCloseModal());\n    }\n\n    // This function only will change user select\n    const handleInputChange = ({ target }) => {\n\n        const id = target.value;\n        const { name } = getTechnicianNameById(id, technicians);\n\n        if (name) {\n            setSubFormValues({\n                ...subFormValues,\n                userId: id,\n                user: name\n            });\n        }\n    }\n\n    // Listen for changes on start clock Date\n    const handleDateStartChange = (e) => {\n        setSubFormValues({\n            ...subFormValues,\n            start: e\n        });\n    }\n\n    // Listen for changes on end clock Date\n    const handleDateEndChange = (e) => {\n        setSubFormValues({\n            ...subFormValues,\n            end: e\n        });\n    }\n\n    // Submit the form. Check values and Dates with momentJS\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let isValid = true;\n\n        if (user === 'default' || user.trim().length === 0) {\n            isValid = false;\n            document.querySelector('select[name=\"user\"]').classList.add('border-red');\n        } else {\n            document.querySelector('select[name=\"user\"]').classList.remove('border-red');\n        }\n\n        if (!moment(start).isValid) {\n            isValid = false;\n            document.querySelector('.clock-start-modal').classList.add('border-red');\n        } else {\n            document.querySelector('.clock-start-modal').classList.remove('border-red');\n        }\n\n        if (!moment(end).isValid) {\n            isValid = false;\n            document.querySelector('.clock-end-modal').classList.add('border-red');\n        } else {\n            document.querySelector('.clock-end-modal').classList.remove('border-red');\n        }\n\n        if (moment(start).isSameOrAfter(end)) {\n            isValid = false;\n            document.querySelector('.clock-start-modal').classList.add('border-red');\n            document.querySelector('.clock-end-modal').classList.add('border-red');\n        }\n        if (!isValid) {\n            return toast.error('Revise los campos marcados en rojo', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        setFormValues({\n            ...formValues,\n            clocks: clocks.map((clock, i) => i === index ? subFormValues : clock)\n        });\n\n        handleCloseModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            closeTimeoutMS={300}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Editar Fichaje</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}>\n                    <i className=\"fas fa-times\"></i>\n                </span>\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"grid-date\">\n\n                        <label>Técnico: </label>\n                        <select name=\"user\" value={userId} onChange={handleInputChange}>\n                            <option value=\"default\" disabled>Elige Técnico</option>\n                            {technicians.length > 0\n                                && technicians.map(technician =>\n                                    <option key={technician.id} value={technician.id}>{technician.name}</option>)}\n                        </select>\n\n                    </div>\n                    <div className=\"grid-date\">\n                        <label>Hora Inicio: </label>\n                        <DatePicker\n                            className=\"clock-start-modal\"\n                            selected={start}\n                            timeInputLabel=\"Hora:\"\n                            dateFormat=\"dd/MM/yyyy HH:mm\"\n                            showTimeInput\n                            onChange={handleDateStartChange}\n                            locale={es}\n                            minDate={startWork}\n                        />\n                    </div>\n                    <div className=\"grid-date\">\n                        <label>Hora Fin: </label>\n                        <DatePicker\n                            className=\"clock-end-modal\"\n                            selected={end}\n                            timeInputLabel=\"Hora:\"\n                            dateFormat=\"dd/MM/yyyy HH:mm\"\n                            showTimeInput\n                            onChange={handleDateEndChange}\n                            minDate={start}\n                            locale={es}\n                        />\n                    </div>\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Aceptar</button>\n                    </div>\n                </form>\n            </div>\n            <ToastContainer />\n        </Modal >\n    )\n}\n","import React, { useState } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nimport { disableScroll } from '../../helpers/disable-enable-scroll';\n\nimport { ClockInOutModalAdd } from './ClockInOutModalAdd';\nimport { ClockInOutModalUpdate } from './ClockInOutModalUpdate';\nimport { toast } from 'react-toastify';\nimport { ModalToastify } from '../ui/ModalToastify';\n\n\nexport const TabClockInOut = ({ formValues, setFormValues, disabled }) => {\n\n    const dispatch = useDispatch();\n    const { technicians } = useSelector(state => state.crew)\n\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [index, setIndex] = useState(null);\n\n    const { clocks } = formValues;\n\n    const handleAddModal = () => {\n        // Open modal to add new\n        disableScroll();\n        setShowAddModal(true);\n        dispatch(uiOpenModal());\n    }\n\n    const handleUpdateModal = (index) => {\n\n        // Open Modal to edit\n        disableScroll();\n        setIndex(index);\n        dispatch(uiOpenModal());\n    }\n\n    // Show modal confirmation before deleting a technician clock\n    const handleDelete = (i) => {\n        toast.warn(<ModalToastify\n            handleDeleteItem={() => handleDeleteClockInOut(i)}\n            code={clocks[i].user}\n            message=\"Estás seguro de borrar el fichaje de \" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    // Delete and technician clock from array\n    const handleDeleteClockInOut = (index) => {\n\n        const newClocks = clocks.filter((clock, i) => i !== index && clock)\n\n        setFormValues({\n            ...formValues,\n            clocks: newClocks\n        });\n\n    }\n\n\n    return (\n        <div className=\"tab-table-wrapper\">\n            <div>\n\n                <div className=\"header-tab-table header-tab-table2\">\n                    <div>\n                        <p>Técnico</p>\n                    </div>\n                    <div>\n                        <p>H. Inicio</p>\n                    </div>\n                    <div>\n                        <p>H. Fin</p>\n                    </div>\n                </div>\n\n                {\n                    clocks.length > 0\n                    &&\n                    clocks.map((clock, i) =>\n                        <div className=\"header-tab-body header-tab-body2\" key={i}>\n\n                            <select className=\"select-tab-user-clock\" name=\"user\" value={clock.userId} disabled>\n                                {technicians.length > 0\n                                    && technicians.map(technician =>\n                                        <option key={technician.id} value={technician.id}>{technician.name}</option>)}\n                            </select>\n\n                            <div>\n                                <DatePicker\n                                    selected={clock.start}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    showTimeInput\n                                    disabled\n                                />\n                            </div>\n                            <div>\n                                <DatePicker\n                                    selected={clock.end}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    showTimeInput\n                                    disabled\n                                />\n                            </div>\n                            <div>\n                                {\n                                    !disabled &&\n                                    <>\n                                        <i className=\"far fa-trash-alt\" onClick={() => { handleDelete(i) }}></i>\n                                        <i className=\"far fa-edit\" onClick={() => { handleUpdateModal(i) }}></i>\n                                    </>\n                                }\n\n                            </div>\n                        </div>\n                    )\n                }\n                {showAddModal\n                    &&\n                    <ClockInOutModalAdd\n                        setShowAddModal={setShowAddModal}\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                    />\n                }\n                {index >= 0 && !showAddModal\n                    &&\n                    <ClockInOutModalUpdate\n                        setIndex={setIndex}\n                        index={index}\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                    />\n                }\n            </div>\n            {\n                !disabled &&\n\n                <div className=\"button-add-tab-wrapper\" onClick={handleAddModal}>\n                    <i className=\"far fa-clock\"></i>\n                    <span>Fichar</span>\n                </div>\n\n            }\n\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport { uiCloseModal } from '../../actions/ui';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { startGetWarehouseItems } from '../../actions/warehouse';\n\nexport const MaterialModalAdd = ({ formValues, setFormValues, setShowAddModal }) => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { items } = useSelector(state => state.warehouse);\n    const { materials } = formValues;\n\n    const [subFormValues, setSubFormValues] = useState({ code: '', description: '', quantity: '1' });\n    const [searchResults, setSearchResults] = useState([]);\n    const [search, setSearch] = useState('');\n\n    const [itemSelected, setItemSelected] = useState(false);\n\n    const { description, quantity } = subFormValues;\n\n\n    useEffect(() => {\n        dispatch(startGetWarehouseItems());\n    }, [dispatch]);\n\n    useEffect(() => {\n        // When input search have text, will check value of column code and description\n        // looking for matches.\n\n        // When the input is empty, will return an empty array.\n        if (search) {\n            const rows = items.filter((value) => {\n                if (\n                    (value.code !== '' && value.code.toLowerCase().includes(search.toLowerCase()))\n                    ||\n                    (value.description !== '' && value.description.toLowerCase().includes(search.toLowerCase()))) {\n\n                    return value;\n                } else {\n                    return false;\n                }\n\n            });\n            setSearchResults(rows);\n        } else {\n            setSearchResults([]);\n        }\n\n    }, [search, items]);\n\n\n    const handleCloseModal = () => {\n        enableScroll();\n        setShowAddModal(false);\n        dispatch(uiCloseModal());\n    }\n\n    const handleSearch = ({ target }) => {\n        setSearch(target.value);\n    }\n\n    const handleAdd = (code, description) => {\n        setItemSelected(true);\n        setSearch('');\n        setSubFormValues({\n            ...subFormValues,\n            code,\n            description\n        });\n    }\n\n    // This function changes subFormValues\n    const handleInputChange = ({ target }) => {\n\n        setSubFormValues({\n            ...subFormValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    // Submit the form.\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (description.trim().length === 0 || description === '') {\n            return toast.error('Debes elegir un material', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        if (!Number.isInteger((Number)(quantity)) || parseInt(quantity) <= 0 || parseInt(quantity) >= 100) {\n            document.querySelector('input[name=\"quantity\"]').classList.add('border-red');\n            return toast.error('Debes de elegir como mínimo 1 unidad y máximo 100',\n                { position: toast.POSITION.TOP_CENTER });\n        } else {\n            document.querySelector('input[name=\"quantity\"]').classList.remove('border-red');\n        }\n\n        setFormValues({\n            ...formValues,\n            materials: [...materials, subFormValues]\n        });\n\n        handleCloseModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Agregar Material</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                <form onSubmit={handleSubmit}>\n\n                    <div className=\"grid-date\">\n                        <label>Buscar: </label>\n                        <div className=\"custom-input-searcher\">\n                            <input\n                                placeholder=\"Buscar Material\"\n                                name=\"search\"\n                                onChange={handleSearch}\n                                value={search}\n                                autoComplete=\"off\"\n                            />\n                            {searchResults &&\n\n                                <ul onChange={handleAdd} className={`${searchResults.length > 0 ? 'go' : ''}`}>\n                                    {searchResults.map(result =>\n                                        <li\n                                            key={result.code}\n                                            onClick={() => handleAdd(result.code, result.description)}\n                                        >\n                                            {result.description}\n                                        </li>\n                                    )}\n                                </ul>\n                            }\n                        </div>\n                    </div>\n\n                    {itemSelected\n\n                        &&\n                        <>\n                            <div className=\"grid-date\">\n                                <label>Material: </label>\n                                <input\n                                    value={description}\n                                    type=\"text\"\n                                    name=\"item\"\n                                    disabled\n                                />\n                            </div>\n                            <div className=\"grid-date\">\n                                <label>Cantidad: </label>\n                                <input\n                                    value={quantity}\n                                    type=\"number\"\n                                    name=\"quantity\"\n                                    min=\"1\"\n                                    step=\"1\"\n                                    onChange={handleInputChange}\n                                    autoComplete=\"off\"\n                                />\n                            </div>\n                        </>\n                    }\n\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Agregar</button>\n                    </div>\n\n                </form>\n            </div>\n            <ToastContainer />\n        </Modal >\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport { uiCloseModal } from '../../actions/ui';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { startGetWarehouseItems } from '../../actions/warehouse';\n\nexport const MaterialModalUpdate = ({ index, setIndex, formValues, setFormValues }) => {\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { items } = useSelector(state => state.warehouse);\n    const { materials } = formValues;\n\n    const [subFormValues, setSubFormValues] = useState({ code: '', description: '', quantity: '1' });\n    const [searchResults, setSearchResults] = useState([]);\n    const [search, setSearch] = useState('');\n\n    const [itemSelected, setItemSelected] = useState(false);\n\n    const { description, quantity } = subFormValues;\n\n\n    useEffect(() => {\n        dispatch(startGetWarehouseItems());\n    }, [dispatch]);\n\n    useEffect(() => {\n\n        if (index != null && materials.length >= index) {\n            setSubFormValues(materials[index]);\n            setItemSelected(true);\n        }\n\n    }, [index, materials]);\n\n    useEffect(() => {\n        // When input search have text, will check value of column code and description\n        // looking for matches.\n\n        // When the input is empty, will return an empty array.\n        if (search) {\n            const rows = items.filter((value) => {\n                if (\n                    (value.code !== '' && value.code.toLowerCase().includes(search.toLowerCase()))\n                    ||\n                    (value.description !== '' && value.description.toLowerCase().includes(search.toLowerCase()))) {\n\n                    return value;\n                } else {\n                    return false;\n                }\n\n            });\n            setSearchResults(rows);\n        } else {\n            setSearchResults([]);\n        }\n\n    }, [search, items]);\n\n    const handleCloseModal = () => {\n        enableScroll();\n        setIndex(null);\n        dispatch(uiCloseModal());\n    }\n\n    const handleSearch = ({ target }) => {\n        setSearch(target.value);\n    }\n\n    const handleAdd = (code, description) => {\n        setItemSelected(true);\n        setSearch('');\n        setSubFormValues({\n            ...subFormValues,\n            code,\n            description\n        });\n    }\n\n    // This function changes subFormValues\n    const handleInputChange = ({ target }) => {\n        setSubFormValues({\n            ...subFormValues,\n            [target.name]: target.value\n        });\n    }\n\n    // Submit the form.\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (description.trim().length === 0 || description === '') {\n            return toast.error('Debes elegir un material', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        if (!Number.isInteger((Number)(quantity)) || parseInt(quantity) <= 0 || parseInt(quantity) >= 100) {\n            document.querySelector('input[name=\"quantity\"]').classList.add('border-red');\n            return toast.error('Debes de elegir como mínimo 1 unidad y máximo 100',\n                { position: toast.POSITION.TOP_CENTER });\n        } else {\n            document.querySelector('input[name=\"quantity\"]').classList.remove('border-red');\n        }\n\n        setFormValues({\n            ...formValues,\n            materials: materials.map((material, i) => i === index ? subFormValues : material)\n        });\n\n        handleCloseModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal-clock animate__animated animate__fadeIn animate__fast'\n            onRequestClose={handleCloseModal}\n            contentLabel='Calendar Modal'\n            closeTimeoutMS={300}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <div className=\"frame\">\n\n                <h1 className=\"h1-modal\">Editar Material</h1>\n                <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                <form onSubmit={handleSubmit}>\n\n                    <div className=\"grid-date\">\n                        <label>Buscar: </label>\n                        <div className=\"custom-input-searcher\">\n                            <input\n                                placeholder=\"Buscar Material\"\n                                name=\"search\"\n                                onChange={handleSearch}\n                                value={search}\n                                autoComplete=\"off\"\n                            />\n                            {searchResults &&\n\n                                <ul onChange={handleAdd} className={`${searchResults.length > 0 ? 'go' : ''}`}>\n                                    {searchResults.map(result =>\n                                        <li\n                                            key={result.code}\n                                            onClick={() => handleAdd(result.code, result.description)}\n                                        >\n                                            {result.description}\n                                        </li>\n                                    )}\n                                </ul>\n                            }\n                        </div>\n                    </div>\n\n                    {itemSelected\n\n                        &&\n                        <>\n                            <div className=\"grid-date\">\n                                <label>Material: </label>\n                                <input\n                                    value={description}\n                                    type=\"text\"\n                                    name=\"item\"\n                                    disabled\n                                />\n                            </div>\n                            <div className=\"grid-date\">\n                                <label>Cantidad: </label>\n                                <input\n                                    value={quantity}\n                                    type=\"number\"\n                                    name=\"quantity\"\n                                    min=\"1\"\n                                    step=\"1\"\n                                    onChange={handleInputChange}\n                                    autoComplete=\"off\"\n                                />\n                            </div>\n                        </>\n                    }\n\n                    <div className=\"button-wrapper\">\n                        <button className=\"btn btn-form-agree\" type=\"submit\">Agregar</button>\n                    </div>\n\n                </form>\n            </div>\n            <ToastContainer />\n        </Modal >\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { uiOpenModal } from '../../actions/ui';\nimport { disableScroll } from '../../helpers/disable-enable-scroll';\nimport { ModalToastify } from '../ui/ModalToastify';\nimport { MaterialModalAdd } from './MaterialModalAdd';\nimport { MaterialModalUpdate } from './MaterialModalUpdate';\n\nexport const TabMaterials = ({ formValues, setFormValues, disabled }) => {\n\n    const dispatch = useDispatch();\n    const { materials } = formValues;\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [index, setIndex] = useState(null);\n\n\n    const handleAddItem = () => {\n        setShowAddModal(true);\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    const handleDelete = (i) => {\n\n        toast.warn(<ModalToastify\n            handleDeleteItem={() => handleDeleteItem(i)}\n            code={materials[i].description}\n            message=\"Estás seguro de borrar el item \" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    const handleDeleteItem = (index) => {\n        const newMaterials = materials.filter((material, i) => i !== index && material)\n\n        setFormValues({\n            ...formValues,\n            materials: newMaterials\n        });\n    }\n\n    const handleUpdateItem = (i) => {\n        setIndex(i);\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    return (\n        <div className=\"tab-table-wrapper\">\n            <div>\n\n\n                <div className=\"header-tab-table header-tab-table3\">\n                    <div>\n                        <p>Código</p>\n                    </div>\n                    <div>\n                        <p>Descripción</p>\n                    </div>\n                    <div>\n                        <p>Cantidad</p>\n                    </div>\n\n                </div>\n                {\n                    materials && materials.length > 0\n                    &&\n                    materials.map((material, i) =>\n                    (<div className=\"header-tab-body header-tab-body3\" key={i}>\n                        <div>\n                            <p>{material.code}</p>\n                        </div>\n                        <div>\n                            <p>{material.description}</p>\n                        </div>\n                        <div>\n                            <p>{material.quantity}</p>\n                        </div>\n                        <div className=\"action-icons\">\n                            {\n                                !disabled &&\n                                <>\n                                    <i className=\"far fa-trash-alt\" onClick={() => { handleDelete(i) }}></i>\n                                    <i className=\"far fa-edit\" onClick={() => { handleUpdateItem(i) }}></i>\n                                </>\n                            }\n                        </div>\n                    </div>)\n                    )\n                }\n\n                {showAddModal\n                    &&\n                    <MaterialModalAdd\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                        setShowAddModal={setShowAddModal}\n                    />}\n\n                {(index >= 0 && !showAddModal)\n                    &&\n                    <MaterialModalUpdate\n                        index={index}\n                        setIndex={setIndex}\n                        formValues={formValues}\n                        setFormValues={setFormValues}\n                    />\n                }\n\n            </div>\n\n\n            {\n                !disabled &&\n\n                <div className=\"button-add-tab-wrapper\" onClick={handleAddItem}>\n                    <i className=\"fas fa-boxes\"></i><span>Nuevo item</span>\n                </div>\n\n            }\n\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Flip } from 'react-toastify';\nimport { clearActiveEvent } from '../../actions/calendar';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { ToastError } from './ToastError';\nimport { ToastSuccess } from './ToastSuccess';\n\n\nexport const BackgroundModal = ({ result, setShowModal }) => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // On first render create and execute toast of SUCCES or ERROR\n    useEffect(() => {\n\n        if (Object.keys(result).length > 0) {\n\n            const { message, ok: isOk } = result;\n\n            if (isOk) {\n                return toast.success(<ToastSuccess text={message} />, { autoClose: 2000, toastId: 1, position: 'top-center', onClose: () => handleCloseModal() });\n            } else {\n                return toast.error(<ToastError text={message} />, { autoClose: 2000, toastId: 1, position: 'top-center', onClose: () => handleError() });\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [result]);\n\n    // If the operation failed, close modal\n    const handleError = () => {\n        setShowModal(false);\n        enableScroll();\n    }\n\n    // If the operation succeded and after the toast disappears, will close the modal and redirect to /calendar\n    const handleCloseModal = () => {\n        setShowModal(false);\n        enableScroll();\n        dispatch(clearActiveEvent());\n        const path = `/calendar`;\n        history.push(path);\n    }\n\n    return (\n        <div className=\"modal-advise animate__animated animate__fadeIn animate__fast\">\n            <ToastContainer transition={Flip} />\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport { startLoadFactory } from '../../actions/factory';\n\nimport { getMachinesByNumberId } from '../../helpers/getMachinesByNumberId';\nimport { getSectionsByFactoryId } from '../../helpers/getSectionsByFactoryId';\nimport { getSectionNumbersBySectionId } from '../../helpers/getSectionNumbersBySectionId';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport es from 'date-fns/locale/es';\n\nimport moment from \"moment\";\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { TabOperations } from './TabOperations';\nimport { TabClockInOut } from './TabClockInOut';\nimport { TabMaterials } from './TabMaterials';\nimport { clearActiveEvent, startAddOrderEvent, startUpdateOrderEvent } from '../../actions/calendar';\n\nimport { BackgroundModal } from '../ui/BackgroundModal';\nimport { ModalToastify } from '../ui/ModalToastify';\n\nconst initialState = {\n    factory: 'default',\n    section: 'default',\n    machine: 'default',\n    number: 'default',\n    technician: 'default',\n    worker: '',\n    orderType: 'default',\n    breakdown: 'default',\n    closed: false,\n    confirmed: false,\n    start: new Date(),\n    end: new Date(),\n    startFix: new Date(),\n    endFix: new Date(),\n    materials: [],\n    operations: [],\n    clocks: [],\n    totalMins: 0,\n    description: '',\n}\n\nexport const OrderForm = () => {\n\n    const dispatch = useDispatch();\n    const { factories, sections, machines, numbers } = useSelector(state => state.factory);\n    const { types, breakdowns, activeEvent } = useSelector(state => state.calendar);\n    const { technicians } = useSelector(state => state.crew);\n    const { showResponsive } = useSelector(state => state.nav);\n    const { admin } = useSelector(state => state.auth);\n\n\n    // Show allowed sections, numbers and machines\n    const [selectedSections, setSelectedSections] = useState([]);\n    const [selectedSectionsNumbers, setSelectedSectionsNumbers] = useState([]);\n    const [selectedMachines, setSelectedMachines] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [result, setResult] = useState({});\n    const [breadMessage, setBreadMessage] = useState('*Selecciona una factoría para para desbloquear el siguiente campo');\n\n\n    // Formvalues deconstruction\n    const [formValues, setFormValues] = useState(initialState);\n    const { factory,\n        section,\n        machine,\n        number,\n        technician,\n        worker,\n        orderType,\n        breakdown,\n        closed,\n        confirmed,\n        start,\n        end,\n        startFix,\n        endFix,\n        description,\n    } = formValues;\n\n    const history = useHistory();\n\n    // Load and fecth factories, sections, machines and docs from DB\n    useEffect(() => {\n        dispatch(startLoadFactory());\n    }, [dispatch]);\n\n    // Load activeEvent or redirect to /neworder path if there is not an activeEvent\n    useEffect(() => {\n        // If there is an activeEvent, get the current factory.name,\n        // section.number, section.name and machine.name\n        if (activeEvent) {\n            setBreadMessage('Ok');\n            setFormValues(activeEvent);\n            const { factory: factoryId } = activeEvent;\n            const factorySections = getSectionsByFactoryId(factoryId, sections);\n            setSelectedSections(factorySections);\n\n            const { section: sectionId } = activeEvent;\n            const { number: numberId } = activeEvent;\n            const sectionNumbers = getSectionNumbersBySectionId(sectionId, numbers);\n            const sectionMachines = getMachinesByNumberId(numberId, machines);\n            setSelectedSectionsNumbers(sectionNumbers);\n            setSelectedMachines(sectionMachines);\n        } else {\n            setFormValues(initialState);\n            setSelectedSections([]);\n            setSelectedSectionsNumbers([]);\n            setSelectedMachines([]);\n\n            if (history.location.pathname === '/order') {\n                history.push('/neworder');\n            }\n        }\n\n    }, [activeEvent, history, machines, numbers, sections]);\n\n    // When de component is dismounted, remove the activeEvent from store\n    useEffect(() => {\n        return () => {\n            dispatch(clearActiveEvent());\n        }\n    }, [dispatch]);\n\n\n    const handleInputChange = async ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n\n        // If the input changed is a factory, remove the sections and machines rendered\n        // in the selects and the breadcrumb message, and set the new sections belonging to the factory\n        if (target.name === 'factory') {\n            setSelectedSectionsNumbers([]);\n            setSelectedMachines([]);\n            setBreadMessage('*Selecciona una sección para desbloquear el siguiente campo');\n\n            setFormValues({\n                ...formValues,\n                [target.name]: target.value,\n                section: 'default',\n                number: 'default',\n                machine: 'default'\n            });\n\n            const id = target.value;\n            const factorySections = getSectionsByFactoryId(id, sections);\n            setSelectedSections(factorySections);\n        }\n\n        // If the input changed is a section, remove the machines rendered in the select\n        // and the breadcrumb message, and set the new numbers belonging to the section\n        if (target.name === 'section') {\n            setSelectedMachines([]);\n            setBreadMessage('*Selecciona el número de sección para desbloquear el resto de campos');\n\n            setFormValues({\n                ...formValues,\n                [target.name]: target.value,\n                number: 'default',\n                machine: 'default'\n            });\n\n            const id = target.value;\n            const sectionNumbers = getSectionNumbersBySectionId(id, numbers);\n            setSelectedSectionsNumbers(sectionNumbers);\n        }\n\n        // If the input changed is a number, remove the breadcrumb message\n        // and set the new machines belonging to the number\n        if (target.name === 'number') {\n            setBreadMessage('Ok');\n\n            setFormValues({\n                ...formValues,\n                [target.name]: target.value,\n                machine: 'default'\n            });\n\n            const id = target.value;\n            const sectionMachines = getMachinesByNumberId(id, machines);\n            setSelectedMachines(sectionMachines);\n        }\n    }\n\n    // Listen for date changes start input\n    const handleStartDateChange = (e) => {\n        setFormValues({ ...formValues, start: e });\n        document.querySelector('input[name=\"start\"]').classList.remove('border-red');\n    }\n\n    // Listen for date changes end input\n    const handleEndDateChange = (e) => {\n        setFormValues({ ...formValues, end: e });\n        document.querySelector('input[name=\"end\"]').classList.remove('border-red');\n    }\n\n    // Listen for date changes startFix input\n    const handleStartFixDateChange = (e) => {\n        setFormValues({ ...formValues, startFix: e });\n        document.querySelector('input[name=\"startFix\"]').classList.remove('border-red');\n    }\n\n    // Listen for date changes endFix input\n    const handleEndFixDateChange = (e) => {\n        setFormValues({ ...formValues, endFix: e });\n        document.querySelector('input[name=\"endFix\"]').classList.remove('border-red');\n    }\n\n    // If the user agree the form, the event will be locked setting the\n    // property closed to true\n    const handleLockChange = () => {\n        setFormValues({ ...formValues, closed: !closed });\n    }\n\n    const checkOrder = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (closed) {\n\n            toast.warn(<ModalToastify\n                handleDeleteItem={() => handleSubmit(e)}\n                message=\"El proceso es irreversible, estás seguro de cerrar la orden\" />,\n                {\n                    position: toast.POSITION.TOP_CENTER,\n                    closeOnClick: false,\n                    autoClose: false,\n                    toastId: '1'\n                });\n        } else {\n            handleSubmit(e);\n        }\n\n    }\n\n    // Check all the inputs are not empty and if there is an activeEvent, update\n    // if there isn't an activeEvent, create\n    const handleSubmit = async () => {\n\n        let isValid = true;\n        let result = {};\n\n        if (!factory || factory === 'default' || factory === '') {\n            document.querySelector('select[name=\"factory\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"factory\"]')?.classList.remove('border-red');\n        }\n\n        if (!section || section === 'default' || section === '') {\n            document.querySelector('select[name=\"section\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"section\"]')?.classList.remove('border-red');\n        }\n\n        if (!number || number === 'default' || number === '') {\n            document.querySelector('select[name=\"number\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"number\"]')?.classList.remove('border-red');\n        }\n\n        if (!machine || machine === 'default' || machine === '') {\n            document.querySelector('select[name=\"machine\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"machine\"]')?.classList.remove('border-red');\n        }\n\n        if (!orderType || orderType === 'default' || orderType === '') {\n            document.querySelector('select[name=\"orderType\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"orderType\"]')?.classList.remove('border-red');\n        }\n\n        if (!breakdown || breakdown === 'default' || breakdown === '') {\n            document.querySelector('select[name=\"breakdown\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"breakdown\"]')?.classList.remove('border-red');\n        }\n\n        if (!technician || technician === 'default' || technician === '') {\n            document.querySelector('select[name=\"technician\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('select[name=\"technician\"]')?.classList.remove('border-red');\n        }\n\n        if (!worker || worker.trim().length <= 2) {\n            document.querySelector('input[name=\"worker\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('input[name=\"worker\"]')?.classList.remove('border-red');\n        }\n\n        if (moment(start).isSameOrAfter(end)) {\n            document.querySelector('input[name=\"start\"]')?.classList.add('border-red');\n            isValid = false;\n        } else {\n            document.querySelector('input[name=\"start\"]')?.classList.remove('border-red');\n        }\n\n        if (moment(end).isBefore(endFix) || moment(end).isBefore(start)) {\n            document.querySelector('input[name=\"end\"]')?.classList.add('border-red');\n            isValid = false;\n\n            if (moment(end).isBefore(endFix)) {\n                document.querySelector('input[name=\"endFix\"]')?.classList.add('border-red');\n            }\n            if (moment(end).isBefore(start)) {\n                document.querySelector('input[name=\"start\"]')?.classList.add('border-red');\n            }\n\n        } else {\n            document.querySelector('input[name=\"end\"]')?.classList.remove('border-red');\n        }\n\n        if (moment(startFix).isBefore(start) || moment(startFix).isSameOrAfter(endFix)) {\n            document.querySelector('input[name=\"startFix\"]')?.classList.add('border-red');\n            isValid = false;\n\n            if (moment(startFix).isBefore(start)) {\n                document.querySelector('input[name=\"start\"]')?.classList.add('border-red');\n            }\n            if (moment(startFix).isSameOrAfter(endFix)) {\n                document.querySelector('input[name=\"endFix\"]')?.classList.add('border-red');\n            }\n\n        } else {\n            document.querySelector('input[name=\"startFix\"]')?.classList.remove('border-red');\n        }\n\n        if (moment(endFix).isBefore(startFix) || moment(endFix).isAfter(end) ||\n            moment(endFix).isAfter(end) || moment(endFix).isSameOrBefore(startFix)) {\n\n            document.querySelector('input[name=\"endFix\"]')?.classList.add('border-red');\n            isValid = false;\n\n            if (moment(endFix).isBefore(startFix)) {\n                document.querySelector('input[name=\"startFix\"]')?.classList.add('border-red');\n            }\n            if (moment(endFix).isAfter(end)) {\n                document.querySelector('input[name=\"end\"]')?.classList.add('border-red');\n            }\n\n        } else {\n            document.querySelector('input[name=\"endFix\"]')?.classList.remove('border-red');\n        }\n\n        if (description.length <= 0 || description.length === '') {\n            isValid = false;\n            document.querySelector('.description-textarea')?.classList.add('border-red');\n        } else {\n            document.querySelector('.description-textarea')?.classList.remove('border-red');\n        }\n\n        if (!isValid) {\n            return toast.error('Revise los campos marcados en rojo y revise las fechas debídamente!', { position: 'top-center' });\n        }\n\n        if (activeEvent) {\n            result = await dispatch(startUpdateOrderEvent(formValues));\n        } else {\n            result = await dispatch(startAddOrderEvent(formValues));\n        }\n\n        setShowModal(true);\n        setResult(result);\n\n    }\n\n    return (\n\n        <>\n            {showModal\n                &&\n                <BackgroundModal\n                    result={result}\n                    setShowModal={setShowModal}\n                />\n            }\n\n            <div className=\"animate__animated animate__fadeIn animated__fast\">\n\n                {\n                    !activeEvent\n                        ? <h1 className=\"h1-order\">Nueva Orden</h1>\n                        : confirmed\n                            ? <h1 className=\"h1-order\">Ver Orden Cerrada</h1>\n                            : <h1 className=\"h1-order\">Editar Orden</h1>\n                }\n\n                <form onSubmit={checkOrder}>\n\n                    {!showModal && <ToastContainer />}\n\n                    <h3 className={`h3-order ${breadMessage === 'Ok' ? 'mb-4' : ''}`}>Datos Orden</h3>\n\n                    <div className=\"icon-lock-unlock-wrapper\">\n                        {!activeEvent && <i className=\"fas fa-lock-open disabled\"></i>}\n\n                        {\n                            confirmed === 1\n                            &&\n                            <i className=\"fas fa-lock disabled\"></i>\n                        }\n\n                        {\n                            /* not confirmed order, is an activeEvent on store, and is closed */\n                            (!confirmed || confirmed === 0) && activeEvent && (closed || closed === 1) && admin\n\n                                ? <i className=\"fas fa-lock\" onClick={handleLockChange}></i>\n                                : (!confirmed || confirmed === 0) && activeEvent && (closed || closed === 1) && !admin\n                                && <i className=\"fas fa-lock disabled\"></i>\n                        }\n                        {\n                            /* not confirmed order, is an activeEvent on store, and is not closed */\n                            (!confirmed || confirmed === 0) && activeEvent && (!closed || closed === 0)\n                                && admin\n                                ? <i className=\"fas fa-lock-open\" onClick={handleLockChange}></i>\n                                : (!confirmed || confirmed === 0) && activeEvent && (!closed || closed === 0) && !admin\n                                && <i className=\"fas fa-lock-open disabled\"></i>\n                        }\n\n                    </div>\n\n                    <span className={`advise-factory animate__animated animate__fadeIn`}>\n                        {breadMessage !== 'Ok' && `${breadMessage}`}\n                    </span>\n\n                    <div className=\"order-form\">\n\n                        <div className=\"factory-wrapper form-grid\">\n                            <label>Factoría: </label>\n                            <select\n                                name=\"factory\"\n                                value={factory}\n                                onChange={handleInputChange}\n                                disabled={closed}\n                            >\n                                <option value=\"default\" disabled>Factoría</option>\n                                {factories.map(factory =>\n                                    <option key={factory.id} value={factory.id}>{factory.name}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"section-wrapper form-grid\">\n                            <label>Sección: </label>\n                            <select\n                                name=\"section\"\n                                value={section}\n                                onChange={handleInputChange}\n                                disabled={selectedSections.length === 0 || closed}\n                            >\n                                <option value=\"default\" disabled>Elige Sección</option>\n                                {selectedSections.length > 0\n                                    && selectedSections.map(section =>\n                                        <option key={section.id} value={section.id}>{section.name}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"number-wrapper form-grid\">\n                            <label>Número: </label>\n                            <select\n                                name=\"number\"\n                                value={number}\n                                onChange={handleInputChange}\n                                disabled={selectedSectionsNumbers.length === 0 || closed}\n                            >\n\n                                <option value=\"default\" disabled>Elige Número</option>\n                                {selectedSectionsNumbers.length > 0\n                                    && selectedSectionsNumbers.map(number =>\n                                        <option key={number.id} value={number.id}>{number.number}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"machine-wrapper form-grid\">\n                            <label>Máquina: </label>\n                            <select\n                                name=\"machine\"\n                                value={machine}\n                                onChange={handleInputChange}\n                                disabled={selectedMachines.length === 0 || closed}\n                            >\n\n                                <option value=\"default\" disabled>Elige Máquina</option>\n                                {selectedMachines.length > 0\n                                    && selectedMachines.map(machine =>\n                                        <option key={machine.id} value={machine.id}>{machine.name}</option>)}\n                            </select>\n                        </div>\n\n\n                        <div className=\"order-type-wrapper form-grid\">\n                            <label>Tipo orden: </label>\n                            <select\n                                name=\"orderType\"\n                                value={orderType}\n                                onChange={handleInputChange}\n                                disabled={closed}\n                            >\n                                <option value=\"default\" disabled>Elige Tipo</option>\n                                {types.length > 0\n                                    && types.map(type =>\n                                        <option key={type.id} value={type.id}>{type.name}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"breakdown-wrapper form-grid\">\n                            <label>Tipo avería: </label>\n                            <select\n                                name=\"breakdown\"\n                                value={breakdown}\n                                onChange={handleInputChange}\n                                disabled={closed}\n                            >\n                                <option value=\"default\" disabled>Elige Avería</option>\n                                {breakdowns.length > 0\n                                    && breakdowns.map(breakdown =>\n                                        <option key={breakdown.id} value={breakdown.id}>{breakdown.name}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"technician-wrapper form-grid\">\n                            <label>Técnico: </label>\n                            <select\n                                name=\"technician\"\n                                value={technician}\n                                onChange={handleInputChange}\n                                disabled={closed}\n                            >\n                                <option value=\"default\" disabled>Elige Técnico</option>\n                                {technicians.length > 0\n                                    && technicians.map(technician =>\n                                        <option key={technician.id} value={technician.id}>{technician.name}</option>)}\n                            </select>\n                        </div>\n\n                        <div className=\"worker-wrapper form-grid\">\n                            <label>Avisado por: </label>\n                            <input\n                                type=\"text\"\n                                name=\"worker\"\n                                value={worker}\n                                onChange={handleInputChange}\n                                disabled={closed}\n                                autoComplete=\"off\"\n                            />\n                        </div>\n                    </div>\n\n                    <h3 className=\"h3-order\">Fechas Orden</h3>\n\n                    <div className=\"order-form2\">\n\n                        <div className=\"grid-dates\">\n                            <div className=\"start-work-wrapper form-grid limit\">\n                                <label>Fecha aviso: </label>\n                                {!showResponsive && <DatePicker\n                                    selected={start}\n                                    onChange={handleStartDateChange}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    locale={es}\n                                    showTimeInput\n                                    name=\"start\"\n                                    disabled={closed}\n                                />}\n                            </div>\n\n                            <div className=\"end-work-wrapper form-grid limit\">\n                                <label>Fecha fin: </label>\n                                {!showResponsive && <DatePicker\n                                    selected={end}\n                                    onChange={handleEndDateChange}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    showTimeInput\n                                    locale={es}\n                                    minDate={start}\n                                    name=\"end\"\n                                    disabled={closed}\n                                />}\n                            </div>\n                        </div>\n                        <div className=\"grid-dates\">\n                            <div className=\"start-fix-wrapper form-grid limit\">\n                                <label>Inicio trabajo: </label>\n                                {!showResponsive && <DatePicker\n                                    selected={startFix}\n                                    onChange={handleStartFixDateChange}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    locale={es}\n                                    showTimeInput\n                                    minDate={start}\n                                    name=\"startFix\"\n                                    disabled={closed}\n                                />}\n                            </div>\n\n                            <div className=\"end-fix-wrapper form-grid limit\">\n                                <label>Fin trabajo: </label>\n                                {!showResponsive && <DatePicker\n                                    selected={endFix}\n                                    onChange={handleEndFixDateChange}\n                                    timeInputLabel=\"Hora:\"\n                                    dateFormat=\"dd/MM/yyyy HH:mm\"\n                                    locale={es}\n                                    showTimeInput\n                                    minDate={startFix}\n                                    name=\"endFix\"\n                                    disabled={closed}\n                                />}\n                            </div>\n                        </div>\n                    </div>\n\n                    <h3 className=\"h3-order\">Información Adicional</h3>\n\n                    <Tabs>\n                        <TabList>\n                            <Tab>Información</Tab>\n                            <Tab>Operaciones</Tab>\n                            <Tab>Fichajes</Tab>\n                            <Tab>Materiales</Tab>\n                        </TabList>\n\n                        {/* Notes */}\n                        <TabPanel >\n                            <div className=\"tab-table-wrapper\">\n                                <div className=\"tab-table-textarea\">\n                                    <label>Descripción incidencia: </label>\n                                    <textarea\n                                        className=\"description-textarea\"\n                                        name='description'\n                                        value={description}\n                                        onChange={handleInputChange}\n                                        disabled={closed}></textarea>\n                                </div>\n                            </div>\n                        </TabPanel>\n\n                        {/* Operations */}\n                        <TabPanel>\n                            <TabOperations\n                                formValues={formValues}\n                                setFormValues={setFormValues}\n                                disabled={closed}\n                            />\n                        </TabPanel>\n\n                        {/* Clock IN and Clock OUT */}\n                        <TabPanel>\n                            <TabClockInOut\n                                formValues={formValues}\n                                setFormValues={setFormValues}\n                                disabled={closed}\n                            />\n                        </TabPanel>\n\n                        {/* Materials */}\n                        <TabPanel>\n                            <TabMaterials\n                                formValues={formValues}\n                                setFormValues={setFormValues}\n                                disabled={closed}\n                            />\n                        </TabPanel>\n\n                    </Tabs>\n\n                    <div className=\"button-wrapper\">\n                        <button\n                            className=\"btn btn-order-cancel\"\n                            onClick={() => history.goBack()}\n                        >\n                            Volver\n                        </button>\n\n                        {\n                            !confirmed &&\n                            <button className=\"btn btn-order\" type=\"submit\">\n                                {activeEvent ? \"Guardar\" : \"Crear Orden\"}\n                            </button>\n                        }\n\n\n                    </div>\n\n                </form>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { OrderForm } from '../components/order/OrderForm';\nimport { LoadingPopup } from '../components/ui/LoadingPopup';\n\nexport const OrderScreen = () => {\n\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        showLoading();\n    }, []);\n\n    const showLoading = () => {\n\n        setTimeout(() => {\n            setIsLoading(false);\n        }, 300);\n\n    }\n\n    return (\n\n        <div className='order-wrapper'>\n            {isLoading\n                ? <LoadingPopup type=\"no-animation\" />\n\n                : <OrderForm />\n            }\n        </div>\n    )\n\n}\n","export const messages = {\n    allDay: \"Todo el día\",\n    previous: \"<\",\n    next: \">\",\n    today: \"Hoy\",\n    month: \"Mes\",\n    week: \"Semana\",\n    day: \"Día\",\n    agenda: \"Agenda\",\n    date: \"Fecha\",\n    time: \"Hora\",\n    event: \"Evento\",\n    noEventsInRange: \"No hay eventos en este rango\",\n    showMore: (total) => `+ Ver más (${total})`,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getNameFactory, getNameMachine, getNameSection } from \"../../helpers/helpersHistorical\";\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { factories, sections, machines } = useSelector(state => state.factory);\n\n    const [data, setData] = useState({ factoryComponent: '', sectionComponent: '', machineComponent: '' });\n    const { factoryComponent, sectionComponent, machineComponent } = data;\n\n    useEffect(() => {\n        if (event && factories.length > 0 && sections.length > 0 && machines.length > 0) {\n\n            setData({\n                factoryComponent: getNameFactory(event.factory, factories)?.name,\n                sectionComponent: getNameSection(event.section, sections)?.name,\n                machineComponent: getNameMachine(event.machine, machines)?.name\n            });\n\n        }\n    }, [event, factories, machines, sections])\n\n    return (\n        <div>\n            <strong>F{factoryComponent} - {sectionComponent} -</strong>\n            <span> {machineComponent}</span>\n        </div>\n    );\n};\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// Big-Calendar dependencies\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { messages } from '../helpers/calendar-messages';\n\n// Import Spanish texts for days and months\nimport \"moment/locale/es\";\n\nimport { CalendarEvent } from '../components/calendar/CalendarEvent';\nimport { CalendarModal } from '../components/calendar/CalendarModal';\nimport { uiOpenModal } from '../actions/ui';\nimport { setActiveEvent } from '../actions/calendar';\nimport { getEventColor } from '../helpers/getEventColor';\nimport { disableScroll } from '../helpers/disable-enable-scroll';\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\n\n\nexport const CalendarScreen = () => {\n\n    // Get events array from Redux Store\n    const { events } = useSelector(state => state.calendar);\n    const { types } = useSelector(state => state.calendar);\n\n    const dispatch = useDispatch();\n\n    // Set active event on Redux Store calendar: events[], activeEvent = event\n    // then => Open modal\n    const handleEventClick = (event) => {\n        disableScroll();\n        dispatch(setActiveEvent(event));\n        dispatch(uiOpenModal());\n    };\n\n    // Calendar events style\n    const eventStyleGetter = (event, start, end, isSelected) => {\n\n        const { backgroundColor, textColor } = getEventColor(event, types);\n\n        const style = {\n            backgroundColor: backgroundColor,\n            borderRadius: \"5px\",\n            opacity: 0.8,\n            display: \"block\",\n            color: textColor,\n        };\n        return {\n            style,\n        };\n    };\n    // Save last position in localStorage\n    const [lastView, setLastView] = useState(localStorage.getItem(\"lastView\") || \"month\");\n\n    // When the view changes, save the position in localStorage\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem(\"lastView\", e);\n    };\n\n    return (\n        <div className='calendar-screen animate__animated animate__fadeIn'>\n            <h1>Calendario</h1>\n            <Calendar\n                defaultDate={moment().toDate()}\n                defaultView=\"month\"\n                events={events}\n                localizer={localizer}\n                eventPropGetter={eventStyleGetter}\n                messages={messages}\n                components={{ event: CalendarEvent }}\n                onSelectEvent={handleEventClick}\n                onView={onViewChange}\n                view={lastView}\n                startAccessor='start'\n                endAccessor='end'\n            />\n            <CalendarModal />\n        </div>\n    )\n}\n","\n// Depends on orderType of the event, color badge on calendar will be different\nexport const getEventColor = (event, types) => {\n\n    let colors = {\n        backgroundColor: '#0E377F',\n        textColor: 'white'\n    }\n\n    if (types && types.length > 0) {\n        const typeId = event.orderType;\n\n        const type = types.find(type => type.id === typeId);\n\n        if (type) {\n            switch (type.name) {\n                // orange\n                case 'Directiva':\n                    colors.backgroundColor = '#FACC2E';\n                    break;\n                // blue\n                case 'Planificada':\n                    colors.backgroundColor = '#0E377F';\n                    break;\n                // green\n                case 'Preventiva':\n                    colors.backgroundColor = '#31B404';\n                    break;\n                // red\n                case 'Correctiva':\n                    colors.backgroundColor = '#FF4000';\n                    break;\n                // turquoise\n                case 'Otros':\n                    colors.backgroundColor = '#04B4AE';\n                    break;\n                // break white\n                default:\n                    colors.backgroundColor = '#000';\n                    break;\n            }\n\n        }\n\n    }\n\n    return colors;\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearActiveTechnician } from '../../actions/technician';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const ButtonNew = ({ iconData }) => {\n\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n\n        dispatch(clearActiveTechnician());\n        dispatch(uiOpenModal());\n\n    }\n\n    return (\n        <div className={iconData.className} onClick={handleClick}>\n            {iconData.icon}\n        </div>\n    )\n}\n\n\n","\n// If the file is not an valid extension or biger than 2mb, will throw a error message\n// If is ok, will return a promise, because is waiting for set the loading gif on img and then\n// set the new image on image src attribute\nexport const checkImageSizeAndType = async (file) => {\n\n    if (isImage(file.type)) {\n\n        if (checkSize(file.size)) {\n            const src = URL.createObjectURL(file);\n            document.querySelector('.technician-img').src = `${process.env.PUBLIC_URL}/assets/images/loader.gif`;\n\n            return new Promise(resolve => setTimeout(() => {\n                document.querySelector('.technician-img').src = src;\n                resolve({\n                    ok: true\n                });\n            }, 400))\n\n        } else {\n            return ({\n                ok: false,\n                error: 'Error, el tamaño máximo de imagen es de 2.0MB'\n            });\n        }\n\n    } else {\n        return ({\n            res: false,\n            error: 'Error, extensiones soportadas .jpg, .png y .jpeg'\n        });\n    }\n\n}\n\n// Valid image *.png, *.jpg, *.jpeg\nconst isImage = (imgType) => {\n\n    if (imgType === 'image/png' || imgType === 'image/jpg' || imgType === 'image/jpeg') {\n        return true;\n    } else {\n        return false;\n    }\n\n}\n// Image size between > 0 and 2mb\nconst checkSize = (size) => {\n    if (size <= 2000000 && size > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearActiveTechnician, startAddTechnician, startDeleteTechnician, startUpdateTechnician } from '../../actions/technician';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\n\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { checkImageSizeAndType } from '../../helpers/checkImageSizeAndType';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n// minified version is also included\n// import 'react-toastify/dist/ReactToastify.min.css';\n\nimport moment from 'moment';\n\nimport validator from 'validator';\nimport { ModalToastify } from '../ui/ModalToastify';\n\nconst initialState = {\n    name: '',\n    surname: '',\n    birthDate: new Date(),\n    identityDocument: '',\n    phoneNumber: '',\n    email: '',\n    city: '',\n    address: '',\n    image: null,\n    notes: '',\n    schedule: 'default',\n    factory: 'default',\n}\n\nexport const CrewModal = () => {\n\n    const [formValues, setFormValues] = useState(initialState);\n    const [file, setFile] = useState(null);\n    const {\n        name, surname, birthDate, identityDocument, phoneNumber,\n        email, city, address, image, notes, schedule, factory\n    } = formValues;\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeTechnician } = useSelector(state => state.crew);\n\n    const dispatch = useDispatch();\n\n    // If there is an activeTechnician on Store, Modal is opened => disableScroll and set the data\n    // If there is not activeTechnician, init the form with empty values\n    useEffect(() => {\n        if (activeTechnician) {\n            setFormValues(activeTechnician);\n        } else {\n            setFormValues(initialState);\n        }\n    }, [activeTechnician]);\n\n    // Update form values on type\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    // Detect when image file change and update picture \n    const handlePictureChange = async ({ target }) => {\n\n        if (target.files.length > 0) {\n\n            const tempFile = target.files[0];\n\n            // FILE max size: 2MB\n            const check = await checkImageSizeAndType(tempFile);\n\n            if (!check.ok) {\n                return toast.error(check.error, { position: toast.POSITION.TOP_CENTER });\n            }\n\n            setFile(target.files[0]);\n        }\n    }\n\n    // Update date on any change\n    const handleDateChange = (date) => {\n        setFormValues({\n            ...formValues,\n            birthDate: new Date(date)\n        });\n    }\n\n    // Delete technician from the Store\n    const handleDeleteTechnician = () => {\n        enableScroll();\n        dispatch(startDeleteTechnician());\n        dispatch(uiCloseModal());\n    }\n\n    // Will call tostify first to confirm the option the user will choose. Cancel or Deny.\n    const handleStartDelete = () => {\n        toast.warn(<ModalToastify\n            handleDeleteItem={handleDeleteTechnician}\n            code={`${activeTechnician.name} ${activeTechnician.surname}`}\n            message=\"Estás seguro de borrar el técnico con el nombre\" />,\n            {\n                position: toast.POSITION.TOP_CENTER,\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    // Check form values and Update or Create technician\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const dateValid = moment(birthDate).isValid();\n        const scheduleArray = ['L-D M-T-N', 'L-V JP', 'L-V M-T-N'];\n        const factoryArray = ['1', '2', '3'];\n\n        let failed = false;\n\n        if (!dateValid) {\n            document.querySelector('.datetime-technician').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('.datetime-technician').classList.remove('border-red');\n        }\n\n        if (name.trim().length <= 2) {\n            document.querySelector('input[name=\"name\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"name\"]').classList.remove('border-red');\n        }\n\n        if (surname.trim().length <= 2) {\n            document.querySelector('input[name=\"surname\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"surname\"]').classList.remove('border-red');\n        }\n\n        if (phoneNumber.trim().length <= 6) {\n            document.querySelector('input[name=\"surname\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"surname\"]').classList.remove('border-red');\n        }\n\n        if (!validator.isEmail(email)) {\n            document.querySelector('input[name=\"email\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"email\"]').classList.remove('border-red');\n        }\n\n        if (!validator.isMobilePhone(phoneNumber, 'es-ES')) {\n            document.querySelector('input[name=\"phoneNumber\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"phoneNumber\"]').classList.remove('border-red');\n        }\n\n        if (!validator.isIdentityCard(identityDocument, 'ES')) {\n            document.querySelector('input[name=\"identityDocument\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('input[name=\"identityDocument\"]').classList.remove('border-red');\n        }\n\n        if (factoryArray.indexOf(factory.toString()) < 0) {\n            document.querySelector('select[name=\"factory\"]').classList.add('border-red');\n            failed = true;\n        } else {\n            document.querySelector('select[name=\"factory\"]').classList.remove('border-red');\n        }\n\n        if (scheduleArray.indexOf(schedule) < 0) {\n            failed = true;\n            document.querySelector('select[name=\"schedule\"]').classList.add('border-red');\n        } else {\n            document.querySelector('select[name=\"schedule\"]').classList.remove('border-red');\n        }\n\n        if (failed) {\n            return toast.error('Revise los campos señalados en rojo', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        // Add new technician\n        if (!activeTechnician) {\n            dispatch(startAddTechnician(formValues, file));\n        } else {\n            dispatch(startUpdateTechnician(formValues, file));\n        }\n\n        setFile(null);\n        enableScroll();\n        dispatch(uiCloseModal());\n\n\n        setTimeout(() => {\n            setFormValues(initialState);\n        }, 150);\n    }\n\n    const handleCloseModal = () => {\n        enableScroll();\n        dispatch(uiCloseModal());\n\n        setTimeout(() => {\n            setFormValues(initialState);\n            dispatch(clearActiveTechnician());\n        }, 150);\n    }\n\n\n    return (\n        <div>\n            <Modal\n                isOpen={modalOpen}\n                className='modal animate__animated animate__fadeIn animate__faster'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n                <div className=\"frame\">\n\n                    <h1 className=\"h1-modal\">{!activeTechnician ? 'Nuevo técnico' : 'Editar Técnico'}</h1>\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <form className=\"crew-form\" onSubmit={handleSubmit}>\n\n                        <div className=\"form-wrapper-1\">\n\n                            <div className=\"img-wrapper\">\n                                <img className=\"technician-img\"\n                                    src={image === null ? `${process.env.PUBLIC_URL}/assets/images/user-default.png` : `${process.env.PUBLIC_URL}/assets/images/${image}`}\n                                    alt={`mtile-technician`}\n                                    onChange={handleInputChange} />\n                            </div>\n\n                            <div className=\"form-wrapper-data\">\n\n                                <div className=\"form-wrapper-name\">\n                                    <label>Nombre: </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"name\"\n                                        autoComplete=\"off\"\n                                        value={name}\n                                        onChange={handleInputChange} />\n                                </div>\n\n                                <div className=\"form-wrapper-surname\">\n                                    <label>Apellidos: </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"surname\"\n                                        autoComplete=\"off\"\n                                        value={surname}\n                                        onChange={handleInputChange} />\n                                </div>\n\n                                <div className=\"form-wrapper-birthdate\">\n                                    <label>Fecha Nac.: </label>\n\n                                    <Datetime\n                                        className=\"datetime-technician\"\n                                        value={moment(birthDate).format('DD-MM-yyyy')}\n                                        dateFormat=\"DD-MM-YYYY\"\n                                        timeFormat={false}\n                                        onChange={handleDateChange}\n                                        closeOnSelect={true} />\n                                </div>\n\n                                <div className=\"form-wrapper-identitydocument\">\n                                    <label>DNI: </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"identityDocument\"\n                                        autoComplete=\"off\"\n                                        value={identityDocument}\n                                        onChange={handleInputChange} />\n                                </div>\n\n                                <div className=\"form-wrapper-phone\">\n                                    <label>Tel. Móvil: </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"phoneNumber\"\n                                        autoComplete=\"off\"\n                                        value={phoneNumber}\n                                        onChange={handleInputChange} />\n                                </div>\n\n                                <div className=\"form-wrapper-mail\">\n                                    <label>Email: </label>\n                                    <input\n                                        type=\"email\"\n                                        name=\"email\"\n                                        autoComplete=\"off\"\n                                        value={email}\n                                        onChange={handleInputChange} />\n                                </div>\n                                <div className=\"form-wrapper-city\">\n                                    <label>Localidad: </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"city\"\n                                        autoComplete=\"off\"\n                                        value={city}\n                                        onChange={handleInputChange} />\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div className=\"form-wrapper-2\">\n\n                            <div className=\"form-wrapper-data-2-child\">\n                                <label>Dirección: </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"address\"\n                                    autoComplete=\"off\"\n                                    value={address}\n                                    onChange={handleInputChange} />\n                            </div>\n\n                            <div className=\"form-wrapper-data-2-child\">\n                                <label>Horario: </label>\n                                <select\n                                    name=\"schedule\"\n                                    value={schedule}\n                                    onChange={handleInputChange}>\n                                    <option value=\"default\" disabled>Seleccione Horario</option>\n                                    <option value=\"L-V M-T-N\">L-V M-T-N</option>\n                                    <option value=\"L-V JP\">L-V JP</option>\n                                    <option value=\"L-D M-T-N\">L-D M-T-N</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-wrapper-data-2-child\">\n                                <label>Factoría: </label>\n                                <select\n                                    name=\"factory\"\n                                    value={factory}\n                                    onChange={handleInputChange}>\n                                    <option value=\"default\" disabled>Seleccione Factoría</option>\n                                    <option value=\"1\">Factoría 1</option>\n                                    <option value=\"2\">Factoría 2</option>\n                                    <option value=\"3\">Factoría 3</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-wrapper-textarea\">\n                                <label>Observaciones: </label>\n                                <textarea\n                                    name=\"notes\"\n                                    value={notes}\n                                    onChange={handleInputChange}></textarea>\n                            </div>\n\n                            <div className={`form-wrapper-submit ${activeTechnician ? 'wrapper-flex-between' : 'wrapper-flex-end'}`}>\n\n                                {activeTechnician && <p className=\"btn btn-form-cancel\" onClick={handleStartDelete}>Borrar</p>}\n\n                                <div className=\"form-wrapper-file\">\n\n                                    <label className=\"btn-label-file\">\n                                        <input\n                                            type=\"file\"\n                                            name=\"img\"\n                                            onChange={handlePictureChange}\n                                            accept=\".jpg, .jpeg, .png\" />\n                                        <i className=\"fas fa-cloud-upload-alt\"></i> Subir imagen\n                                    </label>\n\n                                    <button type=\"submit\" className=\"btn btn-form-agree\">{!activeTechnician ? 'Crear' : 'Actualizar'}</button>\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n                {modalOpen && <ToastContainer />}\n            </Modal>\n            {!modalOpen && <ToastContainer />}\n\n        </div>\n    )\n}\n","\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveTechnician } from '../actions/technician';\nimport { uiOpenModal } from '../actions/ui';\n\nimport { ButtonNew } from '../components/ui/ButtonNew';\nimport { CrewModal } from '../components/crew/CrewModal';\nimport { disableScroll } from '../helpers/disable-enable-scroll';\n\nexport const CrewScreen = () => {\n\n    const { technicians } = useSelector(state => state.crew);\n    const { admin } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    const openModalTechnician = (e) => {\n\n        const id = e.target.attributes[1].value;\n        const clickedTechnician = technicians.find((technician) => {\n            return technician.id.toString() === id;\n        });\n\n        dispatch(setActiveTechnician(clickedTechnician));\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    // Button Add new Technician\n    const iconData = {\n        icon: <i className=\"fas fa-user-plus\"></i>,\n        className: 'button-new technician'\n    }\n\n    return (\n        <>\n            <h1 className=\"technician-h1\">Técnicos</h1>\n            <div className=\"crew-wrapper animate__animated animate__fadeIn\">\n\n                {\n                    technicians.map((technician) => {\n\n                        return (\n                            <div key={technician.id} className=\"technician-wrapper\">\n\n                                <div className=\"technician-name-surname\">\n                                    <span>{technician.surname},</span>\n                                    <span>{technician.name}</span>\n                                    <span></span>\n                                </div>\n\n                                <img src={technician.image === null\n                                    ? `${process.env.PUBLIC_URL}/assets/images/user-default.png`\n                                    : `${process.env.PUBLIC_URL}/assets/images/${technician.image}`}\n                                    alt={`${technician.name}`}\n                                />\n\n                                {\n                                    admin\n                                    &&\n                                    <div className=\"wrapper-technician-button\">\n                                        <button className=\"btn btn-detail-crew\" data-id={technician.id} onClick={openModalTechnician}>Ver más</button>\n                                    </div>\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div >\n            {\n                admin && <ButtonNew iconData={iconData} page=\"crew\" />\n            }\n            <CrewModal />\n        </>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTable, usePagination } from 'react-table';\nimport { uiOpenModal } from '../../actions/ui';\nimport { setActiveItem } from '../../actions/warehouse';\n\n\nexport const Table = ({ columns, data }) => {\n\n    const { items } = useSelector(state => state.warehouse);\n    const dispatch = useDispatch();\n\n    const tableInstance = useTable({ columns, data }, usePagination);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        pageOptions,\n        page,\n        state: { pageIndex },\n        previousPage,\n        nextPage,\n        canPreviousPage,\n        canNextPage\n    } = tableInstance;\n\n    const handleRowClick = ({ target }) => {\n        const refElement = target.parentNode.childNodes[0].innerText;\n\n        const item = items.find(item => item.code === refElement);\n\n        dispatch(setActiveItem(item));\n        dispatch(uiOpenModal());\n    }\n\n    return (\n        <div className=\"table-wrapper\">\n            <table {...getTableProps()} >\n                <thead>\n                    {// Loop over the header rows\n                        headerGroups.map(headerGroup => (\n                            // Apply the header row props\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {// Loop over the headers in each row\n                                    headerGroup.headers.map(column => (\n                                        // Apply the header cell props\n                                        <th {...column.getHeaderProps()}>\n                                            {// Render the header\n                                                column.render('Header')}\n                                        </th>\n                                    ))}\n                            </tr>\n                        ))}\n                </thead>\n                {/* Apply the table body props */}\n                <tbody {...getTableBodyProps()}>\n                    {// Loop over the table rows\n                        page.map(row => {\n                            // Prepare the row for display\n                            prepareRow(row)\n                            return (\n                                // Apply the row props\n                                <tr {...row.getRowProps()} onClick={handleRowClick}>\n                                    {// Loop over the rows cells\n                                        row.cells.map(cell => {\n                                            // Apply the cell props\n                                            return (\n                                                <td {...cell.getCellProps()}>\n                                                    {// Render the cell contents\n                                                        cell.render('Cell')}\n                                                </td>\n                                            )\n                                        })}\n                                </tr>\n                            )\n                        })}\n                </tbody>\n            </table>\n            <div className=\"table-page-controls\">\n\n                <div className=\"table-buttons-wrapper\">\n                    <button className=\"btn btn-table\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n                        <i className=\"fas fa-chevron-left\"></i>\n                    </button>\n                    <button className=\"btn btn-table\" onClick={() => nextPage()} disabled={!canNextPage}>\n                        <i className=\"fas fa-chevron-right\"></i>\n                    </button>\n                </div>\n\n                <div className=\"table-page\">\n                    Página {pageIndex + 1} de {pageOptions.length}\n                </div>\n\n            </div >\n\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { removeActiveItem, startAddItem, startRemoveItem, startUpdateItem } from '../../actions/warehouse';\n\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { getColumnsTableWarehouse } from '../../helpers/getColumnsTables';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ModalToastify } from '../ui/ModalToastify';\n\n// minified version is also included\n// import 'react-toastify/dist/ReactToastify.min.css';\n\nconst initialState = { id: '', code: '', description: '', quantity: '', minStock: '', place: '' };\n\nexport const WarehouseModal = ({ setSearch }) => {\n\n    const { activeItem } = useSelector(state => state.warehouse);\n    const { modalOpen } = useSelector(state => state.ui);\n    const { admin } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n    const columns = getColumnsTableWarehouse;\n\n    const [formValues, setFormValues] = useState(initialState);\n    const { code, description, quantity, minStock, place } = formValues;\n\n    useEffect(() => {\n        if (activeItem) {\n            setFormValues(activeItem);\n        }\n    }, [activeItem]);\n\n    const handleCloseModal = () => {\n        dispatch(uiCloseModal());\n        enableScroll();\n\n        setTimeout(() => {\n            dispatch(removeActiveItem());\n            cleanFormValues();\n        }, 200);\n    }\n\n    // DeleteItem from Store and DB, closemodal and then clean form\n    const handleDeleteItem = () => {\n\n        if (activeItem) {\n            dispatch(startRemoveItem());\n        }\n\n        dispatch(uiCloseModal());\n        enableScroll();\n        cleanFormValues();\n        setSearch('');\n    }\n\n    // Will call tostify first to confirm the option the user will choose. Cancel or Deny.\n    const handleStartDelete = () => {\n        toast.warn(<ModalToastify handleDeleteItem={handleDeleteItem} code={activeItem.code} message=\"Estás seguro de borrar el Item con el código\" />, { position: toast.POSITION.TOP_CENTER, closeOnClick: false, autoClose: false, toastId: '1' });\n    }\n\n    // Clean Formvalues\n    const cleanFormValues = () => {\n        setFormValues(initialState);\n    }\n\n    // Check inputs and dispatch Update or New, depends on activeItem\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let isValid = true;\n\n        if (code.length <= 2) {\n            isValid = false;\n            document.querySelector('input[name=\"code\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"code\"]').classList.remove('border-red');\n        }\n        if (description.length <= 2) {\n            isValid = false;\n            document.querySelector('input[name=\"description\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"description\"]').classList.remove('border-red');\n        }\n        if (quantity.length === 0 && !isNaN(parseInt(quantity))) {\n            isValid = false;\n            document.querySelector('input[name=\"quantity\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"quantity\"]').classList.remove('border-red');\n        }\n        if (minStock.length === 0 && !isNaN(parseInt(minStock))) {\n            isValid = false;\n            document.querySelector('input[name=\"minStock\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"minStock\"]').classList.remove('border-red');\n        }\n        if (place.length <= 0) {\n            isValid = false;\n            document.querySelector('input[name=\"place\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"place\"]').classList.remove('border-red');\n        }\n\n        if (!isValid) {\n            return toast.error('Revise los campos señalados en rojo', {\n                position: toast.POSITION.TOP_CENTER\n            });\n        }\n\n        if (activeItem) {\n            dispatch(startUpdateItem(formValues));\n        } else {\n            dispatch(startAddItem(formValues));\n        }\n\n        dispatch(uiCloseModal());\n        dispatch(removeActiveItem());\n\n        setTimeout(() => {\n            cleanFormValues();\n        }, 300);\n\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    return (\n        <div>\n            <Modal\n                isOpen={modalOpen}\n                className='modal-warehouse animate__animated animate__fadeIn animate__fast'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n\n                <div className=\"frame\">\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <h1 className=\"h1-modal\">{activeItem\n                        ? admin\n                            ? 'Editar Item' : 'Ver Item'\n                        : 'Agregar Item'}\n                    </h1>\n\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"thead-modal\">\n                            <div className=\"grid-items\">\n                                <label>{columns[0].Header}:</label>\n                                <input type=\"text\" value={code} name=\"code\" disabled={activeItem} onChange={handleInputChange} />\n                            </div>\n                            <div className=\"grid-items\">\n                                <label>{columns[1].Header}:</label>\n                                <input type=\"text\" value={description} disabled={!admin} name=\"description\" onChange={handleInputChange} />\n                            </div>\n                            <div className=\"grid-items\">\n                                <label>{columns[2].Header}:</label>\n                                <input type=\"number\" value={quantity} disabled={!admin} name=\"quantity\" onChange={handleInputChange} />\n                            </div>\n                            <div className=\"grid-items\">\n                                <label>{columns[3].Header}:</label>\n                                <input type=\"number\" value={minStock} disabled={!admin} name=\"minStock\" onChange={handleInputChange} />\n                            </div>\n                            <div className=\"grid-items\">\n                                <label>{columns[4].Header}:</label>\n                                <input type=\"text\" value={place} disabled={!admin} name=\"place\" onChange={handleInputChange} />\n                            </div>\n                        </div>\n\n                        <div className={`wrapper-buttons-warehouse ${!activeItem ? 'alone' : ''}`}>\n                            {activeItem && admin && <span className=\"btn btn-form-cancel\" onClick={handleStartDelete}>Eliminar</span>}\n\n                            {admin && <button type=\"submit\" className=\"btn btn-form-agree\">{activeItem ? 'Actualizar' : 'Guardar'}</button>}\n                        </div>\n\n                    </form>\n                </div>\n\n                {modalOpen && <ToastContainer />}\n            </Modal>\n            {!modalOpen && <ToastContainer />}\n        </div>\n    )\n}\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startGetWarehouseItems } from '../actions/warehouse';\nimport { ButtonNew } from '../components/ui/ButtonNew';\nimport { Table } from '../components/warehouse/Table';\nimport { WarehouseModal } from '../components/warehouse/WarehouseModal';\nimport { getColumnsTableWarehouse } from '../helpers/getColumnsTables';\n\n\nexport const WarehouseScreen = () => {\n\n    // Header columns for the table of items\n    const columns = getColumnsTableWarehouse;\n\n    const [searchResults, setSearchResults] = useState([]);\n    const [search, setSearch] = useState('');\n\n    const dispatch = useDispatch();\n\n    const { items } = useSelector(state => state.warehouse);\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeItem } = useSelector(state => state.warehouse);\n    const { admin } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(startGetWarehouseItems());\n    }, [dispatch]);\n\n    useEffect(() => {\n        // When input search have text, will check value of column code and description\n        // looking for matches.\n\n        // When the input is empty, will return an empty array.\n        if (search) {\n            const rows = items.filter((value) => {\n                if (\n                    (value.code !== '' && value.code.toLowerCase().includes(search.toLowerCase()))\n                    ||\n                    (value.description !== '' && value.description.toLowerCase().includes(search.toLowerCase()))) {\n\n                    return value;\n                } else {\n                    return false;\n                }\n\n            });\n            setSearchResults(rows);\n        } else {\n            setSearchResults([]);\n        }\n\n    }, [search, items]);\n\n    // Input search value will update the State on every change\n    const handleInputChange = ({ target }) => {\n        setSearch(target.value);\n    }\n\n    // State for animation input show/hide\n    const [showed, setShowed] = useState(false);\n\n    const showIn = () => {\n        setShowed(true);\n        if (!modalOpen) {\n            document.querySelector('.finder').focus();\n        }\n    }\n    const hideOut = () => {\n        if (search.length === 0) {\n            setShowed(false);\n        }\n    }\n\n    // Button Add new Item\n    const iconData = {\n        icon: <i className=\"far fa-plus-square\"></i>,\n        className: 'button-new new',\n    }\n\n    return (\n        <div className='animate__animated animate__fadeIn'>\n            <h1 className=\"h1-warehouse\">Almacén</h1>\n\n            <div className=\"wrapper-stock-finder\">\n                <input\n                    type=\"search\"\n                    name=\"search\"\n                    className={`finder ${showed && 'showw'}`}\n                    onBlur={hideOut}\n                    value={search}\n                    onChange={handleInputChange}\n                    autoComplete=\"off\"\n                />\n\n                <i className={`fas fa-search ${showed && 'hidee'}`} onClick={showIn} ></i>\n            </div>\n            <div className=\"separator\"></div>\n\n            {\n                (searchResults.length > 0 && columns.length > 0)\n                    ? <Table columns={columns} data={searchResults} />\n                    :\n                    <h3 className=\"h3-warehouse animate__animated animate__fadeInUpBig animate__faster\">{\n                        search.length === 0\n                            ? 'Pulsa la lupa para comenzar la búsqueda'\n                            : 'No se han encontrado coincidencias'}\n                    </h3>\n            }\n\n            {!activeItem && admin && <ButtonNew iconData={iconData} />}\n\n            <WarehouseModal setSearch={setSearch} />\n        </div>\n\n\n    )\n}\n","import moment from 'moment';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTable, usePagination, useSortBy } from 'react-table';\nimport { setActiveEvent } from '../../actions/calendar';\nimport { uiOpenModal } from '../../actions/ui';\nimport { disableScroll } from '../../helpers/disable-enable-scroll';\nimport { getOrderById } from '../../helpers/getOrderById';\nimport { getNameBreakdown, getNameFactory, getNameNumber, getNameOrderType, getNameSection } from '../../helpers/helpersHistorical';\nimport { CalendarModal } from '../calendar/CalendarModal';\n\n\nexport const TableHistorical = ({ columns, data }) => {\n\n    const { events } = useSelector(state => state.calendar);\n    const { types } = useSelector(state => state.calendar);\n    const { breakdowns } = useSelector(state => state.calendar);\n    const { factories } = useSelector(state => state.factory);\n    const { sections } = useSelector(state => state.factory);\n    const { numbers } = useSelector(state => state.factory);\n    const { machines } = useSelector(state => state.factory);\n\n    const dispatch = useDispatch();\n\n    const tableInstance = useTable({ columns, data, initialState: { pageSize: 15 } }, useSortBy, usePagination,);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        pageOptions,\n        page,\n        state: { pageIndex },\n        previousPage,\n        nextPage,\n        canPreviousPage,\n        canNextPage\n    } = tableInstance;\n\n\n    // Get the data-id attribute from the <td> and search the order in the store\n    const handleRowClick = ({ target }) => {\n\n        const orderId = target.attributes[0].nodeValue;\n\n        if (!orderId || !events || events.length < 1 || events === undefined) {\n            return;\n        }\n        const order = getOrderById(orderId, events);\n\n        dispatch(setActiveEvent(order));\n        dispatch(uiOpenModal());\n        disableScroll();\n    }\n\n    return (\n        <div className=\"table-wrapper\">\n            <CalendarModal />\n\n            <table {...getTableProps()} >\n                <thead>\n                    {// Loop over the header rows\n                        headerGroups.map(headerGroup => (\n                            // Apply the header row props\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {// Loop over the headers in each row\n                                    headerGroup.headers.map(column => (\n                                        // Apply the header cell props\n                                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                            {// Render the header\n                                                column.render('Header')}\n                                        </th>\n                                    ))}\n                            </tr>\n                        ))}\n                </thead>\n                {/* Apply the table body props */}\n\n                {\n                    types && breakdowns && factories && sections && numbers && machines\n\n                    &&\n                    <tbody {...getTableBodyProps()}>\n                        {// Loop over the table rows\n                            page.map(row => {\n                                // Prepare the row for display\n                                prepareRow(row)\n                                return (\n                                    // Apply the row props\n                                    <tr {...row.getRowProps()} onClick={handleRowClick}>\n                                        {// Loop over the rows cells\n                                            row.cells.map((cell, i) => {\n\n                                                // each case will call their own method to parse the data \n                                                // from an ID to the name property\n                                                switch (cell.column.id) {\n\n                                                    // The attribute data-id must be first of other attributes, or the method onClick \n                                                    // is possible that will fail\n                                                    case 'start':\n                                                        return <td key={i} data-id={cell.row.original.id}>{moment(cell.value).format(\"DD-MM-YYYY HH:mm\").toString()}</td>;\n\n                                                    case 'orderType':\n                                                        const { name: orderType } = getNameOrderType(cell.value, types);\n                                                        return <td key={i} data-id={cell.row.original.id}>{orderType}</td>;\n\n                                                    case 'breakdown':\n                                                        const { name: breakdownType } = getNameBreakdown(cell.value, breakdowns);\n                                                        return <td key={i} data-id={cell.row.original.id}>{breakdownType}</td>;\n\n                                                    case 'factory':\n                                                        const { name: factoryName } = getNameFactory(cell.value, factories);\n                                                        return <td key={i} data-id={cell.row.original.id} className=\"text-center\">{factoryName}</td>;\n\n                                                    case 'section':\n                                                        const { name: sectionName } = getNameSection(cell.value, sections);\n                                                        return <td key={i} data-id={cell.row.original.id}>{sectionName}</td>;\n\n                                                    case 'number':\n                                                        const { number: sectionNumber } = getNameNumber(cell.value, numbers);\n                                                        return <td key={i} data-id={cell.row.original.id} className=\"text-center\">{sectionNumber}</td>;\n\n                                                    case 'machine':\n                                                        const { name: machineName } = getNameNumber(cell.value, machines);\n                                                        return <td key={i} data-id={cell.row.original.id}>{machineName}</td>;\n\n                                                    case 'totalMins':\n                                                        return <td key={i} data-id={cell.row.original.id} className=\"text-right\">{cell.value} min.</td>;\n\n                                                    case 'closed':\n                                                        return <td key={i} data-id={cell.row.original.id} className=\"text-center padlocks-history\">\n                                                            {cell.value ? <i data-id={cell.row.original.id} className=\"fas fa-lock\"></i> : <i data-id={cell.row.original.id} className=\"fas fa-lock-open\"></i>}\n                                                        </td>;\n\n                                                    default:\n                                                        // Apply the cell props\n                                                        return (\n                                                            <td {...cell.getCellProps()}>\n                                                                {// Render the cell contents\n                                                                    cell.render('Cell')}\n                                                            </td>\n                                                        )\n                                                }\n\n                                            })}\n                                    </tr>\n                                )\n                            })}\n                    </tbody>\n\n                }\n\n            </table>\n            <div className=\"table-page-controls\">\n\n                <div className=\"table-buttons-wrapper\">\n                    <button className=\"btn btn-table\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n                        <i className=\"fas fa-chevron-left\"></i>\n                    </button>\n                    <button className=\"btn btn-table\" onClick={() => nextPage()} disabled={!canNextPage}>\n                        <i className=\"fas fa-chevron-right\"></i>\n                    </button>\n                </div>\n\n                <div className=\"table-page\">\n                    Página {pageIndex + 1} de {pageOptions.length}\n                </div>\n\n            </div >\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { getColumnsTableHistorical } from '../helpers/getColumnsTables';\nimport { useSelector } from 'react-redux';\nimport { TableHistorical } from '../components/historical/TableHistorical';\n\n\nexport const HistoricalScreen = () => {\n\n    const columns = getColumnsTableHistorical;\n    const { events } = useSelector(state => state.calendar);\n\n    return (\n        <div className='historical-main-container animate__animated animate__fadeIn'>\n            <h1 className='h1-historical'>Histórico de órdenes</h1>\n            {\n                events.length > 0 && <TableHistorical columns={columns} data={events} />\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport Chart from \"react-apexcharts\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startloadingStatistics } from '../actions/statistics';\n\n\nexport const StatisticsScreen = () => {\n\n\n    const dispatch = useDispatch();\n    const {\n        weeks,\n        threeWeekSections,\n        lastWeekByOrderType,\n        interventionsWeeks,\n        totalTimeByWeek,\n        lastWeekByBreakdown,\n        lastWeekByTechnician,\n    } = useSelector(state => state.statistics);\n\n    const { weeksIntervetions, weeksInterventionsCounts } = interventionsWeeks;\n    const { weeksTime, weeksTotalTime } = totalTimeByWeek;\n    const [showLabels, setShowLabels] = useState(true);\n\n    useEffect(() => {\n        dispatch(startloadingStatistics());\n    }, [dispatch])\n\n    useEffect(() => {\n        const width = window.innerWidth;\n\n        if (width < 500) {\n            setShowLabels(false);\n        }\n    }, []);\n\n    const optionsDonutOrderType = {\n        title: {\n            text: 'Intervenciones',\n            style: {\n                fontSize: '11px',\n                fontWeight: 'bold',\n                fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n        labels: lastWeekByOrderType.names,\n        chart: {\n            toolbar: {\n                show: true,\n                offsetX: 0,\n                offsetY: 0,\n            }\n        },\n        legend: {\n            show: showLabels\n        }\n    };\n\n    const optionsDonutBreakdown = {\n        title: {\n            text: 'Averías',\n            style: {\n                fontSize: '11px',\n                fontWeight: 'bold',\n                fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n        labels: lastWeekByBreakdown.names,\n        chart: {\n            toolbar: {\n                show: true,\n                offsetX: 0,\n                offsetY: 0,\n            }\n        },\n        legend: {\n            show: showLabels\n        }\n    };\n\n    const optionsDonutTechnician = {\n        series: lastWeekByTechnician.quantities,\n        options: {\n            title: {\n                text: 'Intervenciones',\n                style: {\n                    fontSize: '11px',\n                    fontWeight: 'bold',\n                    fontFamily: undefined,\n                    color: '#263238'\n                },\n            },\n            legend: {\n                show: showLabels\n            },\n            chart: {\n                type: 'polarArea',\n                toolbar: {\n                    show: true,\n                    offsetX: 0,\n                    offsetY: 0,\n                }\n            },\n            stroke: {\n                colors: ['#fff']\n            },\n            fill: {\n                opacity: 0.8\n            },\n            labels: lastWeekByTechnician.names,\n            responsive: [{\n                breakpoint: 480,\n                options: {\n                    chart: {\n                        width: 200\n                    },\n                    legend: {\n                        position: 'bottom'\n                    }\n                }\n            }]\n        },\n    };\n\n    const optionsBar = {\n        chart: {\n            type: 'bar',\n            height: 350\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '55%',\n                endingShape: 'rounded'\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent']\n        },\n        xaxis: {\n            categories: weeks,\n            title: {\n                text: 'Semana'\n            }\n        },\n        yaxis: {\n            title: {\n                text: 'Intervenciones'\n            }\n        },\n        fill: {\n            opacity: 1\n        },\n        tooltip: {\n            y: {\n                formatter: function (val) {\n                    return val + \" intervenciones\"\n                }\n            }\n        },\n        legend: {\n            show: showLabels, position: \"bottom\",\n            containerMargin: {\n                top: 30\n            }\n        },\n        responsive: [\n            {\n                breakpoint: 500,\n                options: {\n                    legend: {\n                        fontSize: \"8px\"\n                    }\n                }\n            }\n        ]\n    };\n\n\n    const dataBarInterventionsWeeks = {\n        series: [{\n            data: weeksInterventionsCounts\n        }],\n        options: {\n            chart: {\n                height: 350,\n                type: 'bar',\n                events: {\n                    click: function (chart, w, e) {\n                        // console.log(chart, w, e)\n                    }\n                }\n            },\n            colors: ['#028ffb', '#ff4560', '#feb019', '#01e396'],\n            plotOptions: {\n                bar: {\n                    columnWidth: '45%',\n                    distributed: true,\n                }\n            },\n            dataLabels: {\n                enabled: false\n            },\n            legend: {\n                show: false\n            },\n            yaxis: {\n                title: {\n                    text: 'Intervenciones'\n                }\n            },\n            xaxis: {\n                categories: weeksIntervetions,\n                labels: {\n                    style: {\n                        colors: ['#028ffb', '#ff4560', '#feb019', '#01e396'],\n                        fontSize: '12px'\n                    }\n                },\n                title: {\n                    text: 'Semana'\n                }\n            }\n        }\n    }\n\n    const dataBarTotalTimeWeeks = {\n\n        series: [{\n            name: \"Horas\",\n            data: weeksTotalTime\n        }],\n        options: {\n            chart: {\n                height: 350,\n                type: 'line',\n                zoom: {\n                    enabled: false\n                }\n            },\n            plotOptions: {\n                bar: {\n                    columnWidth: '45%',\n                    distributed: true,\n                }\n            },\n            dataLabels: {\n                enabled: false\n            },\n            legend: {\n                show: false\n            },\n            yaxis: {\n                title: {\n                    text: 'Horas'\n                }\n            },\n            xaxis: {\n                categories: weeksTime,\n\n                title: {\n                    text: 'Semana'\n                }\n            }\n        }\n    }\n\n\n\n    return (\n\n        <div className='animate__animated animate__fadeIn dashboard-screen'>\n\n            <h1>Estadísticas</h1>\n\n            <div className='main-content_dashboard'>\n\n                <div className=\"charts\">\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Intervenciones por sección/semana</h3>\n\n                        {\n                            threeWeekSections.length > 0 && weeks.length > 0 &&\n                            < Chart\n                                options={optionsBar}\n                                series={threeWeekSections}\n                                type=\"bar\"\n                                width=\"100%\"\n                            />\n                        }\n\n                    </div>\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Intervenciones semana previa</h3>\n\n                        {\n                            lastWeekByOrderType && lastWeekByOrderType?.quantities?.length > 0 && lastWeekByOrderType.names.length > 0 &&\n\n                            <Chart\n                                className=\"chart-pie\"\n                                options={optionsDonutOrderType}\n                                series={lastWeekByOrderType.quantities}\n                                type=\"donut\"\n                                width=\"100%\"\n                            />\n                        }\n                    </div>\n                </div>\n\n                <div className=\"charts2 mt-3\">\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Total intervenciones/semana</h3>\n\n                        {\n                            interventionsWeeks && weeksIntervetions?.length > 0 && weeksInterventionsCounts?.length > 0 &&\n\n\n                            < Chart\n                                options={dataBarInterventionsWeeks.options}\n                                series={dataBarInterventionsWeeks.series}\n                                type=\"bar\"\n                                width=\"100%\"\n                            />\n\n                        }\n                    </div>\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Total horas/semana intervenciones</h3>\n                        {\n                            totalTimeByWeek && weeksTime?.length > 0 && weeksTotalTime.length > 0 &&\n\n\n                            < Chart\n                                options={dataBarTotalTimeWeeks.options}\n                                series={dataBarTotalTimeWeeks.series}\n                                type=\"line\"\n                                width=\"100%\"\n                            />\n\n                        }\n                    </div>\n                </div>\n\n                <div className=\"charts2 mt-3\">\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Intervenciones por técnico semana previa</h3>\n\n                        {\n                            lastWeekByTechnician && lastWeekByTechnician?.quantities?.length > 0 && lastWeekByTechnician.names.length > 0 &&\n\n                            <Chart\n                                className=\"chart-pie\"\n                                options={optionsDonutTechnician.options}\n                                series={optionsDonutTechnician.series}\n                                type=\"polarArea\"\n                                width=\"100%\"\n                            />\n                        }\n\n                    </div>\n                    <div className=\"chart-wrapper\">\n                        <h3 className=\"h3-dashboard charts-header\">Tipo averías semana previa</h3>\n\n                        {\n                            lastWeekByBreakdown && lastWeekByBreakdown?.quantities?.length > 0 && lastWeekByBreakdown.names.length > 0 &&\n\n                            <Chart\n                                className=\"chart-pie\"\n                                options={optionsDonutBreakdown}\n                                series={lastWeekByBreakdown.quantities}\n                                type=\"donut\"\n                                width=\"100%\"\n                            />\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport const Error404Screen = () => {\n\n    const history = useHistory();\n\n    return (\n        <div className='screen-404 animate__animated animate__fadeIn'>\n\n            <div className=\"bg-black\">\n                <img className=\"bg-404\" src={`${process.env.PUBLIC_URL}/assets/images/404.jpg`} alt=\"bg\" />\n\n                <div className=\"info-404\">\n                    <h1>404</h1>\n                    <p className=\"text-info\">Página no encontrada</p>\n\n                    <div className=\"buttons-404\">\n                        <Link to='/'>Volver al Dashboard</Link>\n                        <p onClick={() => { history.goBack() }}>Volver atrás</p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\n//const pdfjs = import('pdfjs-dist/build/pdf');\nconst pdfjsWorker = import('pdfjs-dist/build/pdf.worker.entry');\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nexport const PdfLoader = ({ pdf }) => {\n\n    // eslint-disable-next-line no-unused-vars\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n\n    useEffect(() => {\n        setPageNumber(1);\n    }, [pdf]);\n\n    function onDocumentLoadSuccess({ numPages }) {\n        setNumPages(numPages);\n        setPageNumber(1);\n    }\n\n    return (\n        <>\n            <Document\n                file={`${process.env.PUBLIC_URL}/assets/docs/${pdf.name}`}\n                loading={<img src={`${process.env.PUBLIC_URL}/assets/images/loader.gif`} alt=\"loading\" />}\n                onLoadSuccess={onDocumentLoadSuccess}\n                error={<p>Error al cargar el archivo</p>}\n                renderMode=\"svg\"\n            >\n                <Page pageNumber={pageNumber} />\n                <span className=\"pdf-title\">{pdf.info}</span>\n            </Document>\n        </>\n    );\n\n}\n","import React, { useEffect, useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\nimport { useSelector } from 'react-redux';\n\nconst pdfjsWorker = import('pdfjs-dist/build/pdf.worker.entry');\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nexport const PdfPage = ({ file }) => {\n\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const { modalOpen } = useSelector(state => state.ui)\n\n    useEffect(() => {\n        setPageNumber(1);\n    }, [file]);\n\n    function onDocumentLoadSuccess({ numPages }) {\n        setNumPages(numPages);\n        setPageNumber(1);\n    }\n\n    function changePage(offset) {\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\n    }\n\n    function previousPage() {\n        changePage(-1);\n    }\n\n    function nextPage() {\n        changePage(1);\n    }\n\n    return (\n        <>\n            <Document\n                file={`${process.env.PUBLIC_URL}/assets/docs/${file}`}\n                loading={<img src={`${process.env.PUBLIC_URL}/assets/images/loader.gif`} alt=\"loading\" />}\n                onLoadSuccess={onDocumentLoadSuccess}\n                error={<p>Error al cargar el archivo</p>}\n                renderMode=\"canvas\"\n            >\n                <Page pageNumber={pageNumber} >\n                    {modalOpen\n\n                        &&\n                        <div className=\"pdf-page-buttons\">\n                            <button className=\"left-arrow\" disabled={pageNumber <= 1} onClick={previousPage}>\n                                <i className=\"fas fa-chevron-left\"></i>\n                            </button>\n\n                            <span className=\"info-pages\">\n                                {pageNumber || (numPages ? 1 : '--')} de {numPages || '--'}\n                            </span>\n\n                            <button className=\"right-arrow\" disabled={pageNumber >= numPages} onClick={nextPage}>\n                                <i className=\"fas fa-chevron-right\"></i>\n                            </button>\n                        </div>\n\n                    }\n\n                </Page>\n            </Document>\n\n\n        </>\n    );\n\n}","import React from 'react'\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { clearActiveDoc, startDeleteDoc } from '../../actions/factory';\nimport { PdfPage } from './PdfPage';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { ModalToastify } from '../ui/ModalToastify';\n\n\n\nexport const PdfModal = ({ setShowModalDoc, resetData }) => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeDoc } = useSelector(state => state.factory);\n    const { admin } = useSelector(state => state.auth);\n\n    const handleCloseModal = () => {\n        enableScroll();\n        dispatch(uiCloseModal());\n        dispatch(clearActiveDoc());\n        setShowModalDoc(false);\n    }\n\n    const handleDeleteDoc = () => {\n        dispatch(startDeleteDoc());\n        enableScroll();\n        dispatch(uiCloseModal());\n        setShowModalDoc(false);\n        resetData();\n    }\n\n    // Will call tostify first to confirm the option the user will choose. Cancel or Deny.\n    const handleStartDelete = () => {\n        toast.warn(<ModalToastify\n            handleDeleteItem={handleDeleteDoc}\n            code={`${activeDoc.name} ${activeDoc.info}`}\n            message=\"Estás seguro de borrar el documento\" />,\n            {\n                position: \"top-center\",\n                closeOnClick: false,\n                autoClose: false,\n                toastId: '1'\n            });\n    }\n\n    return (\n        <div className=\"pdf-modal\">\n\n            {activeDoc && modalOpen\n                &&\n                <div className=\"info-wrapper\">\n                    <div className=\"pdf-header\">\n                        <i className=\"fas fa-arrow-left\" onClick={handleCloseModal}></i>\n                        <img src={`${process.env.PUBLIC_URL}/assets/images/pdf.png`} alt=\"pdf-icon\" />\n                        <span>{activeDoc.info}</span>\n                    </div>\n                    {\n                        admin\n                        && <div className=\"pdf-delete\" onClick={handleStartDelete}>\n                            <i className=\"far fa-trash-alt\"></i>\n                        </div>\n                    }\n\n                </div>\n            }\n\n            <Modal\n                isOpen={modalOpen}\n                className='modal-docs animate__animated animate__fadeIn animate__fast'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n                {activeDoc && <PdfPage file={activeDoc.name} />}\n                {modalOpen && <ToastContainer />}\n            </Modal>\n            {!modalOpen && <ToastContainer />}\n        </div>\n    )\n}\n","\nexport const checkFile = (file) => {\n\n    if (isPdf(file.type)) {\n        if (checkSize(file.size)) {\n            return { ok: true }\n        } else {\n            return { ok: false, error: 'El archivo excede la capacidad máxima de 150MB' };\n        }\n    } else {\n        return { ok: false, error: 'Sólo archivos PDF son soportados' };\n    }\n}\n\n\nconst isPdf = (type) => {\n    if (type === \"application/pdf\") {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst checkSize = (size) => {\n    if (size <= 150000000 && size > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { startAddFile, startLoadFactory } from '../../actions/factory';\nimport { uiCloseModal } from '../../actions/ui';\nimport { checkFile } from '../../helpers/checkDocSizeAndType';\nimport { enableScroll } from '../../helpers/disable-enable-scroll';\nimport { getSectionsByFactoryId } from '../../helpers/getSectionsByFactoryId';\n\n\nconst initialState = {\n    factory: 'default',\n    section: 'default',\n    info: ''\n}\n\nexport const PdfModalAdd = ({ resetData }) => {\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n\n    const { factories } = useSelector(state => state.factory);\n    const { sections } = useSelector(state => state.factory);\n\n    const [formValues, setFormValues] = useState(initialState)\n    const { factory, section, info } = formValues;\n    const [file, setFile] = useState(null);\n\n    const [selectedSections, setSelectedSections] = useState([]);\n\n    // Load and fecth factories, sections, machines and docs from DB\n    useEffect(() => {\n        dispatch(startLoadFactory());\n    }, [dispatch]);\n\n    const handleSubmit = (e) => {\n\n        let formIsValid = true;\n        e.preventDefault();\n\n        if (factory === 'default' || factory.length === 0) {\n            formIsValid = false;\n            document.querySelector('select[name=\"factory\"]').classList.add('border-red');\n        } else {\n            document.querySelector('select[name=\"factory\"]').classList.remove('border-red');\n        }\n\n        if (section === 'default' || section.length === 0) {\n            formIsValid = false;\n            document.querySelector('select[name=\"section\"]').classList.add('border-red');\n        } else {\n            document.querySelector('select[name=\"section\"]').classList.remove('border-red');\n        }\n\n        if (info.length === 0) {\n            formIsValid = false;\n            document.querySelector('input[name=\"info\"]').classList.add('border-red');\n        } else {\n            document.querySelector('input[name=\"info\"]').classList.remove('border-red');\n        }\n\n        if (!file && formIsValid) {\n            return toast.error('No se ha adjuntado ningún documento', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        if (!formIsValid) {\n            return toast.error('Revise los campos resaltados en rojo', { position: toast.POSITION.TOP_CENTER });\n        }\n\n        dispatch(startAddFile({ ...formValues, file }));\n        enableScroll();\n        resetData();\n        setFormValues(initialState);\n        dispatch(uiCloseModal());\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n\n        if (target.name === 'factory') {\n            setFormValues({ ...formValues, factory: target.value, section: 'default' });\n            const id = target.value;\n            const factorySections = getSectionsByFactoryId(id, sections);\n            setSelectedSections(factorySections);\n        }\n    }\n\n    const handleFileChange = ({ target }) => {\n\n        if (target.files.length > 0) {\n\n            const tempFile = target.files[0];\n            const check = checkFile(tempFile);\n\n            if (!check.ok) {\n                return toast.error(check.error, { position: toast.POSITION.TOP_CENTER });\n            }\n\n            document.querySelector('.file-name-wrapper').classList.add('show-file-name');\n            setFile(target.files[0]);\n        }\n    }\n\n\n    const handleCloseModal = () => {\n        enableScroll();\n        dispatch(uiCloseModal());\n\n        setTimeout(() => {\n            setFormValues(initialState);\n        }, 200);\n    }\n\n\n    return (\n\n        <div>\n\n            <Modal\n                isOpen={modalOpen}\n                className='add-modal animate__animated animate__fadeIn animate__fast'\n                onRequestClose={handleCloseModal}\n                contentLabel='Calendar Modal'\n                closeTimeoutMS={300}\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\n            >\n\n                <div className=\"frame\">\n                    <span className=\"close-event-modal\" onClick={handleCloseModal}><i className=\"fas fa-times\"></i></span>\n\n                    <h1 className=\"h1-modal\">Agregar Documentación</h1>\n\n                    <form onSubmit={handleSubmit}>\n\n                        <div className=\"thead-modal\">\n                            <div className=\"grid-items\">\n                                <label>Factoría: </label>\n                                <select name=\"factory\" value={factory} onChange={handleInputChange}>\n                                    <option value=\"default\" disabled>Seleccionar</option>\n                                    {factories.map(factory =>\n                                        <option key={factory.id} value={factory.id}>{factory.name}</option>)}\n                                </select>\n                            </div>\n\n                            <div className=\"grid-items\">\n                                <label>Sección: </label>\n                                <select name=\"section\" value={section} onChange={handleInputChange} disabled={selectedSections.length === 0}>\n                                    <option value=\"default\" disabled>Seleccionar</option>\n                                    {selectedSections.length > 0 &&\n                                        selectedSections.map(section =>\n                                            <option key={section.id} value={section.id}>{section.name}</option>)}\n                                </select>\n                            </div>\n\n                            <div className=\"grid-items\">\n                                <label>Descripción: </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"info\"\n                                    value={info}\n                                    onChange={handleInputChange}\n                                    autoComplete=\"off\"\n                                    placeholder=\" Descripción\" />\n                            </div>\n\n                            <div className=\"grid-items file-name-wrapper\">\n                                <label>Archivo: </label>\n                                <input type=\"text\" defaultValue={file?.name} disabled />\n                            </div>\n\n                        </div>\n\n                        <div className=\"form-wrapper-file\">\n\n                            <label className=\"btn-label-file\">\n                                <input type=\"file\" name=\"img\" onChange={handleFileChange} accept=\".pdf\" />\n                                <i className=\"fas fa-cloud-upload-alt\"></i> Cargar PDF\n                        </label>\n\n                            <button type=\"submit\" className=\"btn btn-form-agree\">Guardar</button>\n                        </div>\n\n                    </form>\n                </div>\n                {modalOpen && <ToastContainer />}\n            </Modal>\n            {!modalOpen && <ToastContainer />}\n\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { PdfLoader } from '../components/doc/PdfLoader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveDoc, startLoadFactory } from '../actions/factory';\nimport { getSectionsByFactoryId } from '../helpers/getSectionsByFactoryId';\nimport { getDocsBySectionId } from '../helpers/getDocsBySectionId';\nimport ClickAwayListener from 'react-click-away-listener';\nimport { disableScroll } from '../helpers/disable-enable-scroll';\nimport { PdfModal } from '../components/doc/PdfModal';\nimport { getDocById } from '../helpers/getDocById';\nimport { uiOpenModal } from '../actions/ui';\nimport { ButtonNew } from '../components/ui/ButtonNew';\nimport { PdfModalAdd } from '../components/doc/PdfModalAdd';\n\n\n\nexport const DocsScreen = () => {\n\n    const { factories } = useSelector(state => state.factory);\n    const { sections } = useSelector(state => state.factory);\n    const { docs } = useSelector(state => state.factory);\n    const { admin } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    // Array of sections from factory\n    const [showSections, setShowSections] = useState([]);\n    // Array of docs from a section\n    const [showPdf, setShowPdf] = useState([]);\n    // State to know if the Select is opened or closed\n    const [isRotateFactory, setIsRotateFactory] = useState(false);\n    // State to know if the Select is opened or closed\n    const [isRotateSection, setIsRotateSection] = useState(false);\n    // Breadcrumb\n    const [optionsSelected, setOptionsSelected] = useState({ factory: '', section: '' });\n\n    const [showModalDoc, setShowModalDoc] = useState(false);\n\n    // This function depends on ClickAwayListener. Will close customs selects \n    // if the user clicks outside the component\n    const handleClickAway = () => {\n        isRotateFactory && toggleFactory();\n        isRotateSection && toggleSection();\n    };\n\n    // Load and fecth factories, sections, machines and docs from DB\n    useEffect(() => {\n        dispatch(startLoadFactory());\n    }, [dispatch]);\n\n    // Reset data from custom select and breadcrumbs\n    const resetData = () => {\n        setOptionsSelected({ factory: '', section: '' });\n        setShowSections([]);\n        setShowPdf([]);\n    }\n\n\n    // When click Factory select, will set breadcrumb text,\n    // close select, will show sections and set the array of documents to an empty array. \n    const handleClickFactory = ({ target }) => {\n\n        // Set factory breadcrumb\n        setOptionsSelected({ factory: target.innerText, section: '' });\n\n        // Get sections from factory\n        const id = target.attributes[0].value;\n        const factorySections = getSectionsByFactoryId(id, sections);\n\n        // Show sections select\n        setShowSections(factorySections);\n        // Hide previous documents by setting an empty array\n        setShowPdf([]);\n    }\n\n    const handleClickSection = ({ target }) => {\n\n        // Set section breadcrumb\n        setOptionsSelected({ ...optionsSelected, section: target.innerText });\n\n        // Get docs from section\n        const id = target.attributes[0].value;\n        const sectionDocs = getDocsBySectionId(id, docs);\n\n        // Show PDF's\n        setShowPdf(sectionDocs);\n    }\n\n    const handleDocClick = (id) => {\n        const docData = getDocById(id, docs);\n        disableScroll();\n        setShowModalDoc(true);\n        dispatch(setActiveDoc(docData));\n        dispatch(uiOpenModal());\n    }\n\n    // Show & Hide Custom Select for Factories. Removing and Adding additional css classes.\n    const toggleFactory = () => {\n        const clicker = document.querySelector('.clicker');\n        const clickerSelect = document.querySelector('.factory-selector');\n\n        if (!clicker || !clickerSelect) {\n            return;\n        }\n\n        if (!isRotateFactory) {\n            clicker.classList.add('rotate');\n            clickerSelect.classList.add('showlist');\n        } else {\n            clicker.classList.remove('rotate');\n            clickerSelect.classList.remove('showlist');\n        }\n\n        setIsRotateFactory(!isRotateFactory);\n\n    }\n\n    // Show & Hide Custom Select for Sections. Removing and Adding additional css classes.\n    const toggleSection = () => {\n\n        if (!isRotateSection) {\n            document.querySelector('.clicker-2').classList.add('rotate');\n            document.querySelector('.section-selector').classList.add('showlist');\n        } else {\n            document.querySelector('.clicker-2').classList.remove('rotate');\n            document.querySelector('.section-selector').classList.remove('showlist');\n        }\n\n        setIsRotateSection(!isRotateSection);\n\n    }\n\n\n    // Button Add new Item\n    const iconData = {\n        icon: <i className=\"fas fa-file-upload\"></i>,\n        className: 'button-new doc',\n    }\n\n\n    return (\n        <div className=\"docs-main-container\">\n            <h1 className=\"h1-docs\">Documentaciones</h1>\n\n            {/*  breadcrumb */}\n            <p className={`doc-breadcrumb ${optionsSelected.factory ? 'show-bread animate__animated animate__fadeIn animate__fast' : ''}`}>\n                Factoría {optionsSelected.factory && `${optionsSelected.factory}`}\n                {optionsSelected.factory && <i className=\"fas fa-caret-right bread-arrow\"></i>}\n\n                {optionsSelected.section && `${optionsSelected.section}`}\n            </p>\n\n            {/*  Factories Custom select */}\n            <div className=\"doc-selectors\">\n                <div className=\"factory-header-selects animate__animated animate__fadeIn animate__fast\">\n                    <ClickAwayListener onClickAway={handleClickAway}>\n                        <div className=\"factory-header\" onClick={toggleFactory}>\n                            <div className=\"grid-name\">\n                                <i className=\"fas fa-industry\"></i>\n                                <h4>Factorías</h4>\n                            </div>\n                            <i className=\"fas fa-sort-down clicker\" onClick={toggleFactory}></i>\n                        </div>\n                    </ClickAwayListener>\n\n                    <div className=\"factory-selector\">\n                        <ul onClick={handleClickFactory}>\n                            {\n                                factories.map\n                                    (\n                                        factory =>\n                                            <li key={factory.id} value={factory.id}>\n                                                {factory.name}\n                                            </li>\n                                    )\n                            }\n                        </ul>\n                    </div>\n                </div>\n\n                {/*  Sections Custom select */}\n                {\n                    showSections.length > 0\n                    &&\n                    <div className=\"section-header-selects animate__animated animate__fadeIn animate__fast\">\n                        <ClickAwayListener onClickAway={handleClickAway}>\n                            <div className=\"section-header\" onClick={toggleSection}>\n                                <div className=\"grid-name\">\n                                    <i className=\"fas fa-project-diagram\"></i>\n                                    <h4>Secciones</h4>\n                                </div>\n                                <i className=\"fas fa-sort-down clicker-2\" onClick={toggleSection}></i>\n                            </div>\n                        </ClickAwayListener>\n\n                        <div className=\"section-selector\">\n                            <ul onClick={handleClickSection}>\n\n                                {\n                                    showSections.length > 0\n                                    &&\n                                    showSections.map\n                                        (\n                                            section =>\n                                                <li key={section.id} value={section.id}>\n                                                    {section.name}\n                                                </li>\n                                        )\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                }\n            </div>\n\n            {/*  Documents */}\n\n            {\n                (showPdf.length > 0)\n                    ? <div className=\"pdf-wrapper\">\n                        {showPdf.map(pdf =>\n                            <div key={pdf.id} className=\"single-pdf-wrapper animate__animated animate__fadeIn\" onClick={() => { handleDocClick(pdf.id) }}>\n                                <PdfLoader pdf={pdf} />\n                            </div>\n                        )}\n                    </div>\n\n                    : (optionsSelected.section && showPdf.length === 0) && <h3 className=\"h3-docs animate__animated animate__zoomIn\">No se ha encontrado documentación</h3>\n            }\n\n            {showModalDoc && <PdfModal setShowModalDoc={setShowModalDoc} resetData={resetData} />}\n\n            {!showModalDoc && <PdfModalAdd resetData={resetData} />}\n\n\n            {\n                admin && <ButtonNew iconData={iconData} />\n            }\n\n        </div>\n    );\n\n}\n","export const getDocById = (id, docs) => {\n\n    return docs.find(doc => doc.id === id);\n}","export const getDocsBySectionId = (id, docs) => {\n\n    if (!id || id.length < 1) {\n        return false;\n    }\n\n    return docs.filter(docs => docs.sectionId.toString() === id.toString());\n\n}","import React from 'react'\nimport { OrderForm } from '../components/order/OrderForm'\n\nexport const NewOrderScreen = () => {\n\n    return (\n        <div className=\"order-wrapper\">\n            <OrderForm />\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Navbar } from '../components/ui/Navbar';\nimport { TopBar } from '../components/ui/TopBar';\nimport { ResponsiveNav } from '../components/ui/ResponsiveNav';\n\nimport { DashboardScreen } from '../pages/DashboardScreen';\nimport { AdminScreen } from '../pages/AdminScreen';\nimport { OrderScreen } from '../pages/OrderScreen';\nimport { CalendarScreen } from '../pages/CalendarScreen';\nimport { CrewScreen } from '../pages/CrewScreen';\nimport { WarehouseScreen } from '../pages/WarehouseScreen';\nimport { HistoricalScreen } from '../pages/HistoricalScreen';\nimport { StatisticsScreen } from '../pages/StatisticsScreen';\nimport { Error404Screen } from '../pages/Error404Screen';\nimport { DocsScreen } from '../pages/DocsScreen';\nimport { NewOrderScreen } from '../pages/NewOrderScreen';\n\nimport { startLoadOrderEvents } from '../actions/calendar';\nimport { startLoadFactory } from '../actions/factory';\nimport { startLoadingCrew } from '../actions/technician';\nimport { toggleResponsive } from '../actions/nav';\nimport { startloadingStatistics } from '../actions/statistics';\nimport { startGetWarehouseItems } from '../actions/warehouse';\nimport { logout, startChecking } from '../actions/auth';\nimport { checkTokenDate } from '../helpers/checkTokenDate';\n\nexport const MainRouter = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { showResponsive } = useSelector(state => state.nav);\n\n    useEffect(() => {\n\n        const token = localStorage.getItem('token');\n        const tokenDate = localStorage.getItem('token-init-date');\n\n        if (token && tokenDate) {\n            const totalTime = checkTokenDate();\n\n            // If last token was saved at least 2hours ago\n            if (totalTime >= 2) {\n                dispatch(startChecking())\n            }\n        } else {\n            dispatch(logout());\n            history.push('/login');\n        }\n\n    }, [dispatch, history]);\n\n    useEffect(() => {\n        dispatch(startloadingStatistics());\n        dispatch(startLoadFactory());\n        dispatch(startLoadingCrew());\n        dispatch(startLoadOrderEvents());\n        dispatch(startGetWarehouseItems())\n    }, [dispatch])\n\n    useEffect(() => {\n        if (showResponsive) {\n            dispatch(toggleResponsive());\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"wrapper-nav-main\">\n            <ResponsiveNav />\n\n            <Navbar />\n            {/* toggle-container adds margin-left when Navbar is expanded  */}\n            <main>\n                <TopBar />\n                <div className='container main-container'>\n                    <Switch>\n\n                        <Route exact path=\"/\" component={DashboardScreen} />\n                        <Route exact path=\"/admin\" component={AdminScreen} />\n                        <Route exact path=\"/neworder\" component={NewOrderScreen} />\n                        <Route exact path=\"/order\" component={OrderScreen} />\n                        <Route exact path=\"/calendar\" component={CalendarScreen} />\n                        <Route exact path=\"/crew\" component={CrewScreen} />\n                        <Route exact path=\"/docs\" component={DocsScreen} />\n                        <Route exact path=\"/warehouse\" component={WarehouseScreen} />\n                        <Route exact path=\"/statistics\" component={StatisticsScreen} />\n                        <Route exact path=\"/history\" component={HistoricalScreen} />\n\n                        <Route path=\"*\" component={Error404Screen} />\n\n                    </Switch>\n                </div>\n            </main>\n        </div>\n    )\n}\n","export const checkTokenDate = () => {\n    let time = 0;\n    const now = new Date().getTime();\n    const dateToken = parseInt(localStorage.getItem('token-init-date')) || 0;\n    time = (now - dateToken) / 1000;\n    time /= 3600;\n    time = Math.abs(Math.round(time));\n\n    return time;\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n    return (\n        <div>\n            <Route\n                {...rest}\n                component={(props) =>\n                    isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />\n                }\n            />\n        </div>\n    );\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n    return (\n        <div>\n            <Route\n                {...rest}\n                component={(props) =>\n                    !isAuthenticated ? <Component {...props} /> : <Redirect to='/' />\n                }\n            />\n        </div>\n    );\n};\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n} from \"react-router-dom\";\nimport { finishChecking, startChecking } from \"../actions/auth\";\nimport { LoadingScreen } from \"../pages/LoadingScreen\";\nimport { LoginScreen } from \"../pages/LoginScreen\";\nimport { MainRouter } from \"./MainRouter\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const { checking, uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n\n        if (token) {\n            dispatch(startChecking());\n        } else {\n            dispatch(finishChecking());\n        }\n\n    }, [dispatch]);\n\n    if (checking) {\n        return (<LoadingScreen />);\n    }\n    return (\n        <Router basename='/' >\n            <div>\n                <Switch>\n\n                    <PublicRoute exact path=\"/login\" isAuthenticated={!!uid} component={LoginScreen} />\n                    <PrivateRoute path=\"/\" isAuthenticated={!!uid} component={MainRouter} />\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    loadingLogin: false,\n    uid: null,\n    name: null,\n    admin: false\n}\n\nexport const authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload\n            }\n\n        case types.authLogout:\n            return {\n                ...initialState,\n                checking: false,\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLoadingStart:\n            return {\n                ...state,\n                loadingLogin: true\n            }\n\n        case types.authLoadingFinish:\n            return {\n                ...state,\n                loadingLogin: false\n            }\n\n        default:\n            return state;\n    }\n\n}","\nimport { types } from \"../types/types\";\n\n\nconst initialState = {\n    events: [],\n    types: [],\n    breakdowns: [],\n    activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case types.loadOrderEvents: {\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n        }\n\n        case types.loadOrderTypes: {\n            return {\n                ...state,\n                types: [...action.payload]\n            }\n        }\n        case types.loadBreakdownTypes: {\n            return {\n                ...state,\n                breakdowns: [...action.payload]\n            }\n        }\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.addOrderEvent:\n            return {\n                ...state,\n                events: [...state.events, action.payload],\n            };\n\n        case types.updateOrderEvent:\n            return {\n                ...state,\n                events: state.events.map((e) => (e.id === action.payload.id ? action.payload : e)),\n            };\n\n        case types.deleteOrderEvent:\n            return {\n                ...state,\n                events: state.events.filter((e) => {\n                    return e.id.toString() !== action.payload;\n                }),\n                activeEvent: null,\n            };\n\n        case types.eventClearActive:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventCleaner:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    navExtended: false,\n    showResponsive: false,\n}\n\nexport const navReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.toggleNav:\n            return {\n                ...state,\n                navExtended: !state.navExtended\n            }\n\n        case types.toggleResponsiveNav:\n            return {\n                ...state,\n                showResponsive: !state.showResponsive\n            }\n        default:\n            return state;\n    }\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    technicians: [],\n    activeTechnician: null\n}\n\n\nexport const crewReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.crewLoadTechnicians: {\n            return {\n                ...state,\n                technicians: action.payload\n            }\n        }\n\n\n        case types.crewSetActive:\n            return {\n                ...state,\n                activeTechnician: action.payload\n            }\n\n        case types.crewClearActive:\n            return {\n                ...state,\n                activeTechnician: null\n            }\n\n        case types.crewAddNewTechnician:\n            return {\n                ...state,\n                technicians: [...state.technicians, action.payload]\n            }\n\n        case types.crewDeleteTechnician:\n            return {\n                ...state,\n                technicians: state.technicians.filter((t) => t.id !== state.activeTechnician.id),\n            };\n\n        case types.crewUpdateTechnician:\n            return {\n                ...state,\n                technicians: state.technicians.map(t => t.id === state.activeTechnician.id ? action.payload : t)\n            }\n\n        case types.crewClearTechnician:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n    modalAlert: false\n};\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true,\n            };\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false,\n            };\n\n        case types.uiToggleAlerts:\n            return {\n                ...state,\n                modalAlert: !state.modalAlert,\n            };\n\n        default:\n            return state;\n    }\n};\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    items: [],\n    activeItem: null,\n    itemsToOrder: [],\n}\n\nexport const warehouseReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.warehouseLoaded:\n            return {\n                ...state,\n                items: [...action.payload]\n            }\n\n        case types.warehouseAddItem:\n            return {\n                ...state,\n                items: [...state.items, action.payload],\n                activeItem: null\n            }\n\n        case types.warehouseUpdateItem:\n            return {\n                ...state,\n                items: state.items.map(item => (item.code === action.payload.code) ? action.payload : item),\n            }\n\n        case types.warehouseRemoveItem:\n            return {\n                ...state,\n                items: state.items.filter(item => item.code !== state.activeItem.code),\n                activeItem: null\n            }\n\n        case types.warehouseSetActiveItem:\n            return {\n                ...state,\n                activeItem: action.payload\n            }\n\n        case types.warehouseRemoveActiveItem:\n            return {\n                ...state,\n                activeItem: null\n            }\n\n        case types.warehouseItemsToOrder: {\n            return {\n                ...state,\n                itemsToOrder: action.payload\n            }\n        }\n\n        case types.warehouseClear:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\"\n\n\nconst initialState = {\n    factories: [],\n    sections: [],\n    machines: [],\n    numbers: [],\n    docs: [],\n    activeDoc: null\n}\n\n\nexport const factoryReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.factorySetFactories: {\n            return {\n                ...state,\n                factories: action.payload\n            }\n        }\n\n        case types.factorySetSections: {\n            return {\n                ...state,\n                sections: action.payload\n            }\n        }\n\n        case types.factorySetMachines: {\n            return {\n                ...state,\n                machines: action.payload\n            }\n        }\n\n        case types.factorySetNumberSections: {\n            return {\n                ...state,\n                numbers: action.payload\n            }\n        }\n\n        case types.factorySetDocs: {\n            return {\n                ...state,\n                docs: action.payload\n            }\n        }\n\n        case types.factorySetActiveDoc: {\n            return {\n                ...state,\n                activeDoc: action.payload\n            }\n        }\n\n        case types.factoryClearActiveDoc: {\n            return {\n                ...state,\n                activeDoc: null\n            }\n        }\n\n        case types.factoryAddDoc: {\n            return {\n                ...state,\n                docs: [...state.docs, action.payload]\n            }\n        }\n\n        case types.factoryDeleteDoc: {\n            return {\n                ...state,\n                docs: state.docs.filter(doc => doc.id !== state.activeDoc.id),\n                activeDoc: null\n            }\n        }\n\n        case types.factoryClearFactory: {\n            return {\n                ...initialState\n            }\n        }\n        default:\n            return state;\n    }\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    warnings: []\n}\n\n\nexport const warningReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.warningLoadWarnings:\n            return {\n                ...state,\n                warnings: [...action.payload]\n            }\n\n        case types.warningAddWarning:\n            return {\n                ...state,\n                warnings: [action.payload, ...state.warnings]\n            }\n\n        case types.warningRemoveWarning:\n            return {\n                ...state,\n                warnings: state.warnings.filter(warning => warning.id !== action.payload)\n            }\n\n        case types.warningClear:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}","import { types } from \"../types/types\"\n\n\nconst initialState = {\n    weeks: [],\n    threeWeekSections: [],\n    lastWeekByOrderType: {},\n    lastWeekByBreakdown: {},\n    lastWeekByTechnician: {},\n    interventionsWeeks: {},\n    totalTimeByWeek: {}\n}\n\nexport const statisticsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.statisticsLoadWeeks: {\n            return {\n                ...state,\n                weeks: [...action.payload]\n            }\n        }\n\n        case types.statisticsLoadThreeWeeksSections: {\n            return {\n                ...state,\n                threeWeekSections: [...action.payload]\n            }\n        }\n\n        case types.statisticsLoadlastWeekByOrderType: {\n            return {\n                ...state,\n                lastWeekByOrderType: { ...action.payload }\n            }\n        }\n\n        case types.statisticsLoadlastWeekByBreakdown: {\n            return {\n                ...state,\n                lastWeekByBreakdown: { ...action.payload }\n            }\n        }\n\n        case types.statisticsLoadlastWeekByTechnician: {\n            return {\n                ...state,\n                lastWeekByTechnician: { ...action.payload }\n            }\n        }\n\n        case types.statisticsLoadInterventionsWeeks: {\n            return {\n                ...state,\n                interventionsWeeks: { ...action.payload }\n            }\n        }\n\n        case types.statisticsLoadTotalTimeByWeek: {\n            return {\n                ...state,\n                totalTimeByWeek: { ...action.payload }\n            }\n        }\n\n        case types.statisticsClear: {\n            return {\n                ...initialState\n            }\n        }\n\n        default:\n            return state\n    }\n\n\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { navReducer } from \"./navReducer\";\nimport { crewReducer } from \"./crewReducer\";\nimport { uiReducer } from \"./uiReducer\";\nimport { warehouseReducer } from \"./warehouseReducer\";\nimport { factoryReducer } from \"./factoryReducer\";\nimport { warningReducer } from \"./warningReducer\";\nimport { statisticsReducer } from \"./statisticsReducer\";\n\nexport const rootReducer = combineReducers({\n    auth: authReducer,\n    nav: navReducer,\n    calendar: calendarReducer,\n    ui: uiReducer,\n    crew: crewReducer,\n    warehouse: warehouseReducer,\n    factory: factoryReducer,\n    warning: warningReducer,\n    statistics: statisticsReducer\n});","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers =\n    (typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n","import React from 'react'\nimport { AppRouter } from './router/AppRouter'\n\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './styles/styles.scss';\n\n\nexport const MtileApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MtileApp } from './MtileApp';\n\n\nReactDOM.render(<MtileApp />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}